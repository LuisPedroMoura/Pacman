pygame 1.9.4
Hello from the pygame community. https://www.pygame.org/contribute.html
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15]]
subcorridor1 is: [[4, 15]]
path_coords is: [[4, 15], [3, 15], [4, 15], [3, 15]]

###################################################
Pac-Man is in position [3, 15]

Pac-Man distance to target [4, 15] is: 1
pPac-Man corridor is :corr<[[14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15]]>
crossroad: [4, 15]
ghost at crossroad is: None
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [4, 15]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15]]
subcorridor1 is: []
path_coords is: [[4, 14], [4, 14], [4, 15], [4, 15]]

###################################################
Pac-Man is in position [4, 15]

Pac-Man distance to target [4, 14] is: 1
pPac-Man corridor is :corr<[[14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15]]>
crossroad: [4, 15]
ghost at crossroad is: None
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [4, 14]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[4, 10], [4, 11], [4, 12], [4, 13]]
subcorridor1 is: [[4, 15]]
path_coords is: [[4, 13], [4, 13], [4, 14], [4, 14]]

###################################################
Pac-Man is in position [4, 14]

Pac-Man distance to target [4, 13] is: 1
pPac-Man corridor is :corr<[[4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15]]>
crossroad: [4, 10]
ghost at crossroad is: None
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [4, 13]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[4, 10], [4, 11], [4, 12]]
subcorridor1 is: [[4, 14], [4, 15]]
path_coords is: [[4, 12], [4, 12], [4, 13], [4, 13]]

###################################################
Pac-Man is in position [4, 13]
Ghost [6, 15] is at crossroad [4, 15] at distance 4 from Pc-Man at distance 2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [4, 12] is: 1
pPac-Man corridor is :corr<[[4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15]]>
crossroad: [4, 10]
ghost at crossroad is: None
Ghost [6, 15] is at distance 4 from Pac-Man and 2 from crossroad [4, 15]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [4, 12]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[4, 10], [4, 11]]
subcorridor1 is: [[4, 13], [4, 14], [4, 15]]
path_coords is: [[4, 11], [4, 11], [4, 12], [4, 12]]

###################################################
Pac-Man is in position [4, 12]
Ghost [6, 14] is at crossroad [4, 15] at distance 6 from Pc-Man at distance 3 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 3
Pac-Man distance to target [4, 11] is: 1
pPac-Man corridor is :corr<[[4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15]]>
crossroad: [4, 10]
ghost at crossroad is: None
Ghost [6, 14] is at distance 6 from Pac-Man and 3 from crossroad [4, 15]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [4, 11]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[4, 10]]
subcorridor1 is: [[4, 12], [4, 13], [4, 14], [4, 15]]
path_coords is: [[4, 10], [4, 10], [4, 11], [4, 11]]

###################################################
Pac-Man is in position [4, 11]
Ghost [6, 13] is at crossroad [4, 10] at distance 6 from Pc-Man  at distance 5 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 1

Pac-Man distance to target [4, 10] is: 1
pPac-Man corridor is :corr<[[4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15]]>
crossroad: [4, 10]
ghost at crossroad is: ghost([6, 13])
Ghost [6, 13] is at distance 6 from Pac-Man and 5 from crossroad [4, 10]
---> before condition: 6, 1
---> verifying if ghost: ghost([6, 13])is in corridor [[4, 10], [4, 11]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[6, 12], [6, 13]]
GHOST_INFO: pacman path coordinates are: [[4, 10], [4, 10], [4, 11], [4, 11]]
GHOST_INFO: ghost coordinate of interception is: None
valid: ghost nearby cannot intercept
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [4, 10]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[4, 7], [4, 8], [4, 9]]
subcorridor1 is: []
path_coords is: [[3, 10], [3, 10], [4, 10], [4, 10]]

###################################################
Pac-Man is in position [4, 10]
Ghost [6, 12] is at crossroad [4, 10] at distance 4 from Pc-Man at distance 4 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 0
Pac-Man distance to target [3, 10] is: 1
pPac-Man corridor is :corr<[[4, 7], [4, 8], [4, 9], [4, 10]]>
crossroad: [4, 10]
ghost at crossroad is: ghost([6, 12])
Ghost [6, 12] is at distance 4 from Pac-Man and 4 from crossroad [4, 10]
---> before condition: 4, 1
---> verifying if ghost: ghost([6, 12])is in corridor [[3, 10], [4, 10]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[6, 10], [6, 11], [6, 12]]
GHOST_INFO: pacman path coordinates are: [[3, 10], [3, 10], [4, 10], [4, 10]]
GHOST_INFO: ghost coordinate of interception is: None
valid: ghost nearby cannot intercept
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [3, 10]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 4], [2, 5], [2, 6], [2, 7], [1, 7], [1, 8], [1, 9], [1, 10], [2, 10]]
subcorridor1 is: [[4, 10]]
path_coords is: [[2, 10], [2, 10], [3, 10], [3, 10]]

###################################################
Pac-Man is in position [3, 10]
Ghost [6, 11] is at crossroad [4, 10] at distance 4 from Pc-Man at distance 3 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 1
Pac-Man distance to target [2, 10] is: 1
pPac-Man corridor is :corr<[[2, 4], [2, 5], [2, 6], [2, 7], [1, 7], [1, 8], [1, 9], [1, 10], [2, 10], [3, 10], [4, 10]]>
crossroad: [2, 4]
ghost at crossroad is: None
Ghost [6, 11] is at distance 4 from Pac-Man and 3 from crossroad [4, 10]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [2, 10]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 4], [2, 5], [2, 6], [2, 7], [1, 7], [1, 8], [1, 9], [1, 10]]
subcorridor1 is: [[3, 10], [4, 10]]
path_coords is: [[1, 10], [1, 10], [2, 10], [2, 10]]

###################################################
Pac-Man is in position [2, 10]
Ghost [6, 10] is at crossroad [4, 10] at distance 4 from Pc-Man at distance 2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [1, 10] is: 1
pPac-Man corridor is :corr<[[2, 4], [2, 5], [2, 6], [2, 7], [1, 7], [1, 8], [1, 9], [1, 10], [2, 10], [3, 10], [4, 10]]>
crossroad: [2, 4]
ghost at crossroad is: None
Ghost [6, 10] is at distance 4 from Pac-Man and 2 from crossroad [4, 10]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [1, 10]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 4], [2, 5], [2, 6], [2, 7], [1, 7], [1, 8], [1, 9]]
subcorridor1 is: [[2, 10], [3, 10], [4, 10]]
path_coords is: [[1, 9], [1, 9], [1, 10], [1, 10]]

###################################################
Pac-Man is in position [1, 10]
Ghost [5, 10] is at crossroad [4, 10] at distance 4 from Pc-Man at distance 1 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 3
Pac-Man distance to target [1, 9] is: 1
pPac-Man corridor is :corr<[[2, 4], [2, 5], [2, 6], [2, 7], [1, 7], [1, 8], [1, 9], [1, 10], [2, 10], [3, 10], [4, 10]]>
crossroad: [2, 4]
ghost at crossroad is: None
Ghost [5, 10] is at distance 4 from Pac-Man and 1 from crossroad [4, 10]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [1, 9]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 4], [2, 5], [2, 6], [2, 7], [1, 7], [1, 8]]
subcorridor1 is: [[1, 10], [2, 10], [3, 10], [4, 10]]
path_coords is: [[1, 8], [1, 8], [1, 9], [1, 9]]

###################################################
Pac-Man is in position [1, 9]
Ghost [4, 10] is at crossroad [4, 10] at distance 4 from Pc-Man at distance 0 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 4
Pac-Man distance to target [1, 8] is: 1
pPac-Man corridor is :corr<[[2, 4], [2, 5], [2, 6], [2, 7], [1, 7], [1, 8], [1, 9], [1, 10], [2, 10], [3, 10], [4, 10]]>
crossroad: [2, 4]
ghost at crossroad is: None
Ghost [4, 10] is at distance 4 from Pac-Man and 0 from crossroad [4, 10]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [1, 8]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 4], [2, 5], [2, 6], [2, 7], [1, 7]]
subcorridor1 is: [[1, 9], [1, 10], [2, 10], [3, 10], [4, 10]]
path_coords is: [[1, 7], [1, 7], [1, 8], [1, 8]]

###################################################
Pac-Man is in position [1, 8]
Ghost [3, 10] is at crossroad [4, 10] at distance 4 from Pc-Man at distance -1 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 5
Pac-Man distance to target [1, 7] is: 1
pPac-Man corridor is :corr<[[2, 4], [2, 5], [2, 6], [2, 7], [1, 7], [1, 8], [1, 9], [1, 10], [2, 10], [3, 10], [4, 10]]>
crossroad: [2, 4]
ghost at crossroad is: None
Ghost [3, 10] is at distance 4 from Pac-Man and -1 from crossroad [4, 10]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [1, 7]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 4], [2, 5], [2, 6], [2, 7]]
subcorridor1 is: [[1, 8], [1, 9], [1, 10], [2, 10], [3, 10], [4, 10]]
path_coords is: [[2, 7], [2, 7], [1, 7], [1, 7]]

###################################################
Pac-Man is in position [1, 7]
Ghost [2, 10] is at crossroad [4, 10] at distance 4 from Pc-Man at distance -2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 6
Pac-Man distance to target [2, 7] is: 1
pPac-Man corridor is :corr<[[2, 4], [2, 5], [2, 6], [2, 7], [1, 7], [1, 8], [1, 9], [1, 10], [2, 10], [3, 10], [4, 10]]>
crossroad: [2, 4]
ghost at crossroad is: None
Ghost [2, 10] is at distance 4 from Pac-Man and -2 from crossroad [4, 10]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [2, 7]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 4], [2, 5], [2, 6]]
subcorridor1 is: [[1, 7], [1, 8], [1, 9], [1, 10], [2, 10], [3, 10], [4, 10]]
path_coords is: [[2, 6], [2, 6], [2, 7], [2, 7]]

###################################################
Pac-Man is in position [2, 7]
Ghost [1, 10] is at crossroad [4, 10] at distance 4 from Pc-Man at distance -3 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 7
Pac-Man distance to target [2, 6] is: 1
pPac-Man corridor is :corr<[[2, 4], [2, 5], [2, 6], [2, 7], [1, 7], [1, 8], [1, 9], [1, 10], [2, 10], [3, 10], [4, 10]]>
crossroad: [2, 4]
ghost at crossroad is: None
Ghost [1, 10] is at distance 4 from Pac-Man and -3 from crossroad [4, 10]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [2, 6]
GOT INTO: MODE.PURSUIT
subcorridor0 is: [[2, 4], [2, 5]]
subcorridor1 is: [[2, 7], [1, 7], [1, 8], [1, 9], [1, 10], [2, 10], [3, 10], [4, 10]]
path_coords is: [[1, 10], [2, 6], [2, 7], [1, 7], [1, 8], [1, 9], [1, 10], [2, 6]]

###################################################
Pac-Man is in position [2, 6]

Pac-Man distance to target [1, 10] is: 5
pPac-Man corridor is :corr<[[2, 4], [2, 5], [2, 6], [2, 7], [1, 7], [1, 8], [1, 9], [1, 10], [2, 10], [3, 10], [4, 10]]>
crossroad: [4, 10]
ghost at crossroad is: None
valid: no ghost
PURSUIT MODE IS RETURNING NEXT MOVE: [2, 7]
GOT INTO: MODE.PURSUIT
subcorridor0 is: [[2, 4], [2, 5], [2, 6]]
subcorridor1 is: [[1, 7], [1, 8], [1, 9], [1, 10], [2, 10], [3, 10], [4, 10]]
path_coords is: [[1, 9], [2, 7], [1, 7], [1, 8], [1, 9], [2, 7]]

###################################################
Pac-Man is in position [2, 7]

Pac-Man distance to target [1, 9] is: 3
pPac-Man corridor is :corr<[[2, 4], [2, 5], [2, 6], [2, 7], [1, 7], [1, 8], [1, 9], [1, 10], [2, 10], [3, 10], [4, 10]]>
crossroad: [4, 10]
ghost at crossroad is: None
valid: no ghost
PURSUIT MODE IS RETURNING NEXT MOVE: [1, 7]
GOT INTO: MODE.PURSUIT
subcorridor0 is: [[2, 4], [2, 5], [2, 6], [2, 7]]
subcorridor1 is: [[1, 8], [1, 9], [1, 10], [2, 10], [3, 10], [4, 10]]
path_coords is: [[1, 9], [1, 7], [1, 8], [1, 9], [1, 7]]

###################################################
Pac-Man is in position [1, 7]

Pac-Man distance to target [1, 9] is: 2
pPac-Man corridor is :corr<[[2, 4], [2, 5], [2, 6], [2, 7], [1, 7], [1, 8], [1, 9], [1, 10], [2, 10], [3, 10], [4, 10]]>
crossroad: [4, 10]
ghost at crossroad is: None
valid: no ghost
PURSUIT MODE IS RETURNING NEXT MOVE: [1, 8]
GOT INTO: MODE.PURSUIT
subcorridor0 is: [[2, 4], [2, 5], [2, 6], [2, 7], [1, 7]]
subcorridor1 is: [[1, 9], [1, 10], [2, 10], [3, 10], [4, 10]]
path_coords is: [[6, 16], [6, 15], [6, 16], [4, 15], [5, 15], [6, 15], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [1, 8], [1, 9], [1, 10], [2, 10], [3, 10], [4, 10], [1, 8]]

###################################################
Pac-Man is in position [1, 8]

Pac-Man distance to target [6, 16] is: 13
pPac-Man corridor is :corr<[[2, 4], [2, 5], [2, 6], [2, 7], [1, 7], [1, 8], [1, 9], [1, 10], [2, 10], [3, 10], [4, 10]]>
crossroad: [4, 10]
ghost at crossroad is: None
valid: no ghost
PURSUIT MODE IS RETURNING NEXT MOVE: [1, 9]
GOT INTO: MODE.PURSUIT
subcorridor0 is: [[2, 4], [2, 5], [2, 6], [2, 7], [1, 7], [1, 8]]
subcorridor1 is: [[1, 10], [2, 10], [3, 10], [4, 10]]
path_coords is: [[6, 16], [6, 15], [6, 16], [4, 15], [5, 15], [6, 15], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [1, 9], [1, 10], [2, 10], [3, 10], [4, 10], [1, 9]]

###################################################
Pac-Man is in position [1, 9]

Pac-Man distance to target [6, 16] is: 12
pPac-Man corridor is :corr<[[2, 4], [2, 5], [2, 6], [2, 7], [1, 7], [1, 8], [1, 9], [1, 10], [2, 10], [3, 10], [4, 10]]>
crossroad: [4, 10]
ghost at crossroad is: None
valid: no ghost
PURSUIT MODE IS RETURNING NEXT MOVE: [1, 10]
GOT INTO: MODE.PURSUIT
subcorridor0 is: [[2, 4], [2, 5], [2, 6], [2, 7], [1, 7], [1, 8], [1, 9]]
subcorridor1 is: [[2, 10], [3, 10], [4, 10]]
path_coords is: [[6, 17], [6, 15], [6, 16], [6, 17], [4, 15], [5, 15], [6, 15], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [1, 10], [2, 10], [3, 10], [4, 10], [1, 10]]

###################################################
Pac-Man is in position [1, 10]

Pac-Man distance to target [6, 17] is: 12
pPac-Man corridor is :corr<[[2, 4], [2, 5], [2, 6], [2, 7], [1, 7], [1, 8], [1, 9], [1, 10], [2, 10], [3, 10], [4, 10]]>
crossroad: [4, 10]
ghost at crossroad is: None
valid: no ghost
PURSUIT MODE IS RETURNING NEXT MOVE: [2, 10]
GOT INTO: MODE.PURSUIT
subcorridor0 is: [[2, 4], [2, 5], [2, 6], [2, 7], [1, 7], [1, 8], [1, 9], [1, 10]]
subcorridor1 is: [[3, 10], [4, 10]]
path_coords is: [[6, 17], [6, 15], [6, 16], [6, 17], [4, 15], [5, 15], [6, 15], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [2, 10], [3, 10], [4, 10], [2, 10]]

###################################################
Pac-Man is in position [2, 10]

Pac-Man distance to target [6, 17] is: 11
pPac-Man corridor is :corr<[[2, 4], [2, 5], [2, 6], [2, 7], [1, 7], [1, 8], [1, 9], [1, 10], [2, 10], [3, 10], [4, 10]]>
crossroad: [4, 10]
ghost at crossroad is: None
valid: no ghost
PURSUIT MODE IS RETURNING NEXT MOVE: [3, 10]
GOT INTO: MODE.PURSUIT
subcorridor0 is: [[2, 4], [2, 5], [2, 6], [2, 7], [1, 7], [1, 8], [1, 9], [1, 10], [2, 10]]
subcorridor1 is: [[4, 10]]
path_coords is: [[6, 18], [6, 15], [6, 16], [6, 17], [6, 18], [4, 15], [5, 15], [6, 15], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [3, 10], [4, 10], [3, 10]]

###################################################
Pac-Man is in position [3, 10]

Pac-Man distance to target [6, 18] is: 11
pPac-Man corridor is :corr<[[2, 4], [2, 5], [2, 6], [2, 7], [1, 7], [1, 8], [1, 9], [1, 10], [2, 10], [3, 10], [4, 10]]>
crossroad: [4, 10]
ghost at crossroad is: None
valid: no ghost
PURSUIT MODE IS RETURNING NEXT MOVE: [4, 10]
GOT INTO: MODE.PURSUIT
subcorridor0 is: []
subcorridor1 is: [[5, 10], [6, 10]]
path_coords is: [[6, 18], [6, 15], [6, 16], [6, 17], [6, 18], [4, 15], [5, 15], [6, 15], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [4, 10]]

###################################################
Pac-Man is in position [4, 10]

Pac-Man distance to target [6, 18] is: 10
pPac-Man corridor is :corr<[[4, 10], [5, 10], [6, 10]]>
crossroad: [4, 10]
ghost at crossroad is: None
valid: no ghost
PURSUIT MODE IS RETURNING NEXT MOVE: [4, 11]
GOT INTO: MODE.PURSUIT
subcorridor0 is: [[4, 10]]
subcorridor1 is: [[4, 12], [4, 13], [4, 14], [4, 15]]
path_coords is: [[6, 19], [6, 18], [6, 19], [6, 15], [6, 16], [6, 17], [6, 18], [4, 15], [5, 15], [6, 15], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [4, 11]]

###################################################
Pac-Man is in position [4, 11]

Pac-Man distance to target [6, 19] is: 10
pPac-Man corridor is :corr<[[4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15]]>
crossroad: [4, 15]
ghost at crossroad is: None
valid: no ghost
PURSUIT MODE IS RETURNING NEXT MOVE: [4, 12]
GOT INTO: MODE.PURSUIT
subcorridor0 is: [[4, 10], [4, 11]]
subcorridor1 is: [[4, 13], [4, 14], [4, 15]]
path_coords is: [[6, 19], [6, 18], [6, 19], [6, 15], [6, 16], [6, 17], [6, 18], [4, 15], [5, 15], [6, 15], [4, 12], [4, 13], [4, 14], [4, 15], [4, 12]]

###################################################
Pac-Man is in position [4, 12]
Ghost [6, 15] is at crossroad [4, 15] at distance 5 from Pc-Man at distance 2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 3
Pac-Man distance to target [6, 19] is: 9
pPac-Man corridor is :corr<[[4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15]]>
crossroad: [4, 15]
ghost at crossroad is: ghost([6, 15])
Ghost [6, 15] is at distance 5 from Pac-Man and 2 from crossroad [4, 15]
---> before condition: 5, 9
---> verifying if ghost: ghost([6, 15])is in corridor [[4, 12], [4, 13], [4, 14], [4, 15]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

PURSUIT MODE IS RETURNING NEXT MOVE: [4, 13]
GOT INTO: MODE.PURSUIT
subcorridor0 is: [[4, 10], [4, 11], [4, 12]]
subcorridor1 is: [[4, 14], [4, 15]]
path_coords is: [[6, 20], [4, 20], [5, 20], [6, 20], [4, 15], [4, 16], [4, 17], [4, 18], [4, 19], [4, 20], [4, 13], [4, 14], [4, 15], [4, 13]]

###################################################
Pac-Man is in position [4, 13]
Ghost [6, 14] is at crossroad [4, 15] at distance 5 from Pc-Man at distance 3 of crossroad 
with the semaphore SEMAPHORE.YELLOW
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [6, 20] is: 9
pPac-Man corridor is :corr<[[4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15]]>
crossroad: [4, 15]
ghost at crossroad is: ghost([6, 14])
Ghost [6, 14] is at distance 5 from Pac-Man and 3 from crossroad [4, 15]
---> before condition: 5, 9
---> verifying if ghost: ghost([6, 14])is in corridor [[4, 13], [4, 14], [4, 15]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[6, 14], [6, 15]]
GHOST_INFO: pacman path coordinates are: [[6, 20], [4, 20], [5, 20], [6, 20], [4, 15], [4, 16], [4, 17], [4, 18], [4, 19], [4, 20], [4, 13], [4, 14], [4, 15], [4, 13]]
GHOST_INFO: ghost coordinate of interception is: None
valid: ghost nearby cannot intercept
MOVE IS REMAING VALID
 ------------ 

PURSUIT MODE IS RETURNING NEXT MOVE: [4, 14]
GOT INTO: MODE.PURSUIT
subcorridor0 is: [[4, 10], [4, 11], [4, 12], [4, 13]]
subcorridor1 is: [[4, 15]]
path_coords is: [[6, 20], [4, 20], [5, 20], [6, 20], [4, 15], [4, 16], [4, 17], [4, 18], [4, 19], [4, 20], [4, 14], [4, 15], [4, 14]]

###################################################
Pac-Man is in position [4, 14]
Ghost [6, 13] is at crossroad [4, 15] at distance 5 from Pc-Man at distance 4 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 1
Pac-Man distance to target [6, 20] is: 8
pPac-Man corridor is :corr<[[4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15]]>
crossroad: [4, 15]
ghost at crossroad is: ghost([6, 13])
Ghost [6, 13] is at distance 5 from Pac-Man and 4 from crossroad [4, 15]
---> before condition: 5, 8
---> verifying if ghost: ghost([6, 13])is in corridor [[4, 14], [4, 15]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[6, 13], [6, 14], [6, 15]]
GHOST_INFO: pacman path coordinates are: [[6, 20], [4, 20], [5, 20], [6, 20], [4, 15], [4, 16], [4, 17], [4, 18], [4, 19], [4, 20], [4, 14], [4, 15], [4, 14]]
GHOST_INFO: ghost coordinate of interception is: None
valid: ghost nearby cannot intercept
MOVE IS REMAING VALID
 ------------ 

PURSUIT MODE IS RETURNING NEXT MOVE: [4, 15]
GOT INTO: MODE.PURSUIT
subcorridor0 is: [[14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15]]
subcorridor1 is: []
path_coords is: [[7, 20], [6, 20], [7, 20], [4, 20], [5, 20], [6, 20], [4, 15], [4, 16], [4, 17], [4, 18], [4, 19], [4, 20], [4, 15]]

###################################################
Pac-Man is in position [4, 15]
Ghost [6, 12] is at crossroad [4, 15] at distance 5 from Pc-Man at distance 5 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 0
Pac-Man distance to target [7, 20] is: 8
pPac-Man corridor is :corr<[[14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15]]>
crossroad: [4, 15]
ghost at crossroad is: ghost([6, 12])
Ghost [6, 12] is at distance 5 from Pac-Man and 5 from crossroad [4, 15]
---> before condition: 5, 8
---> verifying if ghost: ghost([6, 12])is in corridor [[4, 15], [4, 16], [4, 17], [4, 18], [4, 19], [4, 20]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[6, 12], [6, 13], [6, 14], [6, 15]]
GHOST_INFO: pacman path coordinates are: [[7, 20], [6, 20], [7, 20], [4, 20], [5, 20], [6, 20], [4, 15], [4, 16], [4, 17], [4, 18], [4, 19], [4, 20], [4, 15]]
GHOST_INFO: ghost coordinate of interception is: None
valid: ghost nearby cannot intercept
MOVE IS REMAING VALID
 ------------ 

PURSUIT MODE IS RETURNING NEXT MOVE: [4, 16]
GOT INTO: MODE.PURSUIT
subcorridor0 is: [[4, 15]]
subcorridor1 is: [[4, 17], [4, 18], [4, 19], [4, 20]]
path_coords is: [[7, 20], [6, 20], [7, 20], [4, 20], [5, 20], [6, 20], [4, 16], [4, 17], [4, 18], [4, 19], [4, 20], [4, 16]]

###################################################
Pac-Man is in position [4, 16]
Ghost [7, 12] is at crossroad [4, 15] at distance 7 from Pc-Man  at distance 6 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 1

Pac-Man distance to target [7, 20] is: 7
pPac-Man corridor is :corr<[[4, 15], [4, 16], [4, 17], [4, 18], [4, 19], [4, 20]]>
crossroad: [4, 20]
ghost at crossroad is: None
Ghost [7, 12] is at distance 7 from Pac-Man and 6 from crossroad [4, 15]
valid: no ghost
PURSUIT MODE IS RETURNING NEXT MOVE: [4, 17]
GOT INTO: MODE.PURSUIT
subcorridor0 is: [[4, 15], [4, 16]]
subcorridor1 is: [[4, 18], [4, 19], [4, 20]]
path_coords is: [[8, 20], [6, 20], [7, 20], [8, 20], [4, 20], [5, 20], [6, 20], [4, 17], [4, 18], [4, 19], [4, 20], [4, 17]]

###################################################
Pac-Man is in position [4, 17]
Ghost [8, 12] is at crossroad [4, 15] at distance 9 from Pc-Man  at distance 7 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 2

Pac-Man distance to target [8, 20] is: 7
pPac-Man corridor is :corr<[[4, 15], [4, 16], [4, 17], [4, 18], [4, 19], [4, 20]]>
crossroad: [4, 20]
ghost at crossroad is: None
Ghost [8, 12] is at distance 9 from Pac-Man and 7 from crossroad [4, 15]
valid: no ghost
PURSUIT MODE IS RETURNING NEXT MOVE: [4, 18]
GOT INTO: MODE.PURSUIT
subcorridor0 is: [[4, 15], [4, 16], [4, 17]]
subcorridor1 is: [[4, 19], [4, 20]]
path_coords is: [[8, 20], [6, 20], [7, 20], [8, 20], [4, 20], [5, 20], [6, 20], [4, 18], [4, 19], [4, 20], [4, 18]]

###################################################
Pac-Man is in position [4, 18]
Ghost [9, 12] is at crossroad [4, 15] at distance 11 from Pc-Man  at distance 8 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 3

Pac-Man distance to target [8, 20] is: 6
pPac-Man corridor is :corr<[[4, 15], [4, 16], [4, 17], [4, 18], [4, 19], [4, 20]]>
crossroad: [4, 20]
ghost at crossroad is: None
Ghost [9, 12] is at distance 11 from Pac-Man and 8 from crossroad [4, 15]
valid: no ghost
PURSUIT MODE IS RETURNING NEXT MOVE: [4, 19]
GOT INTO: MODE.PURSUIT
subcorridor0 is: [[4, 15], [4, 16], [4, 17], [4, 18]]
subcorridor1 is: [[4, 20]]
path_coords is: [[8, 21], [6, 20], [7, 20], [8, 20], [8, 21], [4, 20], [5, 20], [6, 20], [4, 19], [4, 20], [4, 19]]

###################################################
Pac-Man is in position [4, 19]
Ghost [10, 12] is at crossroad [4, 15] at distance 13 from Pc-Man  at distance 9 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 4

Pac-Man distance to target [8, 21] is: 6
pPac-Man corridor is :corr<[[4, 15], [4, 16], [4, 17], [4, 18], [4, 19], [4, 20]]>
crossroad: [4, 20]
ghost at crossroad is: None
Ghost [10, 12] is at distance 13 from Pac-Man and 9 from crossroad [4, 15]
valid: no ghost
PURSUIT MODE IS RETURNING NEXT MOVE: [4, 20]
GOT INTO: MODE.PURSUIT
subcorridor0 is: [[2, 26], [2, 25], [2, 24], [2, 23], [1, 23], [1, 22], [1, 21], [1, 20], [2, 20], [3, 20]]
subcorridor1 is: []
path_coords is: [[8, 21], [6, 20], [7, 20], [8, 20], [8, 21], [4, 20], [5, 20], [6, 20], [4, 20]]

###################################################
Pac-Man is in position [4, 20]
Ghost [11, 12] is at crossroad [4, 20] at distance 15 from Pc-Man at distance 15 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 0
Pac-Man distance to target [8, 21] is: 5
pPac-Man corridor is :corr<[[2, 26], [2, 25], [2, 24], [2, 23], [1, 23], [1, 22], [1, 21], [1, 20], [2, 20], [3, 20], [4, 20]]>
crossroad: [4, 20]
ghost at crossroad is: ghost([11, 12])
Ghost [11, 12] is at distance 15 from Pac-Man and 15 from crossroad [4, 20]
---> before condition: 15, 5
---> verifying if ghost: ghost([11, 12])is in corridor [[4, 20], [5, 20], [6, 20]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

PURSUIT MODE IS RETURNING NEXT MOVE: [5, 20]
GOT INTO: MODE.PURSUIT
subcorridor0 is: [[4, 20]]
subcorridor1 is: [[6, 20]]
path_coords is: [[8, 22], [6, 20], [7, 20], [8, 20], [8, 21], [8, 22], [5, 20], [6, 20], [5, 20]]

###################################################
Pac-Man is in position [5, 20]
Ghost [12, 12] is at crossroad [6, 20] at distance 15 from Pc-Man at distance 14 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 1
Pac-Man distance to target [8, 22] is: 5
pPac-Man corridor is :corr<[[4, 20], [5, 20], [6, 20]]>
crossroad: [6, 20]
ghost at crossroad is: ghost([12, 12])
Ghost [12, 12] is at distance 15 from Pac-Man and 14 from crossroad [6, 20]
---> before condition: 15, 5
---> verifying if ghost: ghost([12, 12])is in corridor [[5, 20], [6, 20]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

PURSUIT MODE IS RETURNING NEXT MOVE: [6, 20]
GOT INTO: MODE.PURSUIT
subcorridor0 is: []
subcorridor1 is: [[7, 20], [8, 20], [8, 21], [8, 22], [8, 23]]
path_coords is: [[8, 22], [6, 20], [7, 20], [8, 20], [8, 21], [8, 22], [6, 20]]

###################################################
Pac-Man is in position [6, 20]
Ghost [12, 13] is at crossroad [6, 20] at distance 13 from Pc-Man  at distance 13 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 0

Pac-Man distance to target [8, 22] is: 4
pPac-Man corridor is :corr<[[6, 20], [7, 20], [8, 20], [8, 21], [8, 22], [8, 23]]>
crossroad: [8, 23]
ghost at crossroad is: None
Ghost [12, 13] is at distance 13 from Pac-Man and 13 from crossroad [6, 20]
valid: no ghost
PURSUIT MODE IS RETURNING NEXT MOVE: [7, 20]
GOT INTO: MODE.PURSUIT
subcorridor0 is: [[6, 20]]
subcorridor1 is: [[8, 20], [8, 21], [8, 22], [8, 23]]
path_coords is: [[8, 23], [7, 20], [8, 20], [8, 21], [8, 22], [8, 23], [7, 20]]

###################################################
Pac-Man is in position [7, 20]
Ghost [12, 14] is at crossroad [6, 20] at distance 13 from Pc-Man  at distance 12 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 1

Pac-Man distance to target [8, 23] is: 4
pPac-Man corridor is :corr<[[6, 20], [7, 20], [8, 20], [8, 21], [8, 22], [8, 23]]>
crossroad: [8, 23]
ghost at crossroad is: None
Ghost [12, 14] is at distance 13 from Pac-Man and 12 from crossroad [6, 20]
valid: no ghost
PURSUIT MODE IS RETURNING NEXT MOVE: [8, 20]
GOT INTO: MODE.PURSUIT
subcorridor0 is: [[6, 20], [7, 20]]
subcorridor1 is: [[8, 21], [8, 22], [8, 23]]
path_coords is: [[8, 23], [8, 20], [8, 21], [8, 22], [8, 23], [8, 20]]

###################################################
Pac-Man is in position [8, 20]
Ghost [12, 15] is at crossroad [6, 20] at distance 13 from Pc-Man  at distance 11 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 2

Pac-Man distance to target [8, 23] is: 3
pPac-Man corridor is :corr<[[6, 20], [7, 20], [8, 20], [8, 21], [8, 22], [8, 23]]>
crossroad: [8, 23]
ghost at crossroad is: None
Ghost [12, 15] is at distance 13 from Pac-Man and 11 from crossroad [6, 20]
valid: no ghost
PURSUIT MODE IS RETURNING NEXT MOVE: [8, 21]
GOT INTO: MODE.PURSUIT
subcorridor0 is: [[6, 20], [7, 20], [8, 20]]
subcorridor1 is: [[8, 22], [8, 23]]
path_coords is: [[7, 23], [7, 23], [8, 23], [8, 21], [8, 22], [8, 23], [8, 21]]

###################################################
Pac-Man is in position [8, 21]
Ghost [12, 16] is at crossroad [8, 23] at distance 13 from Pc-Man at distance 11 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [7, 23] is: 3
pPac-Man corridor is :corr<[[6, 20], [7, 20], [8, 20], [8, 21], [8, 22], [8, 23]]>
crossroad: [8, 23]
ghost at crossroad is: ghost([12, 16])
Ghost [12, 16] is at distance 13 from Pac-Man and 11 from crossroad [8, 23]
---> before condition: 13, 3
---> verifying if ghost: ghost([12, 16])is in corridor [[8, 21], [8, 22], [8, 23]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

PURSUIT MODE IS RETURNING NEXT MOVE: [8, 22]
GOT INTO: MODE.PURSUIT
subcorridor0 is: [[6, 20], [7, 20], [8, 20], [8, 21]]
subcorridor1 is: [[8, 23]]
path_coords is: [[7, 23], [7, 23], [8, 23], [8, 22], [8, 23], [8, 22]]

###################################################
Pac-Man is in position [8, 22]
Ghost [12, 17] is at crossroad [8, 23] at distance 11 from Pc-Man at distance 10 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 1
Pac-Man distance to target [7, 23] is: 2
pPac-Man corridor is :corr<[[6, 20], [7, 20], [8, 20], [8, 21], [8, 22], [8, 23]]>
crossroad: [8, 23]
ghost at crossroad is: ghost([12, 17])
Ghost [12, 17] is at distance 11 from Pac-Man and 10 from crossroad [8, 23]
---> before condition: 11, 2
---> verifying if ghost: ghost([12, 17])is in corridor [[8, 22], [8, 23]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

PURSUIT MODE IS RETURNING NEXT MOVE: [8, 23]
GOT INTO: MODE.PURSUIT
subcorridor0 is: []
subcorridor1 is: [[9, 23], [10, 23]]
path_coords is: [[6, 23], [6, 23], [7, 23], [8, 23], [8, 23]]

###################################################
Pac-Man is in position [8, 23]
Ghost [12, 18] is at crossroad [8, 23] at distance 9 from Pc-Man  at distance 9 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 0

Pac-Man distance to target [6, 23] is: 2
pPac-Man corridor is :corr<[[8, 23], [9, 23], [10, 23]]>
crossroad: [8, 23]
ghost at crossroad is: ghost([12, 18])
Ghost [12, 18] is at distance 9 from Pac-Man and 9 from crossroad [8, 23]
---> before condition: 9, 2
---> verifying if ghost: ghost([12, 18])is in corridor [[6, 23], [7, 23], [8, 23]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

PURSUIT MODE IS RETURNING NEXT MOVE: [7, 23]
GOT INTO: MODE.PURSUIT
subcorridor0 is: [[6, 23]]
subcorridor1 is: [[8, 23]]
path_coords is: [[6, 23], [6, 23], [7, 23], [7, 23]]

###################################################
Pac-Man is in position [7, 23]
Ghost [11, 18] is at crossroad [8, 23] at distance 11 from Pc-Man at distance 10 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 1
Pac-Man distance to target [6, 23] is: 1
pPac-Man corridor is :corr<[[6, 23], [7, 23], [8, 23]]>
crossroad: [6, 23]
ghost at crossroad is: None
Ghost [11, 18] is at distance 11 from Pac-Man and 10 from crossroad [8, 23]
valid: no ghost
PURSUIT MODE IS RETURNING NEXT MOVE: [6, 23]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[4, 23], [5, 23]]
subcorridor1 is: []
path_coords is: [[5, 23], [5, 23], [6, 23], [6, 23]]

###################################################
Pac-Man is in position [6, 23]
Ghost [10, 18] is at crossroad [4, 23] at distance 13 from Pc-Man  at distance 11 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 2

Pac-Man distance to target [5, 23] is: 1
pPac-Man corridor is :corr<[[4, 23], [5, 23], [6, 23]]>
crossroad: [4, 23]
ghost at crossroad is: ghost([10, 18])
Ghost [10, 18] is at distance 13 from Pac-Man and 11 from crossroad [4, 23]
---> before condition: 13, 1
---> verifying if ghost: ghost([10, 18])is in corridor [[5, 23], [6, 23]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [5, 23]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[4, 23]]
subcorridor1 is: [[6, 23]]
path_coords is: [[4, 23], [4, 23], [5, 23], [5, 23]]

###################################################
Pac-Man is in position [5, 23]
Ghost [9, 18] is at crossroad [4, 23] at distance 11 from Pc-Man  at distance 10 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 1

Pac-Man distance to target [4, 23] is: 1
pPac-Man corridor is :corr<[[4, 23], [5, 23], [6, 23]]>
crossroad: [4, 23]
ghost at crossroad is: ghost([9, 18])
Ghost [9, 18] is at distance 11 from Pac-Man and 10 from crossroad [4, 23]
---> before condition: 11, 1
---> verifying if ghost: ghost([9, 18])is in corridor [[4, 23], [5, 23]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [4, 23]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 26], [3, 26], [4, 26], [4, 25], [4, 24]]
subcorridor1 is: []
path_coords is: [[4, 22], [4, 22], [4, 23], [4, 23]]

###################################################
Pac-Man is in position [4, 23]
Ghost [8, 18] is at crossroad [4, 23] at distance 9 from Pc-Man at distance 9 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 0
Pac-Man distance to target [4, 22] is: 1
pPac-Man corridor is :corr<[[2, 26], [3, 26], [4, 26], [4, 25], [4, 24], [4, 23]]>
crossroad: [4, 23]
ghost at crossroad is: ghost([8, 18])
Ghost [8, 18] is at distance 9 from Pac-Man and 9 from crossroad [4, 23]
Ghost [6, 13] is at distance 12 from Pac-Man and 12 from crossroad [4, 23]
---> before condition: 9, 1
---> verifying if ghost: ghost([8, 18])is in corridor [[4, 22], [4, 23]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [4, 22]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[4, 20], [4, 21]]
subcorridor1 is: [[4, 23]]
path_coords is: [[4, 21], [4, 21], [4, 22], [4, 22]]

###################################################
Pac-Man is in position [4, 22]
Ghost [7, 18] is at crossroad [4, 20] at distance 7 from Pc-Man  at distance 5 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 2

Pac-Man distance to target [4, 21] is: 1
pPac-Man corridor is :corr<[[4, 20], [4, 21], [4, 22], [4, 23]]>
crossroad: [4, 20]
ghost at crossroad is: ghost([7, 18])
Ghost [7, 18] is at distance 7 from Pac-Man and 5 from crossroad [4, 20]
Ghost [6, 12] is at distance 12 from Pac-Man and 10 from crossroad [4, 20]
---> before condition: 7, 1
---> verifying if ghost: ghost([7, 18])is in corridor [[4, 21], [4, 22]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[6, 18], [7, 18]]
GHOST_INFO: pacman path coordinates are: [[4, 21], [4, 21], [4, 22], [4, 22]]
GHOST_INFO: ghost coordinate of interception is: None
valid: ghost nearby cannot intercept
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [4, 21]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[4, 20]]
subcorridor1 is: [[4, 22], [4, 23]]
path_coords is: [[3, 20], [3, 20], [4, 20], [4, 20], [4, 21], [4, 21]]

###################################################
Pac-Man is in position [4, 21]
Ghost [6, 18] is at crossroad [4, 20] at distance 5 from Pc-Man  at distance 4 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 1

Pac-Man distance to target [3, 20] is: 2
pPac-Man corridor is :corr<[[4, 20], [4, 21], [4, 22], [4, 23]]>
crossroad: [4, 20]
ghost at crossroad is: ghost([6, 18])
Ghost [6, 18] is at distance 5 from Pac-Man and 4 from crossroad [4, 20]
Ghost [6, 11] is at distance 12 from Pac-Man and 11 from crossroad [4, 20]
---> before condition: 5, 2
---> verifying if ghost: ghost([6, 18])is in corridor [[4, 20], [4, 21]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[6, 18], [6, 19], [6, 20]]
GHOST_INFO: pacman path coordinates are: [[3, 20], [3, 20], [4, 20], [4, 20], [4, 21], [4, 21]]
GHOST_INFO: ghost coordinate of interception is: None
valid: ghost nearby cannot intercept
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [4, 20]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 26], [2, 25], [2, 24], [2, 23], [1, 23], [1, 22], [1, 21], [1, 20], [2, 20], [3, 20]]
subcorridor1 is: []
path_coords is: [[3, 20], [3, 20], [4, 20], [4, 20]]

###################################################
Pac-Man is in position [4, 20]
Ghost [6, 19] is at crossroad [4, 20] at distance 3 from Pc-Man at distance 3 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 0
Pac-Man distance to target [3, 20] is: 1
pPac-Man corridor is :corr<[[2, 26], [2, 25], [2, 24], [2, 23], [1, 23], [1, 22], [1, 21], [1, 20], [2, 20], [3, 20], [4, 20]]>
crossroad: [2, 26]
ghost at crossroad is: None
Ghost [6, 19] is at distance 3 from Pac-Man and 3 from crossroad [4, 20]
Ghost [6, 10] is at distance 12 from Pac-Man and 12 from crossroad [4, 20]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [3, 20]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 26], [2, 25], [2, 24], [2, 23], [1, 23], [1, 22], [1, 21], [1, 20], [2, 20]]
subcorridor1 is: [[4, 20]]
path_coords is: [[2, 20], [2, 20], [3, 20], [3, 20]]

###################################################
Pac-Man is in position [3, 20]
Ghost [6, 20] is at crossroad [4, 20] at distance 3 from Pc-Man at distance 2 of crossroad 
with the semaphore SEMAPHORE.YELLOW
Pac-Man distance to this crossroad1 is 1
Pac-Man distance to target [2, 20] is: 1
pPac-Man corridor is :corr<[[2, 26], [2, 25], [2, 24], [2, 23], [1, 23], [1, 22], [1, 21], [1, 20], [2, 20], [3, 20], [4, 20]]>
crossroad: [2, 26]
ghost at crossroad is: None
Ghost [6, 20] is at distance 3 from Pac-Man and 2 from crossroad [4, 20]
Ghost [5, 10] is at distance 12 from Pac-Man and 11 from crossroad [4, 20]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [2, 20]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 26], [2, 25], [2, 24], [2, 23], [1, 23], [1, 22], [1, 21], [1, 20]]
subcorridor1 is: [[3, 20], [4, 20]]
path_coords is: [[1, 20], [1, 20], [2, 20], [2, 20]]

###################################################
Pac-Man is in position [2, 20]
Ghost [5, 20] is at crossroad [4, 20] at distance 3 from Pc-Man at distance 1 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [1, 20] is: 1
pPac-Man corridor is :corr<[[2, 26], [2, 25], [2, 24], [2, 23], [1, 23], [1, 22], [1, 21], [1, 20], [2, 20], [3, 20], [4, 20]]>
crossroad: [2, 26]
ghost at crossroad is: None
Ghost [5, 20] is at distance 3 from Pac-Man and 1 from crossroad [4, 20]
Ghost [4, 10] is at distance 12 from Pac-Man and 10 from crossroad [4, 20]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [1, 20]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 26], [2, 25], [2, 24], [2, 23], [1, 23], [1, 22], [1, 21]]
subcorridor1 is: [[2, 20], [3, 20], [4, 20]]
path_coords is: [[1, 21], [1, 21], [1, 20], [1, 20]]

###################################################
Pac-Man is in position [1, 20]
Ghost [4, 20] is at crossroad [4, 20] at distance 3 from Pc-Man at distance 0 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 3
Pac-Man distance to target [1, 21] is: 1
pPac-Man corridor is :corr<[[2, 26], [2, 25], [2, 24], [2, 23], [1, 23], [1, 22], [1, 21], [1, 20], [2, 20], [3, 20], [4, 20]]>
crossroad: [2, 26]
ghost at crossroad is: None
Ghost [4, 20] is at distance 3 from Pac-Man and 0 from crossroad [4, 20]
Ghost [6, 15] is at distance 10 from Pac-Man and 7 from crossroad [4, 20]
Ghost [4, 11] is at distance 12 from Pac-Man and 9 from crossroad [4, 20]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [1, 21]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 26], [2, 25], [2, 24], [2, 23], [1, 23], [1, 22]]
subcorridor1 is: [[1, 20], [2, 20], [3, 20], [4, 20]]
path_coords is: [[1, 22], [1, 22], [1, 21], [1, 21]]

###################################################
Pac-Man is in position [1, 21]
Ghost [3, 20] is at crossroad [4, 20] at distance 3 from Pc-Man at distance -1 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 4
Pac-Man distance to target [1, 22] is: 1
pPac-Man corridor is :corr<[[2, 26], [2, 25], [2, 24], [2, 23], [1, 23], [1, 22], [1, 21], [1, 20], [2, 20], [3, 20], [4, 20]]>
crossroad: [2, 26]
ghost at crossroad is: None
Ghost [3, 20] is at distance 3 from Pac-Man and -1 from crossroad [4, 20]
Ghost [6, 14] is at distance 12 from Pac-Man and 8 from crossroad [4, 20]
Ghost [4, 12] is at distance 12 from Pac-Man and 8 from crossroad [4, 20]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [1, 22]
GOT INTO: MODE.PURSUIT
subcorridor0 is: [[2, 26], [2, 25], [2, 24], [2, 23], [1, 23]]
subcorridor1 is: [[1, 21], [1, 20], [2, 20], [3, 20], [4, 20]]
path_coords is: [[2, 20], [1, 22], [1, 21], [1, 20], [2, 20], [1, 22]]

###################################################
Pac-Man is in position [1, 22]

Pac-Man distance to target [2, 20] is: 3
pPac-Man corridor is :corr<[[2, 26], [2, 25], [2, 24], [2, 23], [1, 23], [1, 22], [1, 21], [1, 20], [2, 20], [3, 20], [4, 20]]>
crossroad: [4, 20]
ghost at crossroad is: None
valid: no ghost
PURSUIT MODE IS RETURNING NEXT MOVE: [1, 21]
GOT INTO: MODE.PURSUIT
subcorridor0 is: [[2, 26], [2, 25], [2, 24], [2, 23], [1, 23], [1, 22]]
subcorridor1 is: [[1, 20], [2, 20], [3, 20], [4, 20]]
path_coords is: [[2, 20], [1, 21], [1, 20], [2, 20], [1, 21]]

###################################################
Pac-Man is in position [1, 21]

Pac-Man distance to target [2, 20] is: 2
pPac-Man corridor is :corr<[[2, 26], [2, 25], [2, 24], [2, 23], [1, 23], [1, 22], [1, 21], [1, 20], [2, 20], [3, 20], [4, 20]]>
crossroad: [4, 20]
ghost at crossroad is: None
valid: no ghost
PURSUIT MODE IS RETURNING NEXT MOVE: [1, 20]
GOT INTO: MODE.PURSUIT
subcorridor0 is: [[2, 26], [2, 25], [2, 24], [2, 23], [1, 23], [1, 22], [1, 21]]
subcorridor1 is: [[2, 20], [3, 20], [4, 20]]
path_coords is: [[4, 14], [4, 14], [4, 15], [4, 15], [4, 16], [4, 17], [4, 18], [4, 19], [4, 20], [1, 20], [2, 20], [3, 20], [4, 20], [1, 20]]

###################################################
Pac-Man is in position [1, 20]

Pac-Man distance to target [4, 14] is: 9
pPac-Man corridor is :corr<[[2, 26], [2, 25], [2, 24], [2, 23], [1, 23], [1, 22], [1, 21], [1, 20], [2, 20], [3, 20], [4, 20]]>
crossroad: [4, 20]
ghost at crossroad is: None
valid: no ghost
PURSUIT MODE IS RETURNING NEXT MOVE: [2, 20]
GOT INTO: MODE.PURSUIT
subcorridor0 is: [[2, 26], [2, 25], [2, 24], [2, 23], [1, 23], [1, 22], [1, 21], [1, 20]]
subcorridor1 is: [[3, 20], [4, 20]]
path_coords is: [[4, 14], [4, 14], [4, 15], [4, 15], [4, 16], [4, 17], [4, 18], [4, 19], [4, 20], [2, 20], [3, 20], [4, 20], [2, 20]]

###################################################
Pac-Man is in position [2, 20]

Pac-Man distance to target [4, 14] is: 8
pPac-Man corridor is :corr<[[2, 26], [2, 25], [2, 24], [2, 23], [1, 23], [1, 22], [1, 21], [1, 20], [2, 20], [3, 20], [4, 20]]>
crossroad: [4, 20]
ghost at crossroad is: None
valid: no ghost
PURSUIT MODE IS RETURNING NEXT MOVE: [3, 20]
GOT INTO: MODE.PURSUIT
subcorridor0 is: [[2, 26], [2, 25], [2, 24], [2, 23], [1, 23], [1, 22], [1, 21], [1, 20], [2, 20]]
subcorridor1 is: [[4, 20]]
path_coords is: [[4, 15], [4, 15], [4, 16], [4, 17], [4, 18], [4, 19], [4, 20], [3, 20], [4, 20], [3, 20]]

###################################################
Pac-Man is in position [3, 20]

Pac-Man distance to target [4, 15] is: 6
pPac-Man corridor is :corr<[[2, 26], [2, 25], [2, 24], [2, 23], [1, 23], [1, 22], [1, 21], [1, 20], [2, 20], [3, 20], [4, 20]]>
crossroad: [4, 20]
ghost at crossroad is: None
valid: no ghost
PURSUIT MODE IS RETURNING NEXT MOVE: [4, 20]
GOT INTO: MODE.PURSUIT
subcorridor0 is: []
subcorridor1 is: [[5, 20], [6, 20]]
path_coords is: [[4, 15], [4, 15], [4, 16], [4, 17], [4, 18], [4, 19], [4, 20], [4, 20]]

###################################################
Pac-Man is in position [4, 20]

Pac-Man distance to target [4, 15] is: 5
pPac-Man corridor is :corr<[[4, 20], [5, 20], [6, 20]]>
crossroad: [4, 20]
ghost at crossroad is: None
valid: no ghost
PURSUIT MODE IS RETURNING NEXT MOVE: [4, 19]
GOT INTO: MODE.PURSUIT
subcorridor0 is: [[4, 15], [4, 16], [4, 17], [4, 18]]
subcorridor1 is: [[4, 20]]
path_coords is: [[3, 15], [3, 15], [4, 15], [4, 15], [4, 16], [4, 17], [4, 18], [4, 19], [4, 19]]

###################################################
Pac-Man is in position [4, 19]

Pac-Man distance to target [3, 15] is: 5
pPac-Man corridor is :corr<[[4, 15], [4, 16], [4, 17], [4, 18], [4, 19], [4, 20]]>
crossroad: [4, 15]
ghost at crossroad is: None
valid: no ghost
PURSUIT MODE IS RETURNING NEXT MOVE: [4, 18]
GOT INTO: MODE.PURSUIT
subcorridor0 is: [[4, 15], [4, 16], [4, 17]]
subcorridor1 is: [[4, 19], [4, 20]]
path_coords is: [[3, 15], [3, 15], [4, 15], [4, 15], [4, 16], [4, 17], [4, 18], [4, 18]]

###################################################
Pac-Man is in position [4, 18]

Pac-Man distance to target [3, 15] is: 4
pPac-Man corridor is :corr<[[4, 15], [4, 16], [4, 17], [4, 18], [4, 19], [4, 20]]>
crossroad: [4, 15]
ghost at crossroad is: None
valid: no ghost
PURSUIT MODE IS RETURNING NEXT MOVE: [4, 17]
GOT INTO: MODE.PURSUIT
subcorridor0 is: [[4, 15], [4, 16]]
subcorridor1 is: [[4, 18], [4, 19], [4, 20]]
path_coords is: [[2, 15], [2, 15], [3, 15], [4, 15], [4, 15], [4, 16], [4, 17], [4, 17]]

###################################################
Pac-Man is in position [4, 17]

Pac-Man distance to target [2, 15] is: 4
pPac-Man corridor is :corr<[[4, 15], [4, 16], [4, 17], [4, 18], [4, 19], [4, 20]]>
crossroad: [4, 15]
ghost at crossroad is: None
valid: no ghost
PURSUIT MODE IS RETURNING NEXT MOVE: [4, 16]
GOT INTO: MODE.PURSUIT
subcorridor0 is: [[4, 15]]
subcorridor1 is: [[4, 17], [4, 18], [4, 19], [4, 20]]
path_coords is: [[2, 15], [2, 15], [3, 15], [4, 15], [4, 15], [4, 16], [4, 16]]

###################################################
Pac-Man is in position [4, 16]
Ghost [6, 15] is at crossroad [4, 15] at distance 3 from Pc-Man  at distance 2 of crossroad 
with the semaphore SEMAPHORE.YELLOW
Pac-Man distance to this crossroad0 is 1

Pac-Man distance to target [2, 15] is: 3
pPac-Man corridor is :corr<[[4, 15], [4, 16], [4, 17], [4, 18], [4, 19], [4, 20]]>
crossroad: [4, 15]
ghost at crossroad is: ghost([6, 15])
Ghost [6, 15] is at distance 3 from Pac-Man and 2 from crossroad [4, 15]
---> before condition: 3, 3
---> verifying if ghost: ghost([6, 15])is in corridor [[4, 15], [4, 16]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[4, 15], [5, 15], [6, 15]]
GHOST_INFO: pacman path coordinates are: [[2, 15], [2, 15], [3, 15], [4, 15], [4, 15], [4, 16], [4, 16]]
GHOST_INFO: ghost coordinate of interception is: [4, 15]
GHOST_INFO: pac dist to intersept: 1 ghost dist to intercept: 2
valid: ghost nearby cannot intercept
MOVE IS REMAING VALID
 ------------ 

PURSUIT MODE IS RETURNING NEXT MOVE: [4, 15]
GOT INTO: MODE.PURSUIT
subcorridor0 is: []
subcorridor1 is: [[5, 15], [6, 15]]
path_coords is: [[1, 15], [1, 15], [2, 15], [3, 15], [4, 15], [4, 15]]

###################################################
Pac-Man is in position [4, 15]
Ghost [5, 15] is at crossroad [6, 15] at distance 1 from Pc-Man at distance -1 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [1, 15] is: 3
pPac-Man corridor is :corr<[[4, 15], [5, 15], [6, 15]]>
crossroad: [4, 15]
ghost at crossroad is: None
Ghost [5, 15] is at distance 1 from Pac-Man and -1 from crossroad [6, 15]
valid: no ghost
PURSUIT MODE IS RETURNING NEXT MOVE: [3, 15]
GOT INTO: MODE.PURSUIT
subcorridor0 is: [[14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15]]
subcorridor1 is: [[4, 15]]
path_coords is: [[1, 15], [1, 15], [2, 15], [3, 15], [3, 15]]

###################################################
Pac-Man is in position [3, 15]
Ghost [4, 15] is at crossroad [4, 15] at distance 1 from Pc-Man at distance 0 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 1
Pac-Man distance to target [1, 15] is: 2
pPac-Man corridor is :corr<[[14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15]]>
crossroad: [14, 15]
ghost at crossroad is: None
Ghost [4, 15] is at distance 1 from Pac-Man and 0 from crossroad [4, 15]
valid: no ghost
PURSUIT MODE IS RETURNING NEXT MOVE: [2, 15]
GOT INTO: MODE.PURSUIT
subcorridor0 is: [[14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15]]
subcorridor1 is: [[3, 15], [4, 15]]
path_coords is: [[0, 15], [0, 15], [1, 15], [2, 15], [2, 15]]

###################################################
Pac-Man is in position [2, 15]
Ghost [3, 15] is at crossroad [4, 15] at distance 1 from Pc-Man at distance -1 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [0, 15] is: 2
pPac-Man corridor is :corr<[[14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15]]>
crossroad: [14, 15]
ghost at crossroad is: None
Ghost [3, 15] is at distance 1 from Pac-Man and -1 from crossroad [4, 15]
valid: no ghost
PURSUIT MODE IS RETURNING NEXT MOVE: [1, 15]
GOT INTO: MODE.PURSUIT
subcorridor0 is: [[14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15]]
subcorridor1 is: [[2, 15], [3, 15], [4, 15]]
path_coords is: [[0, 15], [0, 15], [1, 15], [1, 15]]

###################################################
Pac-Man is in position [1, 15]
Ghost [2, 15] is at crossroad [4, 15] at distance 1 from Pc-Man at distance -2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 3
Pac-Man distance to target [0, 15] is: 1
pPac-Man corridor is :corr<[[14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15]]>
crossroad: [14, 15]
ghost at crossroad is: None
Ghost [2, 15] is at distance 1 from Pac-Man and -2 from crossroad [4, 15]
valid: no ghost
PURSUIT MODE IS RETURNING NEXT MOVE: [0, 15]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 15], [15, 15], [16, 15], [17, 15], [18, 15]]
subcorridor1 is: [[1, 15], [2, 15], [3, 15], [4, 15]]
path_coords is: [[14, 15], [14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [0, 15]]

###################################################
Pac-Man is in position [0, 15]
Ghost [1, 15] is at crossroad [4, 15] at distance 1 from Pc-Man at distance -3 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 4
Pac-Man distance to target [14, 15] is: 5
pPac-Man corridor is :corr<[[14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15]]>
crossroad: [14, 15]
ghost at crossroad is: None
Ghost [1, 15] is at distance 1 from Pac-Man and -3 from crossroad [4, 15]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [18, 15]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 15], [15, 15], [16, 15], [17, 15]]
subcorridor1 is: [[0, 15], [1, 15], [2, 15], [3, 15], [4, 15]]
path_coords is: [[14, 15], [14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [18, 15]]

###################################################
Pac-Man is in position [18, 15]
Ghost [0, 15] is at crossroad [4, 15] at distance 1 from Pc-Man at distance -4 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 5
Pac-Man distance to target [14, 15] is: 4
pPac-Man corridor is :corr<[[14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15]]>
crossroad: [14, 15]
ghost at crossroad is: None
Ghost [0, 15] is at distance 1 from Pac-Man and -4 from crossroad [4, 15]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [17, 15]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 15], [15, 15], [16, 15]]
subcorridor1 is: [[18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15]]
path_coords is: [[14, 15], [14, 15], [15, 15], [16, 15], [17, 15], [17, 15]]

###################################################
Pac-Man is in position [17, 15]
Ghost [18, 15] is at crossroad [4, 15] at distance 1 from Pc-Man at distance -5 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 6
Pac-Man distance to target [14, 15] is: 3
pPac-Man corridor is :corr<[[14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15]]>
crossroad: [14, 15]
ghost at crossroad is: None
Ghost [18, 15] is at distance 1 from Pac-Man and -5 from crossroad [4, 15]
Ghost [6, 15] is at distance 8 from Pac-Man and 2 from crossroad [4, 15]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [16, 15]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 15], [15, 15]]
subcorridor1 is: [[17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15]]
path_coords is: [[14, 15], [14, 15], [15, 15], [16, 15], [16, 15]]

###################################################
Pac-Man is in position [16, 15]
Ghost [17, 15] is at crossroad [4, 15] at distance 1 from Pc-Man at distance -6 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 7
Pac-Man distance to target [14, 15] is: 2
pPac-Man corridor is :corr<[[14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15]]>
crossroad: [14, 15]
ghost at crossroad is: None
Ghost [17, 15] is at distance 1 from Pac-Man and -6 from crossroad [4, 15]
Ghost [6, 14] is at distance 10 from Pac-Man and 3 from crossroad [4, 15]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [15, 15]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 15]]
subcorridor1 is: [[16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15]]
path_coords is: [[14, 15], [14, 15], [15, 15], [15, 15]]

###################################################
Pac-Man is in position [15, 15]
Ghost [16, 15] is at crossroad [4, 15] at distance 1 from Pc-Man at distance -7 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 8
Pac-Man distance to target [14, 15] is: 1
pPac-Man corridor is :corr<[[14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15]]>
crossroad: [14, 15]
ghost at crossroad is: None
Ghost [16, 15] is at distance 1 from Pac-Man and -7 from crossroad [4, 15]
Ghost [6, 13] is at distance 12 from Pac-Man and 4 from crossroad [4, 15]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [14, 15]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: []
subcorridor1 is: [[15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15]]
path_coords is: [[14, 14], [14, 14], [14, 15], [14, 15]]

###################################################
Pac-Man is in position [14, 15]
Ghost [6, 12] is at crossroad [14, 15] at distance 11 from Pc-Man  at distance 11 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 0
Ghost [15, 15] is at crossroad [4, 15] at distance 1 from Pc-Man at distance -8 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 9
Pac-Man distance to target [14, 14] is: 1
pPac-Man corridor is :corr<[[14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15]]>
crossroad: [14, 15]
ghost at crossroad is: ghost([6, 12])
Ghost [15, 15] is at distance 1 from Pac-Man and -8 from crossroad [4, 15]
Ghost [6, 12] is at distance 11 from Pac-Man and 11 from crossroad [14, 15]
---> before condition: 11, 1
---> verifying if ghost: ghost([6, 12])is in corridor [[14, 14], [14, 15]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [14, 14]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 10], [14, 11], [14, 12], [14, 13]]
subcorridor1 is: [[14, 15]]
path_coords is: [[14, 13], [14, 13], [14, 14], [14, 14]]

###################################################
Pac-Man is in position [14, 14]
Ghost [14, 15] is at crossroad [14, 15] at distance 1 from Pc-Man at distance 0 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 1
Pac-Man distance to target [14, 13] is: 1
pPac-Man corridor is :corr<[[14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15]]>
crossroad: [14, 10]
ghost at crossroad is: None
Ghost [14, 15] is at distance 1 from Pac-Man and 0 from crossroad [14, 15]
Ghost [6, 11] is at distance 13 from Pac-Man and 12 from crossroad [14, 15]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [14, 13]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 10], [14, 11], [14, 12]]
subcorridor1 is: [[14, 14], [14, 15]]
path_coords is: [[14, 12], [14, 12], [14, 13], [14, 13]]

###################################################
Pac-Man is in position [14, 13]
Ghost [6, 10] is at crossroad [14, 10] at distance 15 from Pc-Man  at distance 12 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 3
Ghost [14, 14] is at crossroad [14, 15] at distance 1 from Pc-Man at distance -1 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [14, 12] is: 1
pPac-Man corridor is :corr<[[14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15]]>
crossroad: [14, 10]
ghost at crossroad is: ghost([6, 10])
Ghost [14, 14] is at distance 1 from Pac-Man and -1 from crossroad [14, 15]
Ghost [6, 10] is at distance 15 from Pac-Man and 12 from crossroad [14, 10]
---> before condition: 15, 1
---> verifying if ghost: ghost([6, 10])is in corridor [[14, 12], [14, 13]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [14, 12]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 10], [14, 11]]
subcorridor1 is: [[14, 13], [14, 14], [14, 15]]
path_coords is: [[14, 11], [14, 11], [14, 12], [14, 12]]

###################################################
Pac-Man is in position [14, 12]
Ghost [7, 10] is at crossroad [14, 10] at distance 15 from Pc-Man  at distance 13 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 2
Ghost [14, 13] is at crossroad [14, 15] at distance 1 from Pc-Man at distance -2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 3
Pac-Man distance to target [14, 11] is: 1
pPac-Man corridor is :corr<[[14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15]]>
crossroad: [14, 10]
ghost at crossroad is: ghost([7, 10])
Ghost [14, 13] is at distance 1 from Pac-Man and -2 from crossroad [14, 15]
Ghost [7, 10] is at distance 15 from Pac-Man and 13 from crossroad [14, 10]
---> before condition: 15, 1
---> verifying if ghost: ghost([7, 10])is in corridor [[14, 11], [14, 12]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [14, 11]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 10]]
subcorridor1 is: [[14, 12], [14, 13], [14, 14], [14, 15]]
path_coords is: [[14, 10], [14, 10], [14, 11], [14, 11]]

###################################################
Pac-Man is in position [14, 11]
Ghost [8, 10] is at crossroad [14, 10] at distance 13 from Pc-Man  at distance 12 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 1
Ghost [14, 12] is at crossroad [14, 15] at distance 1 from Pc-Man at distance -3 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 4
Pac-Man distance to target [14, 10] is: 1
pPac-Man corridor is :corr<[[14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15]]>
crossroad: [14, 10]
ghost at crossroad is: ghost([8, 10])
Ghost [14, 12] is at distance 1 from Pac-Man and -3 from crossroad [14, 15]
Ghost [8, 10] is at distance 13 from Pac-Man and 12 from crossroad [14, 10]
---> before condition: 13, 1
---> verifying if ghost: ghost([8, 10])is in corridor [[14, 10], [14, 11]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [14, 10]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[16, 4], [16, 5], [16, 6], [16, 7], [17, 7], [17, 8], [17, 9], [17, 10], [16, 10], [15, 10]]
subcorridor1 is: []
path_coords is: [[13, 10], [13, 10], [14, 10], [14, 10]]

###################################################
Pac-Man is in position [14, 10]
Ghost [14, 11] is at crossroad [14, 10] at distance 1 from Pc-Man at distance 1 of crossroad 
with the semaphore SEMAPHORE.YELLOW
Pac-Man distance to this crossroad1 is 0
Pac-Man distance to target [13, 10] is: 1
pPac-Man corridor is :corr<[[16, 4], [16, 5], [16, 6], [16, 7], [17, 7], [17, 8], [17, 9], [17, 10], [16, 10], [15, 10], [14, 10]]>
crossroad: [14, 10]
ghost at crossroad is: ghost([14, 11])
Ghost [14, 11] is at distance 1 from Pac-Man and 1 from crossroad [14, 10]
Ghost [8, 9] is at distance 11 from Pac-Man and 11 from crossroad [14, 10]
---> before condition: 1, 1
---> verifying if ghost: ghost([14, 11])is in corridor [[13, 10], [14, 10]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[14, 10], [14, 11]]
GHOST_INFO: pacman path coordinates are: [[13, 10], [13, 10], [14, 10], [14, 10]]
GHOST_INFO: ghost coordinate of interception is: [14, 10]
GHOST_INFO: pac dist to intersept: 0 ghost dist to intercept: 1
valid: ghost nearby cannot intercept
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [13, 10]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[12, 10]]
subcorridor1 is: [[14, 10]]
path_coords is: [[12, 10], [12, 10], [13, 10], [13, 10]]

###################################################
Pac-Man is in position [13, 10]
Ghost [8, 8] is at crossroad [12, 10] at distance 9 from Pc-Man  at distance 8 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 1
Ghost [14, 10] is at crossroad [14, 10] at distance 1 from Pc-Man at distance 0 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 1
Pac-Man distance to target [12, 10] is: 1
pPac-Man corridor is :corr<[[12, 10], [13, 10], [14, 10]]>
crossroad: [12, 10]
ghost at crossroad is: ghost([8, 8])
Ghost [14, 10] is at distance 1 from Pac-Man and 0 from crossroad [14, 10]
Ghost [8, 8] is at distance 9 from Pac-Man and 8 from crossroad [12, 10]
---> before condition: 9, 1
---> verifying if ghost: ghost([8, 8])is in corridor [[12, 10], [13, 10]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [12, 10]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: []
subcorridor1 is: [[13, 10], [14, 10]]
path_coords is: [[11, 10], [11, 10], [12, 10], [12, 10]]

###################################################
Pac-Man is in position [12, 10]
Ghost [8, 7] is at crossroad [12, 10] at distance 7 from Pc-Man  at distance 7 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 0
Ghost [13, 10] is at crossroad [14, 10] at distance 1 from Pc-Man at distance -1 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [11, 10] is: 1
pPac-Man corridor is :corr<[[12, 10], [13, 10], [14, 10]]>
crossroad: [12, 10]
ghost at crossroad is: ghost([8, 7])
Ghost [13, 10] is at distance 1 from Pac-Man and -1 from crossroad [14, 10]
Ghost [8, 7] is at distance 7 from Pac-Man and 7 from crossroad [12, 10]
---> before condition: 7, 1
---> verifying if ghost: ghost([8, 7])is in corridor [[11, 10], [12, 10]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[8, 7], [9, 7], [10, 7]]
GHOST_INFO: pacman path coordinates are: [[11, 10], [11, 10], [12, 10], [12, 10]]
GHOST_INFO: ghost coordinate of interception is: None
valid: ghost nearby cannot intercept
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [11, 10]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[10, 7], [10, 8], [10, 9], [10, 10]]
subcorridor1 is: [[12, 10]]
path_coords is: [[10, 10], [10, 10], [11, 10], [11, 10]]

###################################################
Pac-Man is in position [11, 10]
Ghost [9, 7] is at crossroad [10, 7] at distance 5 from Pc-Man  at distance 1 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 4
Ghost [12, 10] is at crossroad [12, 10] at distance 1 from Pc-Man at distance 0 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 1
Pac-Man distance to target [10, 10] is: 1
pPac-Man corridor is :corr<[[10, 7], [10, 8], [10, 9], [10, 10], [11, 10], [12, 10]]>
crossroad: [10, 7]
ghost at crossroad is: ghost([9, 7])
Ghost [12, 10] is at distance 1 from Pac-Man and 0 from crossroad [12, 10]
Ghost [9, 7] is at distance 5 from Pac-Man and 1 from crossroad [10, 7]
---> before condition: 5, 1
---> verifying if ghost: ghost([9, 7])is in corridor [[10, 10], [11, 10]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[9, 7], [10, 7]]
GHOST_INFO: pacman path coordinates are: [[10, 10], [10, 10], [11, 10], [11, 10]]
GHOST_INFO: ghost coordinate of interception is: None
valid: ghost nearby cannot intercept
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [10, 10]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[10, 7], [10, 8], [10, 9]]
subcorridor1 is: [[11, 10], [12, 10]]
path_coords is: [[10, 9], [10, 9], [10, 10], [10, 10]]

###################################################
Pac-Man is in position [10, 10]
Ghost [10, 7] is at crossroad [10, 7] at distance 3 from Pc-Man  at distance 0 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 3
Ghost [11, 10] is at crossroad [12, 10] at distance 1 from Pc-Man at distance -1 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [10, 9] is: 1
pPac-Man corridor is :corr<[[10, 7], [10, 8], [10, 9], [10, 10], [11, 10], [12, 10]]>
crossroad: [10, 7]
ghost at crossroad is: ghost([10, 7])
Ghost [11, 10] is at distance 1 from Pac-Man and -1 from crossroad [12, 10]
Ghost [10, 7] is at distance 3 from Pac-Man and 0 from crossroad [10, 7]
---> before condition: 3, 1
---> verifying if ghost: ghost([10, 7])is in corridor [[10, 9], [10, 10]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[10, 7], [10, 8], [10, 9], [10, 10]]
GHOST_INFO: pacman path coordinates are: [[10, 9], [10, 9], [10, 10], [10, 10]]
GHOST_INFO: ghost coordinate of interception is: [10, 9]
GHOST_INFO: pac dist to intersept: 1 ghost dist to intercept: 3
valid: ghost nearby cannot intercept
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [10, 9]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[10, 7], [10, 8]]
subcorridor1 is: [[10, 10], [11, 10], [12, 10]]
path_coords is: [[10, 8], [10, 8], [10, 9], [10, 9]]

###################################################
Pac-Man is in position [10, 9]
Ghost [10, 8] is at crossroad [10, 7] at distance 1 from Pc-Man  at distance -1 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 2
Ghost [10, 10] is at crossroad [12, 10] at distance 1 from Pc-Man at distance -2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 3
Pac-Man distance to target [10, 8] is: 1
pPac-Man corridor is :corr<[[10, 7], [10, 8], [10, 9], [10, 10], [11, 10], [12, 10]]>
crossroad: [10, 7]
ghost at crossroad is: ghost([10, 8])
Ghost [10, 10] is at distance 1 from Pac-Man and -2 from crossroad [12, 10]
Ghost [3, 15] is at distance 17 from Pac-Man and 15 from crossroad [10, 7]
Ghost [4, 5] is at distance 10 from Pac-Man and 8 from crossroad [10, 7]
Ghost [10, 8] is at distance 1 from Pac-Man and -1 from crossroad [10, 7]
---> before condition: 1, 1
---> verifying if ghost: ghost([10, 8])is in corridor [[10, 8], [10, 9]]
invalid: ghost in the first corridor of path
GOT INTO: MODE.COUNTER
subcorridor0 is: [[10, 7], [10, 8]]
subcorridor1 is: [[10, 10], [11, 10], [12, 10]]
path_coords is: [[16, 6], [16, 6], [16, 7], [17, 7], [17, 8], [17, 9], [17, 10], [16, 10], [15, 10], [14, 10], [12, 10], [13, 10], [14, 10], [10, 9], [10, 10], [11, 10], [12, 10], [10, 9]]

###################################################
Pac-Man is in position [10, 9]
Ghost [10, 8] is at crossroad [10, 7] at distance 1 from Pc-Man  at distance -1 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 2
Ghost [10, 10] is at crossroad [12, 10] at distance 1 from Pc-Man at distance -2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 3
Pac-Man distance to target [16, 6] is: 13
pPac-Man corridor is :corr<[[10, 7], [10, 8], [10, 9], [10, 10], [11, 10], [12, 10]]>
crossroad: [12, 10]
ghost at crossroad is: ghost([10, 10])
Ghost [10, 10] is at distance 1 from Pac-Man and -2 from crossroad [12, 10]
Ghost [3, 15] is at distance 17 from Pac-Man and 15 from crossroad [10, 7]
Ghost [4, 5] is at distance 10 from Pac-Man and 8 from crossroad [10, 7]
Ghost [10, 8] is at distance 1 from Pac-Man and -1 from crossroad [10, 7]
---> before condition: 1, 13
---> verifying if ghost: ghost([10, 10])is in corridor [[10, 9], [10, 10], [11, 10], [12, 10]]
invalid: ghost in the first corridor of path
GOT INTO: MODE.FLIGHT
ANALYST: best_moves is: 
-> move: [16, 6] at cost 13
-> move: [17, 22] at cost 20
-> move: [10, 8] at cost 1
-> move: [14, 9] at cost 6
-> move: [15, 10] at cost 6
-> move: [6, 10] at cost 9
-> move: [4, 9] at cost 10
-> move: [5, 10] at cost 10
-> move: [14, 16] at cost 11
-> move: [12, 20] at cost 13
-> move: [2, 5] at cost 14
-> move: [9, 23] at cost 19
-> move: [6, 24] at cost 23
-> move: [4, 24] at cost 25
-> move: [1, 23] at cost 27
Flight targets: [[16, 6], [17, 22], [10, 8], [14, 9], [15, 10], [6, 10], [4, 9], [5, 10], [14, 16], [12, 20], [2, 5], [9, 23], [6, 24], [4, 24], [1, 23]]
in flight mode, analysing move: [10, 8]
subcorridor0 is: [[10, 7], [10, 8]]
subcorridor1 is: [[10, 10], [11, 10], [12, 10]]
path_coords is: [[10, 8], [10, 7], [10, 8], [10, 7], [11, 7], [12, 7], [12, 7], [13, 7], [14, 7], [14, 7], [14, 8], [14, 9], [14, 10], [12, 10], [13, 10], [14, 10], [10, 9], [10, 10], [11, 10], [12, 10], [10, 9]]

###################################################
Pac-Man is in position [10, 9]
Ghost [10, 8] is at crossroad [10, 7] at distance 1 from Pc-Man  at distance -1 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 2
Ghost [10, 10] is at crossroad [12, 10] at distance 1 from Pc-Man at distance -2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 3
Pac-Man distance to target [10, 8] is: 13
pPac-Man corridor is :corr<[[10, 7], [10, 8], [10, 9], [10, 10], [11, 10], [12, 10]]>
crossroad: [10, 7]
ghost at crossroad is: ghost([10, 8])
Ghost [10, 10] is at distance 1 from Pac-Man and -2 from crossroad [12, 10]
Ghost [3, 15] is at distance 17 from Pac-Man and 15 from crossroad [10, 7]
Ghost [4, 5] is at distance 10 from Pac-Man and 8 from crossroad [10, 7]
Ghost [10, 8] is at distance 1 from Pac-Man and -1 from crossroad [10, 7]
---> before condition: 1, 13
---> verifying if ghost: ghost([10, 8])is in corridor [[10, 9], [10, 10], [11, 10], [12, 10]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

FLIGHT MODE IS RETURNING NEXT MOVE: [10, 10]

############
PACMAN HAS LOST A LIFE
#############

GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15]]
subcorridor1 is: [[3, 15], [4, 15]]
path_coords is: [[14, 16], [14, 15], [14, 16], [14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [2, 15]]

###################################################
Pac-Man is in position [2, 15]
Ghost [10, 9] is at crossroad [14, 15] at distance 17 from Pc-Man  at distance 10 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 7
Ghost [4, 15] is at crossroad [4, 15] at distance 2 from Pc-Man at distance 0 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [14, 16] is: 8
pPac-Man corridor is :corr<[[14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15]]>
crossroad: [14, 15]
ghost at crossroad is: ghost([10, 9])
Ghost [4, 15] is at distance 2 from Pac-Man and 0 from crossroad [4, 15]
Ghost [4, 4] is at distance 13 from Pac-Man and 11 from crossroad [4, 15]
Ghost [10, 9] is at distance 17 from Pac-Man and 10 from crossroad [14, 15]
---> before condition: 17, 8
---> verifying if ghost: ghost([10, 9])is in corridor [[14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [1, 15]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15]]
subcorridor1 is: [[2, 15], [3, 15], [4, 15]]
path_coords is: [[14, 16], [14, 15], [14, 16], [14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [1, 15]]

###################################################
Pac-Man is in position [1, 15]
Ghost [10, 10] is at crossroad [14, 15] at distance 15 from Pc-Man  at distance 9 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 6
Ghost [3, 15] is at crossroad [4, 15] at distance 2 from Pc-Man at distance -1 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 3
Pac-Man distance to target [14, 16] is: 7
pPac-Man corridor is :corr<[[14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15]]>
crossroad: [14, 15]
ghost at crossroad is: ghost([10, 10])
Ghost [3, 15] is at distance 2 from Pac-Man and -1 from crossroad [4, 15]
Ghost [3, 4] is at distance 15 from Pac-Man and 12 from crossroad [4, 15]
Ghost [10, 10] is at distance 15 from Pac-Man and 9 from crossroad [14, 15]
---> before condition: 15, 7
---> verifying if ghost: ghost([10, 10])is in corridor [[14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [0, 15]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 15], [15, 15], [16, 15], [17, 15], [18, 15]]
subcorridor1 is: [[1, 15], [2, 15], [3, 15], [4, 15]]
path_coords is: [[14, 16], [14, 15], [14, 16], [14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [0, 15]]

###################################################
Pac-Man is in position [0, 15]
Ghost [11, 10] is at crossroad [14, 15] at distance 13 from Pc-Man  at distance 8 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 5
Ghost [2, 15] is at crossroad [4, 15] at distance 2 from Pc-Man at distance -2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 4
Pac-Man distance to target [14, 16] is: 6
pPac-Man corridor is :corr<[[14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15]]>
crossroad: [14, 15]
ghost at crossroad is: ghost([11, 10])
Ghost [2, 15] is at distance 2 from Pac-Man and -2 from crossroad [4, 15]
Ghost [2, 4] is at distance 17 from Pac-Man and 13 from crossroad [4, 15]
Ghost [11, 10] is at distance 13 from Pac-Man and 8 from crossroad [14, 15]
---> before condition: 13, 6
---> verifying if ghost: ghost([11, 10])is in corridor [[14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [18, 15]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 15], [15, 15], [16, 15], [17, 15]]
subcorridor1 is: [[0, 15], [1, 15], [2, 15], [3, 15], [4, 15]]
path_coords is: [[14, 16], [14, 15], [14, 16], [14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [18, 15]]

###################################################
Pac-Man is in position [18, 15]
Ghost [12, 10] is at crossroad [14, 15] at distance 11 from Pc-Man  at distance 7 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 4
Ghost [1, 15] is at crossroad [4, 15] at distance 2 from Pc-Man at distance -3 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 5
Pac-Man distance to target [14, 16] is: 5
pPac-Man corridor is :corr<[[14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15]]>
crossroad: [14, 15]
ghost at crossroad is: ghost([12, 10])
Ghost [1, 15] is at distance 2 from Pac-Man and -3 from crossroad [4, 15]
Ghost [2, 5] is at distance 19 from Pac-Man and 14 from crossroad [4, 15]
Ghost [12, 10] is at distance 11 from Pac-Man and 7 from crossroad [14, 15]
---> before condition: 11, 5
---> verifying if ghost: ghost([12, 10])is in corridor [[14, 15], [15, 15], [16, 15], [17, 15], [18, 15]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [17, 15]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 15], [15, 15], [16, 15]]
subcorridor1 is: [[18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15]]
path_coords is: [[14, 16], [14, 15], [14, 16], [14, 15], [15, 15], [16, 15], [17, 15], [17, 15]]

###################################################
Pac-Man is in position [17, 15]
Ghost [12, 11] is at crossroad [14, 15] at distance 9 from Pc-Man  at distance 6 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 3
Ghost [0, 15] is at crossroad [4, 15] at distance 2 from Pc-Man at distance -4 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 6
Pac-Man distance to target [14, 16] is: 4
pPac-Man corridor is :corr<[[14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15]]>
crossroad: [14, 15]
ghost at crossroad is: ghost([12, 11])
Ghost [6, 15] is at distance 8 from Pac-Man and 2 from crossroad [4, 15]
Ghost [0, 15] is at distance 2 from Pac-Man and -4 from crossroad [4, 15]
Ghost [2, 6] is at distance 19 from Pac-Man and 13 from crossroad [4, 15]
Ghost [12, 11] is at distance 9 from Pac-Man and 6 from crossroad [14, 15]
---> before condition: 9, 4
---> verifying if ghost: ghost([12, 11])is in corridor [[14, 15], [15, 15], [16, 15], [17, 15]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [16, 15]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 15], [15, 15]]
subcorridor1 is: [[17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15]]
path_coords is: [[14, 16], [14, 15], [14, 16], [14, 15], [15, 15], [16, 15], [16, 15]]

###################################################
Pac-Man is in position [16, 15]
Ghost [12, 12] is at crossroad [14, 15] at distance 7 from Pc-Man  at distance 5 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 2
Ghost [18, 15] is at crossroad [4, 15] at distance 2 from Pc-Man at distance -5 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 7
Pac-Man distance to target [14, 16] is: 3
pPac-Man corridor is :corr<[[14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15]]>
crossroad: [14, 15]
ghost at crossroad is: ghost([12, 12])
Ghost [6, 16] is at distance 10 from Pac-Man and 3 from crossroad [4, 15]
Ghost [18, 15] is at distance 2 from Pac-Man and -5 from crossroad [4, 15]
Ghost [2, 7] is at distance 19 from Pac-Man and 12 from crossroad [4, 15]
Ghost [12, 12] is at distance 7 from Pac-Man and 5 from crossroad [14, 15]
---> before condition: 7, 3
---> verifying if ghost: ghost([12, 12])is in corridor [[14, 15], [15, 15], [16, 15]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[12, 12], [12, 13], [12, 14], [12, 15]]
GHOST_INFO: pacman path coordinates are: [[14, 16], [14, 15], [14, 16], [14, 15], [15, 15], [16, 15], [16, 15]]
GHOST_INFO: ghost coordinate of interception is: None
valid: ghost nearby cannot intercept
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [15, 15]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 15]]
subcorridor1 is: [[16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15]]
path_coords is: [[14, 16], [14, 15], [14, 16], [14, 15], [15, 15], [15, 15]]

###################################################
Pac-Man is in position [15, 15]
Ghost [12, 13] is at crossroad [14, 15] at distance 5 from Pc-Man  at distance 4 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 1
Ghost [17, 15] is at crossroad [4, 15] at distance 2 from Pc-Man at distance -6 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 8
Pac-Man distance to target [14, 16] is: 2
pPac-Man corridor is :corr<[[14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15]]>
crossroad: [14, 15]
ghost at crossroad is: ghost([12, 13])
Ghost [6, 17] is at distance 12 from Pac-Man and 4 from crossroad [4, 15]
Ghost [17, 15] is at distance 2 from Pac-Man and -6 from crossroad [4, 15]
Ghost [1, 7] is at distance 19 from Pac-Man and 11 from crossroad [4, 15]
Ghost [12, 13] is at distance 5 from Pac-Man and 4 from crossroad [14, 15]
---> before condition: 5, 2
---> verifying if ghost: ghost([12, 13])is in corridor [[14, 15], [15, 15]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[12, 13], [12, 14], [12, 15]]
GHOST_INFO: pacman path coordinates are: [[14, 16], [14, 15], [14, 16], [14, 15], [15, 15], [15, 15]]
GHOST_INFO: ghost coordinate of interception is: None
valid: ghost nearby cannot intercept
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [14, 15]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: []
subcorridor1 is: [[15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15]]
path_coords is: [[14, 16], [14, 15], [14, 16], [14, 15]]

###################################################
Pac-Man is in position [14, 15]
Ghost [12, 14] is at crossroad [14, 15] at distance 3 from Pc-Man  at distance 3 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 0
Ghost [16, 15] is at crossroad [4, 15] at distance 2 from Pc-Man at distance -7 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 9
Pac-Man distance to target [14, 16] is: 1
pPac-Man corridor is :corr<[[14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15]]>
crossroad: [14, 15]
ghost at crossroad is: ghost([12, 14])
Ghost [6, 18] is at distance 11 from Pac-Man and 11 from crossroad [14, 15]
Ghost [16, 15] is at distance 2 from Pac-Man and -7 from crossroad [4, 15]
Ghost [1, 8] is at distance 19 from Pac-Man and 19 from crossroad [14, 15]
Ghost [12, 14] is at distance 3 from Pac-Man and 3 from crossroad [14, 15]
---> before condition: 3, 1
---> verifying if ghost: ghost([12, 14])is in corridor [[14, 15], [14, 16]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[12, 14], [12, 15]]
GHOST_INFO: pacman path coordinates are: [[14, 16], [14, 15], [14, 16], [14, 15]]
GHOST_INFO: ghost coordinate of interception is: None
valid: ghost nearby cannot intercept
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [14, 16]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 15]]
subcorridor1 is: [[14, 17], [14, 18], [14, 19], [14, 20]]
path_coords is: [[14, 17], [14, 16], [14, 17], [14, 16]]

###################################################
Pac-Man is in position [14, 16]
Ghost [15, 15] is at crossroad [14, 15] at distance 2 from Pc-Man  at distance 1 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 1

Pac-Man distance to target [14, 17] is: 1
pPac-Man corridor is :corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>
crossroad: [14, 20]
ghost at crossroad is: None
Ghost [7, 18] is at distance 11 from Pac-Man and 10 from crossroad [14, 15]
Ghost [15, 15] is at distance 2 from Pac-Man and 1 from crossroad [14, 15]
Ghost [1, 9] is at distance 19 from Pac-Man and 18 from crossroad [14, 15]
Ghost [12, 15] is at distance 3 from Pac-Man and 2 from crossroad [14, 15]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [14, 17]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 15], [14, 16]]
subcorridor1 is: [[14, 18], [14, 19], [14, 20]]
path_coords is: [[14, 18], [14, 17], [14, 18], [14, 17]]

###################################################
Pac-Man is in position [14, 17]
Ghost [14, 15] is at crossroad [14, 15] at distance 2 from Pc-Man  at distance 0 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 2

Pac-Man distance to target [14, 18] is: 1
pPac-Man corridor is :corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>
crossroad: [14, 20]
ghost at crossroad is: None
Ghost [8, 18] is at distance 11 from Pac-Man and 9 from crossroad [14, 15]
Ghost [14, 15] is at distance 2 from Pac-Man and 0 from crossroad [14, 15]
Ghost [1, 10] is at distance 19 from Pac-Man and 17 from crossroad [14, 15]
Ghost [13, 15] is at distance 3 from Pac-Man and 1 from crossroad [14, 15]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [14, 18]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 15], [14, 16], [14, 17]]
subcorridor1 is: [[14, 19], [14, 20]]
path_coords is: [[14, 19], [14, 18], [14, 19], [14, 18]]

###################################################
Pac-Man is in position [14, 18]
Ghost [14, 16] is at crossroad [14, 15] at distance 2 from Pc-Man  at distance -1 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 3
Ghost [9, 18] is at crossroad [14, 20] at distance 9 from Pc-Man at distance 7 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [14, 19] is: 1
pPac-Man corridor is :corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>
crossroad: [14, 20]
ghost at crossroad is: ghost([9, 18])
Ghost [9, 18] is at distance 9 from Pac-Man and 7 from crossroad [14, 20]
Ghost [14, 16] is at distance 2 from Pac-Man and -1 from crossroad [14, 15]
Ghost [2, 10] is at distance 19 from Pac-Man and 16 from crossroad [14, 15]
Ghost [14, 15] is at distance 3 from Pac-Man and 0 from crossroad [14, 15]
---> before condition: 9, 1
---> verifying if ghost: ghost([9, 18])is in corridor [[14, 18], [14, 19]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [14, 19]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 15], [14, 16], [14, 17], [14, 18]]
subcorridor1 is: [[14, 20]]
path_coords is: [[14, 20], [14, 19], [14, 20], [14, 19]]

###################################################
Pac-Man is in position [14, 19]
Ghost [14, 17] is at crossroad [14, 15] at distance 2 from Pc-Man  at distance -2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 4
Ghost [10, 18] is at crossroad [14, 20] at distance 7 from Pc-Man at distance 6 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 1
Pac-Man distance to target [14, 20] is: 1
pPac-Man corridor is :corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>
crossroad: [14, 20]
ghost at crossroad is: ghost([10, 18])
Ghost [10, 18] is at distance 7 from Pac-Man and 6 from crossroad [14, 20]
Ghost [14, 17] is at distance 2 from Pac-Man and -2 from crossroad [14, 15]
Ghost [3, 10] is at distance 19 from Pac-Man and 15 from crossroad [14, 15]
Ghost [14, 16] is at distance 3 from Pac-Man and -1 from crossroad [14, 15]
---> before condition: 7, 1
---> verifying if ghost: ghost([10, 18])is in corridor [[14, 19], [14, 20]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[10, 18], [11, 18], [12, 18]]
GHOST_INFO: pacman path coordinates are: [[14, 20], [14, 19], [14, 20], [14, 19]]
GHOST_INFO: ghost coordinate of interception is: None
valid: ghost nearby cannot intercept
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [14, 20]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 15], [14, 16], [14, 17], [14, 18], [14, 19]]
subcorridor1 is: []
path_coords is: [[13, 20], [13, 20], [14, 20], [14, 20]]

###################################################
Pac-Man is in position [14, 20]
Ghost [14, 18] is at crossroad [14, 15] at distance 2 from Pc-Man  at distance -3 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 5
Ghost [11, 18] is at crossroad [14, 20] at distance 5 from Pc-Man at distance 5 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 0
Pac-Man distance to target [13, 20] is: 1
pPac-Man corridor is :corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>
crossroad: [14, 20]
ghost at crossroad is: ghost([11, 18])
Ghost [11, 18] is at distance 5 from Pac-Man and 5 from crossroad [14, 20]
Ghost [14, 18] is at distance 2 from Pac-Man and -3 from crossroad [14, 15]
Ghost [4, 10] is at distance 19 from Pac-Man and 14 from crossroad [14, 15]
Ghost [14, 17] is at distance 3 from Pac-Man and -2 from crossroad [14, 15]
---> before condition: 5, 1
---> verifying if ghost: ghost([11, 18])is in corridor [[13, 20], [14, 20]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[11, 18], [12, 18]]
GHOST_INFO: pacman path coordinates are: [[13, 20], [13, 20], [14, 20], [14, 20]]
GHOST_INFO: ghost coordinate of interception is: None
valid: ghost nearby cannot intercept
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [13, 20]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[12, 20]]
subcorridor1 is: [[14, 20]]
path_coords is: [[12, 20], [12, 20], [13, 20], [13, 20]]

###################################################
Pac-Man is in position [13, 20]
Ghost [12, 18] is at crossroad [12, 20] at distance 3 from Pc-Man  at distance 2 of crossroad 
with the semaphore SEMAPHORE.YELLOW
Pac-Man distance to this crossroad0 is 1
Ghost [14, 19] is at crossroad [14, 20] at distance 2 from Pc-Man at distance 1 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 1
Pac-Man distance to target [12, 20] is: 1
pPac-Man corridor is :corr<[[12, 20], [13, 20], [14, 20]]>
crossroad: [12, 20]
ghost at crossroad is: ghost([12, 18])
Ghost [12, 18] is at distance 3 from Pac-Man and 2 from crossroad [12, 20]
Ghost [14, 19] is at distance 2 from Pac-Man and 1 from crossroad [14, 20]
Ghost [5, 10] is at distance 18 from Pac-Man and 17 from crossroad [12, 20]
Ghost [14, 18] is at distance 3 from Pac-Man and 2 from crossroad [14, 20]
---> before condition: 3, 1
---> verifying if ghost: ghost([12, 18])is in corridor [[12, 20], [13, 20]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[12, 18], [12, 19], [12, 20]]
GHOST_INFO: pacman path coordinates are: [[12, 20], [12, 20], [13, 20], [13, 20]]
GHOST_INFO: ghost coordinate of interception is: [12, 20]
GHOST_INFO: pac dist to intersept: 1 ghost dist to intercept: 2
valid: ghost nearby cannot intercept
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [12, 20]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: []
subcorridor1 is: [[13, 20], [14, 20]]
path_coords is: [[11, 20], [11, 20], [12, 20], [12, 20]]

###################################################
Pac-Man is in position [12, 20]
Ghost [12, 19] is at crossroad [12, 20] at distance 1 from Pc-Man  at distance 1 of crossroad 
with the semaphore SEMAPHORE.YELLOW
Pac-Man distance to this crossroad0 is 0
Ghost [14, 20] is at crossroad [14, 20] at distance 2 from Pc-Man at distance 0 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [11, 20] is: 1
pPac-Man corridor is :corr<[[12, 20], [13, 20], [14, 20]]>
crossroad: [12, 20]
ghost at crossroad is: ghost([12, 19])
Ghost [12, 19] is at distance 1 from Pac-Man and 1 from crossroad [12, 20]
Ghost [14, 20] is at distance 2 from Pac-Man and 0 from crossroad [14, 20]
Ghost [6, 10] is at distance 16 from Pac-Man and 16 from crossroad [12, 20]
Ghost [14, 19] is at distance 3 from Pac-Man and 3 from crossroad [12, 20]
---> before condition: 1, 1
---> verifying if ghost: ghost([12, 19])is in corridor [[11, 20], [12, 20]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[12, 19], [12, 20]]
GHOST_INFO: pacman path coordinates are: [[11, 20], [11, 20], [12, 20], [12, 20]]
GHOST_INFO: ghost coordinate of interception is: [12, 20]
GHOST_INFO: pac dist to intersept: 0 ghost dist to intercept: 1
valid: ghost nearby cannot intercept
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [11, 20]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[10, 23], [10, 22], [10, 21], [10, 20]]
subcorridor1 is: [[12, 20]]
path_coords is: [[10, 20], [10, 20], [11, 20], [11, 20]]

###################################################
Pac-Man is in position [11, 20]
Ghost [12, 20] is at crossroad [12, 20] at distance 1 from Pc-Man at distance 0 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 1
Pac-Man distance to target [10, 20] is: 1
pPac-Man corridor is :corr<[[10, 23], [10, 22], [10, 21], [10, 20], [11, 20], [12, 20]]>
crossroad: [10, 23]
ghost at crossroad is: None
Ghost [12, 20] is at distance 1 from Pac-Man and 0 from crossroad [12, 20]
Ghost [13, 20] is at distance 2 from Pac-Man and 1 from crossroad [12, 20]
Ghost [7, 10] is at distance 18 from Pac-Man and 17 from crossroad [12, 20]
Ghost [14, 20] is at distance 3 from Pac-Man and 2 from crossroad [12, 20]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [10, 20]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[10, 23], [10, 22], [10, 21]]
subcorridor1 is: [[11, 20], [12, 20]]
path_coords is: [[10, 21], [10, 21], [10, 20], [10, 20]]

###################################################
Pac-Man is in position [10, 20]
Ghost [11, 20] is at crossroad [12, 20] at distance 1 from Pc-Man at distance -1 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [10, 21] is: 1
pPac-Man corridor is :corr<[[10, 23], [10, 22], [10, 21], [10, 20], [11, 20], [12, 20]]>
crossroad: [10, 23]
ghost at crossroad is: None
Ghost [11, 20] is at distance 1 from Pac-Man and -1 from crossroad [12, 20]
Ghost [12, 20] is at distance 2 from Pac-Man and 0 from crossroad [12, 20]
Ghost [8, 10] is at distance 20 from Pac-Man and 18 from crossroad [12, 20]
Ghost [13, 20] is at distance 3 from Pac-Man and 1 from crossroad [12, 20]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [10, 21]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[10, 23], [10, 22]]
subcorridor1 is: [[10, 20], [11, 20], [12, 20]]
path_coords is: [[10, 22], [10, 22], [10, 21], [10, 21]]

###################################################
Pac-Man is in position [10, 21]
Ghost [8, 9] is at crossroad [10, 23] at distance 22 from Pc-Man  at distance 20 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 2
Ghost [10, 20] is at crossroad [12, 20] at distance 1 from Pc-Man at distance -2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 3
Pac-Man distance to target [10, 22] is: 1
pPac-Man corridor is :corr<[[10, 23], [10, 22], [10, 21], [10, 20], [11, 20], [12, 20]]>
crossroad: [10, 23]
ghost at crossroad is: ghost([8, 9])
Ghost [10, 20] is at distance 1 from Pac-Man and -2 from crossroad [12, 20]
Ghost [11, 20] is at distance 2 from Pac-Man and -1 from crossroad [12, 20]
Ghost [8, 9] is at distance 22 from Pac-Man and 20 from crossroad [10, 23]
Ghost [12, 20] is at distance 3 from Pac-Man and 0 from crossroad [12, 20]
---> before condition: 22, 1
---> verifying if ghost: ghost([8, 9])is in corridor [[10, 22], [10, 21]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [10, 22]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[10, 23]]
subcorridor1 is: [[10, 21], [10, 20], [11, 20], [12, 20]]
path_coords is: [[10, 23], [10, 23], [10, 22], [10, 22]]

###################################################
Pac-Man is in position [10, 22]
Ghost [8, 8] is at crossroad [10, 23] at distance 22 from Pc-Man  at distance 21 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 1
Ghost [10, 21] is at crossroad [12, 20] at distance 1 from Pc-Man at distance -3 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 4
Pac-Man distance to target [10, 23] is: 1
pPac-Man corridor is :corr<[[10, 23], [10, 22], [10, 21], [10, 20], [11, 20], [12, 20]]>
crossroad: [10, 23]
ghost at crossroad is: ghost([8, 8])
Ghost [10, 21] is at distance 1 from Pac-Man and -3 from crossroad [12, 20]
Ghost [10, 20] is at distance 2 from Pac-Man and -2 from crossroad [12, 20]
Ghost [8, 8] is at distance 22 from Pac-Man and 21 from crossroad [10, 23]
Ghost [11, 20] is at distance 3 from Pac-Man and -1 from crossroad [12, 20]
---> before condition: 22, 1
---> verifying if ghost: ghost([8, 8])is in corridor [[10, 23], [10, 22]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [10, 23]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: []
subcorridor1 is: [[10, 22], [10, 21], [10, 20], [11, 20], [12, 20]]
path_coords is: [[9, 23], [9, 23], [10, 23], [10, 23]]

###################################################
Pac-Man is in position [10, 23]
Ghost [8, 7] is at crossroad [10, 23] at distance 22 from Pc-Man  at distance 22 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 0
Ghost [10, 22] is at crossroad [12, 20] at distance 1 from Pc-Man at distance -4 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 5
Pac-Man distance to target [9, 23] is: 1
pPac-Man corridor is :corr<[[10, 23], [10, 22], [10, 21], [10, 20], [11, 20], [12, 20]]>
crossroad: [10, 23]
ghost at crossroad is: ghost([8, 7])
Ghost [10, 22] is at distance 1 from Pac-Man and -4 from crossroad [12, 20]
Ghost [10, 21] is at distance 2 from Pac-Man and -3 from crossroad [12, 20]
Ghost [8, 7] is at distance 22 from Pac-Man and 22 from crossroad [10, 23]
Ghost [10, 20] is at distance 3 from Pac-Man and -2 from crossroad [12, 20]
---> before condition: 22, 1
---> verifying if ghost: ghost([8, 7])is in corridor [[9, 23], [10, 23]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [9, 23]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[8, 23]]
subcorridor1 is: [[10, 23]]
path_coords is: [[6, 24], [6, 23], [6, 24], [6, 23], [7, 23], [8, 23], [8, 23], [9, 23], [9, 23]]

###################################################
Pac-Man is in position [9, 23]
Ghost [9, 7] is at crossroad [8, 23] at distance 22 from Pc-Man  at distance 21 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 1
Ghost [10, 23] is at crossroad [10, 23] at distance 1 from Pc-Man at distance 0 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 1
Pac-Man distance to target [6, 24] is: 4
pPac-Man corridor is :corr<[[8, 23], [9, 23], [10, 23]]>
crossroad: [8, 23]
ghost at crossroad is: ghost([9, 7])
Ghost [10, 23] is at distance 1 from Pac-Man and 0 from crossroad [10, 23]
Ghost [10, 22] is at distance 2 from Pac-Man and 1 from crossroad [10, 23]
Ghost [9, 7] is at distance 22 from Pac-Man and 21 from crossroad [8, 23]
Ghost [10, 21] is at distance 3 from Pac-Man and 2 from crossroad [10, 23]
---> before condition: 22, 4
---> verifying if ghost: ghost([9, 7])is in corridor [[8, 23], [9, 23]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [8, 23]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: []
subcorridor1 is: [[9, 23], [10, 23]]
path_coords is: [[6, 24], [6, 23], [6, 24], [6, 23], [7, 23], [8, 23], [8, 23]]

###################################################
Pac-Man is in position [8, 23]
Ghost [10, 22] is at crossroad [8, 23] at distance 3 from Pc-Man  at distance 3 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 0
Ghost [9, 23] is at crossroad [10, 23] at distance 1 from Pc-Man at distance -1 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [6, 24] is: 3
pPac-Man corridor is :corr<[[8, 23], [9, 23], [10, 23]]>
crossroad: [8, 23]
ghost at crossroad is: ghost([10, 22])
Ghost [9, 23] is at distance 1 from Pac-Man and -1 from crossroad [10, 23]
Ghost [10, 23] is at distance 2 from Pac-Man and 0 from crossroad [10, 23]
Ghost [10, 7] is at distance 22 from Pac-Man and 22 from crossroad [8, 23]
Ghost [10, 22] is at distance 3 from Pac-Man and 3 from crossroad [8, 23]
---> before condition: 3, 3
---> verifying if ghost: ghost([10, 22])is in corridor [[6, 23], [7, 23], [8, 23]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[10, 23], [10, 22]]
GHOST_INFO: pacman path coordinates are: [[6, 24], [6, 23], [6, 24], [6, 23], [7, 23], [8, 23], [8, 23]]
GHOST_INFO: ghost coordinate of interception is: None
valid: ghost nearby cannot intercept
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [7, 23]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[6, 23]]
subcorridor1 is: [[8, 23]]
path_coords is: [[6, 24], [6, 23], [6, 24], [6, 23], [7, 23], [7, 23]]

###################################################
Pac-Man is in position [7, 23]
Ghost [8, 23] is at crossroad [8, 23] at distance 1 from Pc-Man at distance 0 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 1
Pac-Man distance to target [6, 24] is: 2
pPac-Man corridor is :corr<[[6, 23], [7, 23], [8, 23]]>
crossroad: [6, 23]
ghost at crossroad is: None
Ghost [8, 23] is at distance 1 from Pac-Man and 0 from crossroad [8, 23]
Ghost [9, 23] is at distance 2 from Pac-Man and 1 from crossroad [8, 23]
Ghost [11, 7] is at distance 24 from Pac-Man and 23 from crossroad [8, 23]
Ghost [10, 23] is at distance 3 from Pac-Man and 2 from crossroad [8, 23]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [6, 23]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[4, 23], [5, 23]]
subcorridor1 is: []
path_coords is: [[6, 24], [6, 23], [6, 24], [6, 23]]

###################################################
Pac-Man is in position [6, 23]
Ghost [12, 7] is at crossroad [4, 23] at distance 26 from Pc-Man  at distance 24 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 2
Ghost [7, 23] is at crossroad [6, 23] at distance 1 from Pc-Man at distance 1 of crossroad 
with the semaphore SEMAPHORE.YELLOW
Pac-Man distance to this crossroad1 is 0
Pac-Man distance to target [6, 24] is: 1
pPac-Man corridor is :corr<[[4, 23], [5, 23], [6, 23]]>
crossroad: [6, 23]
ghost at crossroad is: ghost([7, 23])
Ghost [7, 23] is at distance 1 from Pac-Man and 1 from crossroad [6, 23]
Ghost [8, 23] is at distance 2 from Pac-Man and 2 from crossroad [6, 23]
Ghost [12, 7] is at distance 26 from Pac-Man and 24 from crossroad [4, 23]
Ghost [9, 23] is at distance 3 from Pac-Man and 3 from crossroad [6, 23]
---> before condition: 1, 1
---> verifying if ghost: ghost([7, 23])is in corridor [[6, 23], [6, 24]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[6, 23], [7, 23]]
GHOST_INFO: pacman path coordinates are: [[6, 24], [6, 23], [6, 24], [6, 23]]
GHOST_INFO: ghost coordinate of interception is: [6, 23]
GHOST_INFO: pac dist to intersept: 0 ghost dist to intercept: 1
valid: ghost nearby cannot intercept
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [6, 24]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[6, 23]]
subcorridor1 is: [[6, 25], [6, 26], [7, 26], [8, 26], [8, 27], [8, 28], [8, 29]]
path_coords is: [[6, 25], [6, 24], [6, 25], [6, 24]]

###################################################
Pac-Man is in position [6, 24]
Ghost [6, 23] is at crossroad [6, 23] at distance 1 from Pc-Man  at distance 0 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 1

Pac-Man distance to target [6, 25] is: 1
pPac-Man corridor is :corr<[[6, 23], [6, 24], [6, 25], [6, 26], [7, 26], [8, 26], [8, 27], [8, 28], [8, 29]]>
crossroad: [8, 29]
ghost at crossroad is: None
Ghost [6, 23] is at distance 1 from Pac-Man and 0 from crossroad [6, 23]
Ghost [7, 23] is at distance 2 from Pac-Man and 1 from crossroad [6, 23]
Ghost [13, 7] is at distance 26 from Pac-Man and 25 from crossroad [6, 23]
Ghost [8, 23] is at distance 3 from Pac-Man and 2 from crossroad [6, 23]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [6, 25]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[6, 23], [6, 24]]
subcorridor1 is: [[6, 26], [7, 26], [8, 26], [8, 27], [8, 28], [8, 29]]
path_coords is: [[6, 26], [6, 25], [6, 26], [6, 25]]

###################################################
Pac-Man is in position [6, 25]
Ghost [6, 24] is at crossroad [6, 23] at distance 1 from Pc-Man  at distance -1 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 2

Pac-Man distance to target [6, 26] is: 1
pPac-Man corridor is :corr<[[6, 23], [6, 24], [6, 25], [6, 26], [7, 26], [8, 26], [8, 27], [8, 28], [8, 29]]>
crossroad: [8, 29]
ghost at crossroad is: None
Ghost [6, 24] is at distance 1 from Pac-Man and -1 from crossroad [6, 23]
Ghost [6, 23] is at distance 2 from Pac-Man and 0 from crossroad [6, 23]
Ghost [14, 7] is at distance 26 from Pac-Man and 24 from crossroad [6, 23]
Ghost [7, 23] is at distance 3 from Pac-Man and 1 from crossroad [6, 23]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [6, 26]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[6, 23], [6, 24], [6, 25]]
subcorridor1 is: [[7, 26], [8, 26], [8, 27], [8, 28], [8, 29]]
path_coords is: [[7, 26], [6, 26], [7, 26], [6, 26]]

###################################################
Pac-Man is in position [6, 26]
Ghost [6, 25] is at crossroad [6, 23] at distance 1 from Pc-Man  at distance -2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 3

Pac-Man distance to target [7, 26] is: 1
pPac-Man corridor is :corr<[[6, 23], [6, 24], [6, 25], [6, 26], [7, 26], [8, 26], [8, 27], [8, 28], [8, 29]]>
crossroad: [8, 29]
ghost at crossroad is: None
Ghost [6, 25] is at distance 1 from Pac-Man and -2 from crossroad [6, 23]
Ghost [6, 24] is at distance 2 from Pac-Man and -1 from crossroad [6, 23]
Ghost [14, 8] is at distance 26 from Pac-Man and 23 from crossroad [6, 23]
Ghost [6, 23] is at distance 3 from Pac-Man and 0 from crossroad [6, 23]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [7, 26]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[6, 23], [6, 24], [6, 25], [6, 26]]
subcorridor1 is: [[8, 26], [8, 27], [8, 28], [8, 29]]
path_coords is: [[8, 26], [7, 26], [8, 26], [7, 26]]

###################################################
Pac-Man is in position [7, 26]
Ghost [6, 26] is at crossroad [6, 23] at distance 1 from Pc-Man  at distance -3 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 4

Pac-Man distance to target [8, 26] is: 1
pPac-Man corridor is :corr<[[6, 23], [6, 24], [6, 25], [6, 26], [7, 26], [8, 26], [8, 27], [8, 28], [8, 29]]>
crossroad: [8, 29]
ghost at crossroad is: None
Ghost [6, 26] is at distance 1 from Pac-Man and -3 from crossroad [6, 23]
Ghost [6, 25] is at distance 2 from Pac-Man and -2 from crossroad [6, 23]
Ghost [14, 9] is at distance 26 from Pac-Man and 22 from crossroad [6, 23]
Ghost [6, 24] is at distance 3 from Pac-Man and -1 from crossroad [6, 23]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [8, 26]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[6, 23], [6, 24], [6, 25], [6, 26], [7, 26]]
subcorridor1 is: [[8, 27], [8, 28], [8, 29]]
path_coords is: [[8, 27], [8, 26], [8, 27], [8, 26]]

###################################################
Pac-Man is in position [8, 26]
Ghost [7, 26] is at crossroad [6, 23] at distance 1 from Pc-Man  at distance -4 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 5

Pac-Man distance to target [8, 27] is: 1
pPac-Man corridor is :corr<[[6, 23], [6, 24], [6, 25], [6, 26], [7, 26], [8, 26], [8, 27], [8, 28], [8, 29]]>
crossroad: [8, 29]
ghost at crossroad is: None
Ghost [7, 26] is at distance 1 from Pac-Man and -4 from crossroad [6, 23]
Ghost [6, 26] is at distance 2 from Pac-Man and -3 from crossroad [6, 23]
Ghost [14, 10] is at distance 26 from Pac-Man and 21 from crossroad [6, 23]
Ghost [6, 25] is at distance 3 from Pac-Man and -2 from crossroad [6, 23]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [8, 27]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[6, 23], [6, 24], [6, 25], [6, 26], [7, 26], [8, 26]]
subcorridor1 is: [[8, 28], [8, 29]]
path_coords is: [[8, 28], [8, 27], [8, 28], [8, 27]]

###################################################
Pac-Man is in position [8, 27]
Ghost [8, 26] is at crossroad [6, 23] at distance 1 from Pc-Man  at distance -5 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 6
Ghost [14, 11] is at crossroad [8, 29] at distance 26 from Pc-Man at distance 24 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [8, 28] is: 1
pPac-Man corridor is :corr<[[6, 23], [6, 24], [6, 25], [6, 26], [7, 26], [8, 26], [8, 27], [8, 28], [8, 29]]>
crossroad: [8, 29]
ghost at crossroad is: ghost([14, 11])
Ghost [8, 26] is at distance 1 from Pac-Man and -5 from crossroad [6, 23]
Ghost [7, 26] is at distance 2 from Pac-Man and -4 from crossroad [6, 23]
Ghost [14, 11] is at distance 26 from Pac-Man and 24 from crossroad [8, 29]
Ghost [6, 26] is at distance 3 from Pac-Man and -3 from crossroad [6, 23]
---> before condition: 26, 1
---> verifying if ghost: ghost([14, 11])is in corridor [[8, 27], [8, 28]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [8, 28]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[6, 23], [6, 24], [6, 25], [6, 26], [7, 26], [8, 26], [8, 27]]
subcorridor1 is: [[8, 29]]
path_coords is: [[8, 29], [8, 28], [8, 29], [8, 28]]

###################################################
Pac-Man is in position [8, 28]
Ghost [8, 27] is at crossroad [6, 23] at distance 1 from Pc-Man  at distance -6 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 7
Ghost [14, 12] is at crossroad [8, 29] at distance 24 from Pc-Man at distance 23 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 1
Pac-Man distance to target [8, 29] is: 1
pPac-Man corridor is :corr<[[6, 23], [6, 24], [6, 25], [6, 26], [7, 26], [8, 26], [8, 27], [8, 28], [8, 29]]>
crossroad: [8, 29]
ghost at crossroad is: ghost([14, 12])
Ghost [8, 27] is at distance 1 from Pac-Man and -6 from crossroad [6, 23]
Ghost [8, 26] is at distance 2 from Pac-Man and -5 from crossroad [6, 23]
Ghost [14, 12] is at distance 24 from Pac-Man and 23 from crossroad [8, 29]
Ghost [7, 26] is at distance 3 from Pac-Man and -4 from crossroad [6, 23]
---> before condition: 24, 1
---> verifying if ghost: ghost([14, 12])is in corridor [[8, 28], [8, 29]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [8, 29]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[6, 23], [6, 24], [6, 25], [6, 26], [7, 26], [8, 26], [8, 27], [8, 28]]
subcorridor1 is: []
path_coords is: [[7, 29], [7, 29], [8, 29], [8, 29]]

###################################################
Pac-Man is in position [8, 29]
Ghost [8, 28] is at crossroad [6, 23] at distance 1 from Pc-Man  at distance -7 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 8
Ghost [14, 13] is at crossroad [8, 29] at distance 22 from Pc-Man at distance 22 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 0
Pac-Man distance to target [7, 29] is: 1
pPac-Man corridor is :corr<[[6, 23], [6, 24], [6, 25], [6, 26], [7, 26], [8, 26], [8, 27], [8, 28], [8, 29]]>
crossroad: [8, 29]
ghost at crossroad is: ghost([14, 13])
Ghost [8, 28] is at distance 1 from Pac-Man and -7 from crossroad [6, 23]
Ghost [8, 27] is at distance 2 from Pac-Man and -6 from crossroad [6, 23]
Ghost [14, 13] is at distance 22 from Pac-Man and 22 from crossroad [8, 29]
Ghost [8, 26] is at distance 3 from Pac-Man and -5 from crossroad [6, 23]
---> before condition: 22, 1
---> verifying if ghost: ghost([14, 13])is in corridor [[7, 29], [8, 29]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [7, 29]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 26], [1, 26], [1, 27], [1, 28], [1, 29], [2, 29], [3, 29], [4, 29], [5, 29], [6, 29]]
subcorridor1 is: [[8, 29]]
path_coords is: [[6, 29], [6, 29], [7, 29], [7, 29]]

###################################################
Pac-Man is in position [7, 29]
Ghost [8, 29] is at crossroad [8, 29] at distance 1 from Pc-Man at distance 0 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 1
Pac-Man distance to target [6, 29] is: 1
pPac-Man corridor is :corr<[[2, 26], [1, 26], [1, 27], [1, 28], [1, 29], [2, 29], [3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29]]>
crossroad: [2, 26]
ghost at crossroad is: None
Ghost [8, 29] is at distance 1 from Pac-Man and 0 from crossroad [8, 29]
Ghost [8, 28] is at distance 2 from Pac-Man and 1 from crossroad [8, 29]
Ghost [14, 14] is at distance 22 from Pac-Man and 21 from crossroad [8, 29]
Ghost [8, 27] is at distance 3 from Pac-Man and 2 from crossroad [8, 29]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [6, 29]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 26], [1, 26], [1, 27], [1, 28], [1, 29], [2, 29], [3, 29], [4, 29], [5, 29]]
subcorridor1 is: [[7, 29], [8, 29]]
path_coords is: [[5, 29], [5, 29], [6, 29], [6, 29]]

###################################################
Pac-Man is in position [6, 29]
Ghost [7, 29] is at crossroad [8, 29] at distance 1 from Pc-Man at distance -1 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [5, 29] is: 1
pPac-Man corridor is :corr<[[2, 26], [1, 26], [1, 27], [1, 28], [1, 29], [2, 29], [3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29]]>
crossroad: [2, 26]
ghost at crossroad is: None
Ghost [7, 29] is at distance 1 from Pac-Man and -1 from crossroad [8, 29]
Ghost [8, 29] is at distance 2 from Pac-Man and 0 from crossroad [8, 29]
Ghost [14, 15] is at distance 22 from Pac-Man and 20 from crossroad [8, 29]
Ghost [8, 28] is at distance 3 from Pac-Man and 1 from crossroad [8, 29]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [5, 29]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 26], [1, 26], [1, 27], [1, 28], [1, 29], [2, 29], [3, 29], [4, 29]]
subcorridor1 is: [[6, 29], [7, 29], [8, 29]]
path_coords is: [[4, 29], [4, 29], [5, 29], [5, 29]]

###################################################
Pac-Man is in position [5, 29]
Ghost [6, 29] is at crossroad [8, 29] at distance 1 from Pc-Man at distance -2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 3
Pac-Man distance to target [4, 29] is: 1
pPac-Man corridor is :corr<[[2, 26], [1, 26], [1, 27], [1, 28], [1, 29], [2, 29], [3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29]]>
crossroad: [2, 26]
ghost at crossroad is: None
Ghost [6, 29] is at distance 1 from Pac-Man and -2 from crossroad [8, 29]
Ghost [7, 29] is at distance 2 from Pac-Man and -1 from crossroad [8, 29]
Ghost [15, 15] is at distance 24 from Pac-Man and 21 from crossroad [8, 29]
Ghost [8, 29] is at distance 3 from Pac-Man and 0 from crossroad [8, 29]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [4, 29]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 26], [1, 26], [1, 27], [1, 28], [1, 29], [2, 29], [3, 29]]
subcorridor1 is: [[5, 29], [6, 29], [7, 29], [8, 29]]
path_coords is: [[3, 29], [3, 29], [4, 29], [4, 29]]

###################################################
Pac-Man is in position [4, 29]
Ghost [5, 29] is at crossroad [8, 29] at distance 1 from Pc-Man at distance -3 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 4
Pac-Man distance to target [3, 29] is: 1
pPac-Man corridor is :corr<[[2, 26], [1, 26], [1, 27], [1, 28], [1, 29], [2, 29], [3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29]]>
crossroad: [2, 26]
ghost at crossroad is: None
Ghost [5, 29] is at distance 1 from Pac-Man and -3 from crossroad [8, 29]
Ghost [6, 29] is at distance 2 from Pac-Man and -2 from crossroad [8, 29]
Ghost [16, 15] is at distance 26 from Pac-Man and 22 from crossroad [8, 29]
Ghost [7, 29] is at distance 3 from Pac-Man and -1 from crossroad [8, 29]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [3, 29]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 26], [1, 26], [1, 27], [1, 28], [1, 29], [2, 29]]
subcorridor1 is: [[4, 29], [5, 29], [6, 29], [7, 29], [8, 29]]
path_coords is: [[2, 29], [2, 29], [3, 29], [3, 29]]

###################################################
Pac-Man is in position [3, 29]
Ghost [17, 15] is at crossroad [2, 26] at distance 25 from Pc-Man  at distance 19 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 6
Ghost [4, 29] is at crossroad [8, 29] at distance 1 from Pc-Man at distance -4 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 5
Pac-Man distance to target [2, 29] is: 1
pPac-Man corridor is :corr<[[2, 26], [1, 26], [1, 27], [1, 28], [1, 29], [2, 29], [3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29]]>
crossroad: [2, 26]
ghost at crossroad is: ghost([17, 15])
Ghost [4, 29] is at distance 1 from Pac-Man and -4 from crossroad [8, 29]
Ghost [5, 29] is at distance 2 from Pac-Man and -3 from crossroad [8, 29]
Ghost [17, 15] is at distance 25 from Pac-Man and 19 from crossroad [2, 26]
Ghost [6, 29] is at distance 3 from Pac-Man and -2 from crossroad [8, 29]
---> before condition: 25, 1
---> verifying if ghost: ghost([17, 15])is in corridor [[2, 29], [3, 29]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [2, 29]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 26], [1, 26], [1, 27], [1, 28], [1, 29]]
subcorridor1 is: [[3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29]]
path_coords is: [[1, 29], [1, 29], [2, 29], [2, 29]]

###################################################
Pac-Man is in position [2, 29]
Ghost [18, 15] is at crossroad [2, 26] at distance 23 from Pc-Man  at distance 18 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 5
Ghost [3, 29] is at crossroad [8, 29] at distance 1 from Pc-Man at distance -5 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 6
Pac-Man distance to target [1, 29] is: 1
pPac-Man corridor is :corr<[[2, 26], [1, 26], [1, 27], [1, 28], [1, 29], [2, 29], [3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29]]>
crossroad: [2, 26]
ghost at crossroad is: ghost([18, 15])
Ghost [3, 29] is at distance 1 from Pac-Man and -5 from crossroad [8, 29]
Ghost [4, 29] is at distance 2 from Pac-Man and -4 from crossroad [8, 29]
Ghost [18, 15] is at distance 23 from Pac-Man and 18 from crossroad [2, 26]
Ghost [5, 29] is at distance 3 from Pac-Man and -3 from crossroad [8, 29]
---> before condition: 23, 1
---> verifying if ghost: ghost([18, 15])is in corridor [[1, 29], [2, 29]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [1, 29]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 26], [1, 26], [1, 27], [1, 28]]
subcorridor1 is: [[2, 29], [3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29]]
path_coords is: [[1, 28], [1, 28], [1, 29], [1, 29]]

###################################################
Pac-Man is in position [1, 29]
Ghost [0, 15] is at crossroad [2, 26] at distance 21 from Pc-Man  at distance 17 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 4
Ghost [2, 29] is at crossroad [8, 29] at distance 1 from Pc-Man at distance -6 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 7
Pac-Man distance to target [1, 28] is: 1
pPac-Man corridor is :corr<[[2, 26], [1, 26], [1, 27], [1, 28], [1, 29], [2, 29], [3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29]]>
crossroad: [2, 26]
ghost at crossroad is: ghost([0, 15])
Ghost [2, 29] is at distance 1 from Pac-Man and -6 from crossroad [8, 29]
Ghost [3, 29] is at distance 2 from Pac-Man and -5 from crossroad [8, 29]
Ghost [0, 15] is at distance 21 from Pac-Man and 17 from crossroad [2, 26]
Ghost [4, 29] is at distance 3 from Pac-Man and -4 from crossroad [8, 29]
---> before condition: 21, 1
---> verifying if ghost: ghost([0, 15])is in corridor [[1, 28], [1, 29]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [1, 28]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 26], [1, 26], [1, 27]]
subcorridor1 is: [[1, 29], [2, 29], [3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29]]
path_coords is: [[1, 27], [1, 27], [1, 28], [1, 28]]

###################################################
Pac-Man is in position [1, 28]
Ghost [1, 15] is at crossroad [2, 26] at distance 19 from Pc-Man  at distance 16 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 3
Ghost [1, 29] is at crossroad [8, 29] at distance 1 from Pc-Man at distance -7 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 8
Pac-Man distance to target [1, 27] is: 1
pPac-Man corridor is :corr<[[2, 26], [1, 26], [1, 27], [1, 28], [1, 29], [2, 29], [3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29]]>
crossroad: [2, 26]
ghost at crossroad is: ghost([1, 15])
Ghost [1, 29] is at distance 1 from Pac-Man and -7 from crossroad [8, 29]
Ghost [2, 29] is at distance 2 from Pac-Man and -6 from crossroad [8, 29]
Ghost [1, 15] is at distance 19 from Pac-Man and 16 from crossroad [2, 26]
Ghost [3, 29] is at distance 3 from Pac-Man and -5 from crossroad [8, 29]
---> before condition: 19, 1
---> verifying if ghost: ghost([1, 15])is in corridor [[1, 27], [1, 28]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [1, 27]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 26], [1, 26]]
subcorridor1 is: [[1, 28], [1, 29], [2, 29], [3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29]]
path_coords is: [[1, 26], [1, 26], [1, 27], [1, 27]]

###################################################
Pac-Man is in position [1, 27]
Ghost [2, 15] is at crossroad [2, 26] at distance 17 from Pc-Man  at distance 15 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 2
Ghost [1, 28] is at crossroad [8, 29] at distance 1 from Pc-Man at distance -8 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 9
Pac-Man distance to target [1, 26] is: 1
pPac-Man corridor is :corr<[[2, 26], [1, 26], [1, 27], [1, 28], [1, 29], [2, 29], [3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29]]>
crossroad: [2, 26]
ghost at crossroad is: ghost([2, 15])
Ghost [1, 28] is at distance 1 from Pac-Man and -8 from crossroad [8, 29]
Ghost [1, 29] is at distance 2 from Pac-Man and -7 from crossroad [8, 29]
Ghost [2, 15] is at distance 17 from Pac-Man and 15 from crossroad [2, 26]
Ghost [2, 29] is at distance 3 from Pac-Man and -6 from crossroad [8, 29]
---> before condition: 17, 1
---> verifying if ghost: ghost([2, 15])is in corridor [[1, 26], [1, 27]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [1, 26]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 26]]
subcorridor1 is: [[1, 27], [1, 28], [1, 29], [2, 29], [3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29]]
path_coords is: [[2, 26], [2, 26], [1, 26], [1, 26]]

###################################################
Pac-Man is in position [1, 26]
Ghost [3, 15] is at crossroad [2, 26] at distance 15 from Pc-Man  at distance 14 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 1
Ghost [1, 27] is at crossroad [8, 29] at distance 1 from Pc-Man at distance -9 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 10
Pac-Man distance to target [2, 26] is: 1
pPac-Man corridor is :corr<[[2, 26], [1, 26], [1, 27], [1, 28], [1, 29], [2, 29], [3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29]]>
crossroad: [2, 26]
ghost at crossroad is: ghost([3, 15])
Ghost [1, 27] is at distance 1 from Pac-Man and -9 from crossroad [8, 29]
Ghost [1, 28] is at distance 2 from Pac-Man and -8 from crossroad [8, 29]
Ghost [3, 15] is at distance 15 from Pac-Man and 14 from crossroad [2, 26]
Ghost [1, 29] is at distance 3 from Pac-Man and -7 from crossroad [8, 29]
---> before condition: 15, 1
---> verifying if ghost: ghost([3, 15])is in corridor [[2, 26], [1, 26]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [2, 26]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: []
subcorridor1 is: [[1, 26], [1, 27], [1, 28], [1, 29], [2, 29], [3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29]]
path_coords is: [[2, 25], [2, 26], [2, 25], [2, 26]]

###################################################
Pac-Man is in position [2, 26]
Ghost [4, 15] is at crossroad [2, 26] at distance 13 from Pc-Man  at distance 13 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 0
Ghost [1, 26] is at crossroad [8, 29] at distance 1 from Pc-Man at distance -10 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 11
Pac-Man distance to target [2, 25] is: 1
pPac-Man corridor is :corr<[[2, 26], [1, 26], [1, 27], [1, 28], [1, 29], [2, 29], [3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29]]>
crossroad: [2, 26]
ghost at crossroad is: ghost([4, 15])
Ghost [1, 26] is at distance 1 from Pac-Man and -10 from crossroad [8, 29]
Ghost [1, 27] is at distance 2 from Pac-Man and -9 from crossroad [8, 29]
Ghost [4, 15] is at distance 13 from Pac-Man and 13 from crossroad [2, 26]
Ghost [1, 28] is at distance 3 from Pac-Man and -8 from crossroad [8, 29]
---> before condition: 13, 1
---> verifying if ghost: ghost([4, 15])is in corridor [[2, 26], [2, 25]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [2, 25]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 26]]
subcorridor1 is: [[2, 24], [2, 23], [1, 23], [1, 22], [1, 21], [1, 20], [2, 20], [3, 20], [4, 20]]
path_coords is: [[2, 24], [2, 25], [2, 24], [2, 25]]

###################################################
Pac-Man is in position [2, 25]
Ghost [2, 26] is at crossroad [2, 26] at distance 1 from Pc-Man  at distance 0 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 1

Pac-Man distance to target [2, 24] is: 1
pPac-Man corridor is :corr<[[2, 26], [2, 25], [2, 24], [2, 23], [1, 23], [1, 22], [1, 21], [1, 20], [2, 20], [3, 20], [4, 20]]>
crossroad: [4, 20]
ghost at crossroad is: None
Ghost [2, 26] is at distance 1 from Pac-Man and 0 from crossroad [2, 26]
Ghost [1, 26] is at distance 2 from Pac-Man and 1 from crossroad [2, 26]
Ghost [5, 15] is at distance 15 from Pac-Man and 14 from crossroad [2, 26]
Ghost [1, 27] is at distance 3 from Pac-Man and 2 from crossroad [2, 26]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [2, 24]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 26], [2, 25]]
subcorridor1 is: [[2, 23], [1, 23], [1, 22], [1, 21], [1, 20], [2, 20], [3, 20], [4, 20]]
path_coords is: [[2, 23], [2, 24], [2, 23], [2, 24]]

###################################################
Pac-Man is in position [2, 24]
Ghost [2, 25] is at crossroad [2, 26] at distance 1 from Pc-Man  at distance -1 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 2
Ghost [6, 15] is at crossroad [4, 20] at distance 15 from Pc-Man at distance 7 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 8
Pac-Man distance to target [2, 23] is: 1
pPac-Man corridor is :corr<[[2, 26], [2, 25], [2, 24], [2, 23], [1, 23], [1, 22], [1, 21], [1, 20], [2, 20], [3, 20], [4, 20]]>
crossroad: [4, 20]
ghost at crossroad is: ghost([6, 15])
Ghost [2, 25] is at distance 1 from Pac-Man and -1 from crossroad [2, 26]
Ghost [2, 26] is at distance 2 from Pac-Man and 0 from crossroad [2, 26]
Ghost [6, 15] is at distance 15 from Pac-Man and 7 from crossroad [4, 20]
Ghost [1, 26] is at distance 3 from Pac-Man and 1 from crossroad [2, 26]
---> before condition: 15, 1
---> verifying if ghost: ghost([6, 15])is in corridor [[2, 24], [2, 23]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [2, 23]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 26], [2, 25], [2, 24]]
subcorridor1 is: [[1, 23], [1, 22], [1, 21], [1, 20], [2, 20], [3, 20], [4, 20]]
path_coords is: [[1, 23], [2, 23], [1, 23], [2, 23]]

###################################################
Pac-Man is in position [2, 23]
Ghost [2, 24] is at crossroad [2, 26] at distance 1 from Pc-Man  at distance -2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 3
Ghost [6, 16] is at crossroad [4, 20] at distance 13 from Pc-Man at distance 6 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 7
Pac-Man distance to target [1, 23] is: 1
pPac-Man corridor is :corr<[[2, 26], [2, 25], [2, 24], [2, 23], [1, 23], [1, 22], [1, 21], [1, 20], [2, 20], [3, 20], [4, 20]]>
crossroad: [4, 20]
ghost at crossroad is: ghost([6, 16])
Ghost [2, 24] is at distance 1 from Pac-Man and -2 from crossroad [2, 26]
Ghost [2, 25] is at distance 2 from Pac-Man and -1 from crossroad [2, 26]
Ghost [6, 16] is at distance 13 from Pac-Man and 6 from crossroad [4, 20]
Ghost [2, 26] is at distance 3 from Pac-Man and 0 from crossroad [2, 26]
---> before condition: 13, 1
---> verifying if ghost: ghost([6, 16])is in corridor [[2, 23], [1, 23]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [1, 23]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 26], [2, 25], [2, 24], [2, 23]]
subcorridor1 is: [[1, 22], [1, 21], [1, 20], [2, 20], [3, 20], [4, 20]]
path_coords is: [[11, 23], [10, 23], [11, 23], [8, 23], [9, 23], [10, 23], [6, 23], [7, 23], [8, 23], [4, 23], [5, 23], [6, 23], [4, 20], [4, 21], [4, 22], [4, 23], [1, 23], [1, 22], [1, 21], [1, 20], [2, 20], [3, 20], [4, 20], [1, 23]]

###################################################
Pac-Man is in position [1, 23]
Ghost [2, 23] is at crossroad [2, 26] at distance 1 from Pc-Man  at distance -3 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 4
Ghost [6, 17] is at crossroad [4, 20] at distance 11 from Pc-Man at distance 5 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 6
Pac-Man distance to target [11, 23] is: 16
pPac-Man corridor is :corr<[[2, 26], [2, 25], [2, 24], [2, 23], [1, 23], [1, 22], [1, 21], [1, 20], [2, 20], [3, 20], [4, 20]]>
crossroad: [4, 20]
ghost at crossroad is: ghost([6, 17])
Ghost [2, 23] is at distance 1 from Pac-Man and -3 from crossroad [2, 26]
Ghost [2, 24] is at distance 2 from Pac-Man and -2 from crossroad [2, 26]
Ghost [6, 17] is at distance 11 from Pac-Man and 5 from crossroad [4, 20]
Ghost [2, 25] is at distance 3 from Pac-Man and -1 from crossroad [2, 26]
---> before condition: 11, 16
---> verifying if ghost: ghost([6, 17])is in corridor [[1, 23], [1, 22], [1, 21], [1, 20], [2, 20], [3, 20], [4, 20]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [1, 22]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 26], [2, 25], [2, 24], [2, 23], [1, 23]]
subcorridor1 is: [[1, 21], [1, 20], [2, 20], [3, 20], [4, 20]]
path_coords is: [[4, 24], [4, 24], [4, 23], [4, 20], [4, 21], [4, 22], [4, 23], [1, 22], [1, 21], [1, 20], [2, 20], [3, 20], [4, 20], [1, 22]]

###################################################
Pac-Man is in position [1, 22]
Ghost [1, 23] is at crossroad [2, 26] at distance 1 from Pc-Man  at distance -4 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 5
Ghost [6, 18] is at crossroad [4, 20] at distance 9 from Pc-Man at distance 4 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 5
Pac-Man distance to target [4, 24] is: 9
pPac-Man corridor is :corr<[[2, 26], [2, 25], [2, 24], [2, 23], [1, 23], [1, 22], [1, 21], [1, 20], [2, 20], [3, 20], [4, 20]]>
crossroad: [4, 20]
ghost at crossroad is: ghost([6, 18])
Ghost [1, 23] is at distance 1 from Pac-Man and -4 from crossroad [2, 26]
Ghost [2, 23] is at distance 2 from Pac-Man and -3 from crossroad [2, 26]
Ghost [6, 18] is at distance 9 from Pac-Man and 4 from crossroad [4, 20]
Ghost [2, 24] is at distance 3 from Pac-Man and -2 from crossroad [2, 26]
---> before condition: 9, 9
---> verifying if ghost: ghost([6, 18])is in corridor [[1, 22], [1, 21], [1, 20], [2, 20], [3, 20], [4, 20]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [1, 21]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 26], [2, 25], [2, 24], [2, 23], [1, 23], [1, 22]]
subcorridor1 is: [[1, 20], [2, 20], [3, 20], [4, 20]]
path_coords is: [[4, 24], [4, 24], [4, 23], [4, 20], [4, 21], [4, 22], [4, 23], [1, 21], [1, 20], [2, 20], [3, 20], [4, 20], [1, 21]]

###################################################
Pac-Man is in position [1, 21]
Ghost [1, 22] is at crossroad [2, 26] at distance 1 from Pc-Man  at distance -5 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 6
Ghost [7, 18] is at crossroad [4, 20] at distance 9 from Pc-Man at distance 5 of crossroad 
with the semaphore SEMAPHORE.YELLOW
Pac-Man distance to this crossroad1 is 4
Pac-Man distance to target [4, 24] is: 8
pPac-Man corridor is :corr<[[2, 26], [2, 25], [2, 24], [2, 23], [1, 23], [1, 22], [1, 21], [1, 20], [2, 20], [3, 20], [4, 20]]>
crossroad: [4, 20]
ghost at crossroad is: ghost([7, 18])
Ghost [1, 22] is at distance 1 from Pac-Man and -5 from crossroad [2, 26]
Ghost [1, 23] is at distance 2 from Pac-Man and -4 from crossroad [2, 26]
Ghost [7, 18] is at distance 9 from Pac-Man and 5 from crossroad [4, 20]
Ghost [2, 23] is at distance 3 from Pac-Man and -3 from crossroad [2, 26]
---> before condition: 9, 8
---> verifying if ghost: ghost([7, 18])is in corridor [[1, 21], [1, 20], [2, 20], [3, 20], [4, 20]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [1, 20]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 26], [2, 25], [2, 24], [2, 23], [1, 23], [1, 22], [1, 21]]
subcorridor1 is: [[2, 20], [3, 20], [4, 20]]
path_coords is: [[4, 24], [4, 24], [4, 23], [4, 20], [4, 21], [4, 22], [4, 23], [1, 20], [2, 20], [3, 20], [4, 20], [1, 20]]

###################################################
Pac-Man is in position [1, 20]
Ghost [1, 21] is at crossroad [2, 26] at distance 1 from Pc-Man  at distance -6 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 7
Ghost [8, 18] is at crossroad [4, 20] at distance 9 from Pc-Man at distance 6 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 3
Pac-Man distance to target [4, 24] is: 7
pPac-Man corridor is :corr<[[2, 26], [2, 25], [2, 24], [2, 23], [1, 23], [1, 22], [1, 21], [1, 20], [2, 20], [3, 20], [4, 20]]>
crossroad: [4, 20]
ghost at crossroad is: ghost([8, 18])
Ghost [1, 21] is at distance 1 from Pac-Man and -6 from crossroad [2, 26]
Ghost [1, 22] is at distance 2 from Pac-Man and -5 from crossroad [2, 26]
Ghost [8, 18] is at distance 9 from Pac-Man and 6 from crossroad [4, 20]
Ghost [1, 23] is at distance 3 from Pac-Man and -4 from crossroad [2, 26]
---> before condition: 9, 7
---> verifying if ghost: ghost([8, 18])is in corridor [[1, 20], [2, 20], [3, 20], [4, 20]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [2, 20]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 26], [2, 25], [2, 24], [2, 23], [1, 23], [1, 22], [1, 21], [1, 20]]
subcorridor1 is: [[3, 20], [4, 20]]
path_coords is: [[4, 24], [4, 24], [4, 23], [4, 20], [4, 21], [4, 22], [4, 23], [2, 20], [3, 20], [4, 20], [2, 20]]

###################################################
Pac-Man is in position [2, 20]
Ghost [1, 20] is at crossroad [2, 26] at distance 1 from Pc-Man  at distance -7 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 8
Ghost [9, 18] is at crossroad [4, 20] at distance 9 from Pc-Man at distance 7 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [4, 24] is: 6
pPac-Man corridor is :corr<[[2, 26], [2, 25], [2, 24], [2, 23], [1, 23], [1, 22], [1, 21], [1, 20], [2, 20], [3, 20], [4, 20]]>
crossroad: [4, 20]
ghost at crossroad is: ghost([9, 18])
Ghost [1, 20] is at distance 1 from Pac-Man and -7 from crossroad [2, 26]
Ghost [1, 21] is at distance 2 from Pac-Man and -6 from crossroad [2, 26]
Ghost [9, 18] is at distance 9 from Pac-Man and 7 from crossroad [4, 20]
Ghost [1, 22] is at distance 3 from Pac-Man and -5 from crossroad [2, 26]
---> before condition: 9, 6
---> verifying if ghost: ghost([9, 18])is in corridor [[2, 20], [3, 20], [4, 20]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [3, 20]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 26], [2, 25], [2, 24], [2, 23], [1, 23], [1, 22], [1, 21], [1, 20], [2, 20]]
subcorridor1 is: [[4, 20]]
path_coords is: [[4, 24], [4, 24], [4, 23], [4, 20], [4, 21], [4, 22], [4, 23], [3, 20], [4, 20], [3, 20]]

###################################################
Pac-Man is in position [3, 20]
Ghost [2, 20] is at crossroad [2, 26] at distance 1 from Pc-Man  at distance -8 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 9
Ghost [10, 18] is at crossroad [4, 20] at distance 9 from Pc-Man at distance 8 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 1
Pac-Man distance to target [4, 24] is: 5
pPac-Man corridor is :corr<[[2, 26], [2, 25], [2, 24], [2, 23], [1, 23], [1, 22], [1, 21], [1, 20], [2, 20], [3, 20], [4, 20]]>
crossroad: [4, 20]
ghost at crossroad is: ghost([10, 18])
Ghost [2, 20] is at distance 1 from Pac-Man and -8 from crossroad [2, 26]
Ghost [1, 20] is at distance 2 from Pac-Man and -7 from crossroad [2, 26]
Ghost [10, 18] is at distance 9 from Pac-Man and 8 from crossroad [4, 20]
Ghost [1, 21] is at distance 3 from Pac-Man and -6 from crossroad [2, 26]
---> before condition: 9, 5
---> verifying if ghost: ghost([10, 18])is in corridor [[3, 20], [4, 20]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [4, 20]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 26], [2, 25], [2, 24], [2, 23], [1, 23], [1, 22], [1, 21], [1, 20], [2, 20], [3, 20]]
subcorridor1 is: []
path_coords is: [[4, 24], [4, 24], [4, 23], [4, 20], [4, 21], [4, 22], [4, 23], [4, 20]]

###################################################
Pac-Man is in position [4, 20]
Ghost [3, 20] is at crossroad [2, 26] at distance 1 from Pc-Man  at distance -9 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 10
Ghost [11, 18] is at crossroad [4, 20] at distance 9 from Pc-Man at distance 9 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 0
Pac-Man distance to target [4, 24] is: 4
pPac-Man corridor is :corr<[[2, 26], [2, 25], [2, 24], [2, 23], [1, 23], [1, 22], [1, 21], [1, 20], [2, 20], [3, 20], [4, 20]]>
crossroad: [4, 20]
ghost at crossroad is: ghost([11, 18])
Ghost [3, 20] is at distance 1 from Pac-Man and -9 from crossroad [2, 26]
Ghost [2, 20] is at distance 2 from Pac-Man and -8 from crossroad [2, 26]
Ghost [11, 18] is at distance 9 from Pac-Man and 9 from crossroad [4, 20]
Ghost [1, 20] is at distance 3 from Pac-Man and -7 from crossroad [2, 26]
---> before condition: 9, 4
---> verifying if ghost: ghost([11, 18])is in corridor [[4, 20], [4, 21], [4, 22], [4, 23]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [4, 21]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[4, 20]]
subcorridor1 is: [[4, 22], [4, 23]]
path_coords is: [[4, 24], [4, 24], [4, 23], [4, 21], [4, 22], [4, 23], [4, 21]]

###################################################
Pac-Man is in position [4, 21]
Ghost [4, 20] is at crossroad [4, 20] at distance 1 from Pc-Man  at distance 0 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 1

Pac-Man distance to target [4, 24] is: 3
pPac-Man corridor is :corr<[[4, 20], [4, 21], [4, 22], [4, 23]]>
crossroad: [4, 23]
ghost at crossroad is: None
Ghost [4, 20] is at distance 1 from Pac-Man and 0 from crossroad [4, 20]
Ghost [3, 20] is at distance 2 from Pac-Man and 1 from crossroad [4, 20]
Ghost [12, 18] is at distance 11 from Pac-Man and 10 from crossroad [4, 20]
Ghost [2, 20] is at distance 3 from Pac-Man and 2 from crossroad [4, 20]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [4, 22]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[4, 20], [4, 21]]
subcorridor1 is: [[4, 23]]
path_coords is: [[4, 24], [4, 24], [4, 23], [4, 22], [4, 23], [4, 22]]

###################################################
Pac-Man is in position [4, 22]
Ghost [4, 21] is at crossroad [4, 20] at distance 1 from Pc-Man  at distance -1 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 2
Ghost [12, 19] is at crossroad [4, 23] at distance 13 from Pc-Man at distance 12 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 1
Pac-Man distance to target [4, 24] is: 2
pPac-Man corridor is :corr<[[4, 20], [4, 21], [4, 22], [4, 23]]>
crossroad: [4, 23]
ghost at crossroad is: ghost([12, 19])
Ghost [4, 21] is at distance 1 from Pac-Man and -1 from crossroad [4, 20]
Ghost [4, 20] is at distance 2 from Pac-Man and 0 from crossroad [4, 20]
Ghost [12, 19] is at distance 13 from Pac-Man and 12 from crossroad [4, 23]
Ghost [3, 20] is at distance 3 from Pac-Man and 1 from crossroad [4, 20]
---> before condition: 13, 2
---> verifying if ghost: ghost([12, 19])is in corridor [[4, 22], [4, 23]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [4, 23]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[4, 20], [4, 21], [4, 22]]
subcorridor1 is: []
path_coords is: [[4, 24], [4, 24], [4, 23], [4, 23]]

###################################################
Pac-Man is in position [4, 23]
Ghost [4, 22] is at crossroad [4, 20] at distance 1 from Pc-Man  at distance -2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 3
Ghost [12, 20] is at crossroad [4, 23] at distance 11 from Pc-Man at distance 11 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 0
Pac-Man distance to target [4, 24] is: 1
pPac-Man corridor is :corr<[[4, 20], [4, 21], [4, 22], [4, 23]]>
crossroad: [4, 23]
ghost at crossroad is: ghost([12, 20])
Ghost [4, 22] is at distance 1 from Pac-Man and -2 from crossroad [4, 20]
Ghost [4, 21] is at distance 2 from Pac-Man and -1 from crossroad [4, 20]
Ghost [12, 20] is at distance 11 from Pac-Man and 11 from crossroad [4, 23]
Ghost [4, 20] is at distance 3 from Pac-Man and 0 from crossroad [4, 20]
---> before condition: 11, 1
---> verifying if ghost: ghost([12, 20])is in corridor [[4, 24], [4, 23]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [4, 24]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 26], [3, 26], [4, 26], [4, 25]]
subcorridor1 is: [[4, 23]]
path_coords is: [[4, 25], [4, 25], [4, 24], [4, 24]]

###################################################
Pac-Man is in position [4, 24]
Ghost [4, 23] is at crossroad [4, 23] at distance 1 from Pc-Man at distance 0 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 1
Pac-Man distance to target [4, 25] is: 1
pPac-Man corridor is :corr<[[2, 26], [3, 26], [4, 26], [4, 25], [4, 24], [4, 23]]>
crossroad: [2, 26]
ghost at crossroad is: None
Ghost [4, 23] is at distance 1 from Pac-Man and 0 from crossroad [4, 23]
Ghost [4, 22] is at distance 2 from Pac-Man and 1 from crossroad [4, 23]
Ghost [13, 20] is at distance 13 from Pac-Man and 12 from crossroad [4, 23]
Ghost [4, 21] is at distance 3 from Pac-Man and 2 from crossroad [4, 23]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [4, 25]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 26], [3, 26], [4, 26]]
subcorridor1 is: [[4, 24], [4, 23]]
path_coords is: [[4, 26], [4, 26], [4, 25], [4, 25]]

###################################################
Pac-Man is in position [4, 25]
Ghost [4, 24] is at crossroad [4, 23] at distance 1 from Pc-Man at distance -1 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [4, 26] is: 1
pPac-Man corridor is :corr<[[2, 26], [3, 26], [4, 26], [4, 25], [4, 24], [4, 23]]>
crossroad: [2, 26]
ghost at crossroad is: None
Ghost [4, 24] is at distance 1 from Pac-Man and -1 from crossroad [4, 23]
Ghost [4, 23] is at distance 2 from Pac-Man and 0 from crossroad [4, 23]
Ghost [14, 20] is at distance 15 from Pac-Man and 13 from crossroad [4, 23]
Ghost [4, 22] is at distance 3 from Pac-Man and 1 from crossroad [4, 23]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [4, 26]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 26], [3, 26]]
subcorridor1 is: [[4, 25], [4, 24], [4, 23]]
path_coords is: [[3, 26], [3, 26], [4, 26], [4, 26]]

###################################################
Pac-Man is in position [4, 26]
Ghost [4, 25] is at crossroad [4, 23] at distance 1 from Pc-Man at distance -2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 3
Pac-Man distance to target [3, 26] is: 1
pPac-Man corridor is :corr<[[2, 26], [3, 26], [4, 26], [4, 25], [4, 24], [4, 23]]>
crossroad: [2, 26]
ghost at crossroad is: None
Ghost [4, 25] is at distance 1 from Pac-Man and -2 from crossroad [4, 23]
Ghost [4, 24] is at distance 2 from Pac-Man and -1 from crossroad [4, 23]
Ghost [14, 19] is at distance 17 from Pac-Man and 14 from crossroad [4, 23]
Ghost [4, 23] is at distance 3 from Pac-Man and 0 from crossroad [4, 23]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [3, 26]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 26]]
subcorridor1 is: [[4, 26], [4, 25], [4, 24], [4, 23]]
path_coords is: [[9, 29], [8, 29], [9, 29], [2, 26], [1, 26], [1, 27], [1, 28], [1, 29], [2, 29], [3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29], [2, 26], [3, 26], [3, 26]]

###################################################
Pac-Man is in position [3, 26]
Ghost [4, 26] is at crossroad [4, 23] at distance 1 from Pc-Man at distance -3 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 4
Pac-Man distance to target [9, 29] is: 13
pPac-Man corridor is :corr<[[2, 26], [3, 26], [4, 26], [4, 25], [4, 24], [4, 23]]>
crossroad: [2, 26]
ghost at crossroad is: None
Ghost [4, 26] is at distance 1 from Pac-Man and -3 from crossroad [4, 23]
Ghost [4, 25] is at distance 2 from Pac-Man and -2 from crossroad [4, 23]
Ghost [14, 18] is at distance 19 from Pac-Man and 15 from crossroad [4, 23]
Ghost [4, 24] is at distance 3 from Pac-Man and -1 from crossroad [4, 23]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [2, 26]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: []
subcorridor1 is: [[3, 26], [4, 26], [4, 25], [4, 24], [4, 23]]
path_coords is: [[9, 29], [8, 29], [9, 29], [2, 26], [1, 26], [1, 27], [1, 28], [1, 29], [2, 29], [3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29], [2, 26]]

###################################################
Pac-Man is in position [2, 26]
Ghost [14, 17] is at crossroad [2, 26] at distance 21 from Pc-Man  at distance 21 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 0
Ghost [3, 26] is at crossroad [4, 23] at distance 1 from Pc-Man at distance -4 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 5
Pac-Man distance to target [9, 29] is: 12
pPac-Man corridor is :corr<[[2, 26], [3, 26], [4, 26], [4, 25], [4, 24], [4, 23]]>
crossroad: [2, 26]
ghost at crossroad is: ghost([14, 17])
Ghost [3, 26] is at distance 1 from Pac-Man and -4 from crossroad [4, 23]
Ghost [4, 26] is at distance 2 from Pac-Man and -3 from crossroad [4, 23]
Ghost [14, 17] is at distance 21 from Pac-Man and 21 from crossroad [2, 26]
Ghost [4, 25] is at distance 3 from Pac-Man and -2 from crossroad [4, 23]
---> before condition: 21, 12
---> verifying if ghost: ghost([14, 17])is in corridor [[2, 26], [1, 26], [1, 27], [1, 28], [1, 29], [2, 29], [3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [1, 26]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 26]]
subcorridor1 is: [[1, 27], [1, 28], [1, 29], [2, 29], [3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29]]
path_coords is: [[9, 29], [8, 29], [9, 29], [1, 26], [1, 27], [1, 28], [1, 29], [2, 29], [3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29], [1, 26]]

###################################################
Pac-Man is in position [1, 26]
Ghost [2, 26] is at crossroad [2, 26] at distance 1 from Pc-Man  at distance 0 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 1

Pac-Man distance to target [9, 29] is: 11
pPac-Man corridor is :corr<[[2, 26], [1, 26], [1, 27], [1, 28], [1, 29], [2, 29], [3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29]]>
crossroad: [8, 29]
ghost at crossroad is: None
Ghost [2, 26] is at distance 1 from Pac-Man and 0 from crossroad [2, 26]
Ghost [3, 26] is at distance 2 from Pac-Man and 1 from crossroad [2, 26]
Ghost [14, 16] is at distance 23 from Pac-Man and 22 from crossroad [2, 26]
Ghost [4, 26] is at distance 3 from Pac-Man and 2 from crossroad [2, 26]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [1, 27]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 26], [1, 26]]
subcorridor1 is: [[1, 28], [1, 29], [2, 29], [3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29]]
path_coords is: [[9, 29], [8, 29], [9, 29], [1, 27], [1, 28], [1, 29], [2, 29], [3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29], [1, 27]]

###################################################
Pac-Man is in position [1, 27]
Ghost [1, 26] is at crossroad [2, 26] at distance 1 from Pc-Man  at distance -1 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 2

Pac-Man distance to target [9, 29] is: 10
pPac-Man corridor is :corr<[[2, 26], [1, 26], [1, 27], [1, 28], [1, 29], [2, 29], [3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29]]>
crossroad: [8, 29]
ghost at crossroad is: None
Ghost [1, 26] is at distance 1 from Pac-Man and -1 from crossroad [2, 26]
Ghost [2, 26] is at distance 2 from Pac-Man and 0 from crossroad [2, 26]
Ghost [14, 15] is at distance 24 from Pac-Man and 22 from crossroad [2, 26]
Ghost [3, 26] is at distance 3 from Pac-Man and 1 from crossroad [2, 26]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [1, 28]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 26], [1, 26], [1, 27]]
subcorridor1 is: [[1, 29], [2, 29], [3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29]]
path_coords is: [[9, 29], [8, 29], [9, 29], [1, 28], [1, 29], [2, 29], [3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29], [1, 28]]

###################################################
Pac-Man is in position [1, 28]
Ghost [1, 27] is at crossroad [2, 26] at distance 1 from Pc-Man  at distance -2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 3

Pac-Man distance to target [9, 29] is: 9
pPac-Man corridor is :corr<[[2, 26], [1, 26], [1, 27], [1, 28], [1, 29], [2, 29], [3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29]]>
crossroad: [8, 29]
ghost at crossroad is: None
Ghost [1, 27] is at distance 1 from Pac-Man and -2 from crossroad [2, 26]
Ghost [2, 25] is at distance 4 from Pac-Man and 1 from crossroad [2, 26]
Ghost [14, 14] is at distance 26 from Pac-Man and 23 from crossroad [2, 26]
Ghost [2, 26] is at distance 3 from Pac-Man and 0 from crossroad [2, 26]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [1, 29]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 26], [1, 26], [1, 27], [1, 28]]
subcorridor1 is: [[2, 29], [3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29]]
path_coords is: [[9, 29], [8, 29], [9, 29], [1, 29], [2, 29], [3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29], [1, 29]]

###################################################
Pac-Man is in position [1, 29]
Ghost [1, 28] is at crossroad [2, 26] at distance 1 from Pc-Man  at distance -3 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 4

Pac-Man distance to target [9, 29] is: 8
pPac-Man corridor is :corr<[[2, 26], [1, 26], [1, 27], [1, 28], [1, 29], [2, 29], [3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29]]>
crossroad: [8, 29]
ghost at crossroad is: None
Ghost [1, 28] is at distance 1 from Pac-Man and -3 from crossroad [2, 26]
Ghost [2, 24] is at distance 6 from Pac-Man and 2 from crossroad [2, 26]
Ghost [14, 13] is at distance 28 from Pac-Man and 24 from crossroad [2, 26]
Ghost [1, 26] is at distance 3 from Pac-Man and -1 from crossroad [2, 26]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [2, 29]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 26], [1, 26], [1, 27], [1, 28], [1, 29]]
subcorridor1 is: [[3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29]]
path_coords is: [[9, 29], [8, 29], [9, 29], [2, 29], [3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29], [2, 29]]

###################################################
Pac-Man is in position [2, 29]
Ghost [1, 29] is at crossroad [2, 26] at distance 1 from Pc-Man  at distance -4 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 5
Ghost [14, 12] is at crossroad [8, 29] at distance 29 from Pc-Man at distance 23 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 6
Pac-Man distance to target [9, 29] is: 7
pPac-Man corridor is :corr<[[2, 26], [1, 26], [1, 27], [1, 28], [1, 29], [2, 29], [3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29]]>
crossroad: [8, 29]
ghost at crossroad is: ghost([14, 12])
Ghost [1, 29] is at distance 1 from Pac-Man and -4 from crossroad [2, 26]
Ghost [2, 23] is at distance 8 from Pac-Man and 3 from crossroad [2, 26]
Ghost [14, 12] is at distance 29 from Pac-Man and 23 from crossroad [8, 29]
Ghost [1, 27] is at distance 3 from Pac-Man and -2 from crossroad [2, 26]
---> before condition: 29, 7
---> verifying if ghost: ghost([14, 12])is in corridor [[2, 29], [3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [3, 29]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 26], [1, 26], [1, 27], [1, 28], [1, 29], [2, 29]]
subcorridor1 is: [[4, 29], [5, 29], [6, 29], [7, 29], [8, 29]]
path_coords is: [[9, 29], [8, 29], [9, 29], [3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29], [3, 29]]

###################################################
Pac-Man is in position [3, 29]
Ghost [2, 29] is at crossroad [2, 26] at distance 1 from Pc-Man  at distance -5 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 6
Ghost [14, 11] is at crossroad [8, 29] at distance 29 from Pc-Man at distance 24 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 5
Pac-Man distance to target [9, 29] is: 6
pPac-Man corridor is :corr<[[2, 26], [1, 26], [1, 27], [1, 28], [1, 29], [2, 29], [3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29]]>
crossroad: [8, 29]
ghost at crossroad is: ghost([14, 11])
Ghost [2, 29] is at distance 1 from Pac-Man and -5 from crossroad [2, 26]
Ghost [1, 23] is at distance 10 from Pac-Man and 4 from crossroad [2, 26]
Ghost [14, 11] is at distance 29 from Pac-Man and 24 from crossroad [8, 29]
Ghost [1, 28] is at distance 3 from Pac-Man and -3 from crossroad [2, 26]
---> before condition: 29, 6
---> verifying if ghost: ghost([14, 11])is in corridor [[3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [4, 29]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 26], [1, 26], [1, 27], [1, 28], [1, 29], [2, 29], [3, 29]]
subcorridor1 is: [[5, 29], [6, 29], [7, 29], [8, 29]]
path_coords is: [[9, 29], [8, 29], [9, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29], [4, 29]]

###################################################
Pac-Man is in position [4, 29]
Ghost [3, 29] is at crossroad [2, 26] at distance 1 from Pc-Man  at distance -6 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 7
Ghost [14, 10] is at crossroad [8, 29] at distance 29 from Pc-Man at distance 25 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 4
Pac-Man distance to target [9, 29] is: 5
pPac-Man corridor is :corr<[[2, 26], [1, 26], [1, 27], [1, 28], [1, 29], [2, 29], [3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29]]>
crossroad: [8, 29]
ghost at crossroad is: ghost([14, 10])
Ghost [3, 29] is at distance 1 from Pac-Man and -6 from crossroad [2, 26]
Ghost [1, 22] is at distance 12 from Pac-Man and 5 from crossroad [2, 26]
Ghost [14, 10] is at distance 29 from Pac-Man and 25 from crossroad [8, 29]
Ghost [1, 29] is at distance 3 from Pac-Man and -4 from crossroad [2, 26]
---> before condition: 29, 5
---> verifying if ghost: ghost([14, 10])is in corridor [[4, 29], [5, 29], [6, 29], [7, 29], [8, 29]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [5, 29]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 26], [1, 26], [1, 27], [1, 28], [1, 29], [2, 29], [3, 29], [4, 29]]
subcorridor1 is: [[6, 29], [7, 29], [8, 29]]
path_coords is: [[9, 29], [8, 29], [9, 29], [5, 29], [6, 29], [7, 29], [8, 29], [5, 29]]

###################################################
Pac-Man is in position [5, 29]
Ghost [4, 29] is at crossroad [2, 26] at distance 1 from Pc-Man  at distance -7 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 8
Ghost [15, 10] is at crossroad [8, 29] at distance 29 from Pc-Man at distance 26 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 3
Pac-Man distance to target [9, 29] is: 4
pPac-Man corridor is :corr<[[2, 26], [1, 26], [1, 27], [1, 28], [1, 29], [2, 29], [3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29]]>
crossroad: [8, 29]
ghost at crossroad is: ghost([15, 10])
Ghost [4, 29] is at distance 1 from Pac-Man and -7 from crossroad [2, 26]
Ghost [1, 21] is at distance 14 from Pac-Man and 6 from crossroad [2, 26]
Ghost [15, 10] is at distance 29 from Pac-Man and 26 from crossroad [8, 29]
Ghost [2, 29] is at distance 3 from Pac-Man and -5 from crossroad [2, 26]
---> before condition: 29, 4
---> verifying if ghost: ghost([15, 10])is in corridor [[5, 29], [6, 29], [7, 29], [8, 29]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [6, 29]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 26], [1, 26], [1, 27], [1, 28], [1, 29], [2, 29], [3, 29], [4, 29], [5, 29]]
subcorridor1 is: [[7, 29], [8, 29]]
path_coords is: [[9, 29], [8, 29], [9, 29], [6, 29], [7, 29], [8, 29], [6, 29]]

###################################################
Pac-Man is in position [6, 29]
Ghost [5, 29] is at crossroad [2, 26] at distance 1 from Pc-Man  at distance -8 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 9
Ghost [16, 10] is at crossroad [8, 29] at distance 29 from Pc-Man at distance 27 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [9, 29] is: 3
pPac-Man corridor is :corr<[[2, 26], [1, 26], [1, 27], [1, 28], [1, 29], [2, 29], [3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29]]>
crossroad: [8, 29]
ghost at crossroad is: ghost([16, 10])
Ghost [5, 29] is at distance 1 from Pac-Man and -8 from crossroad [2, 26]
Ghost [1, 20] is at distance 16 from Pac-Man and 7 from crossroad [2, 26]
Ghost [16, 10] is at distance 29 from Pac-Man and 27 from crossroad [8, 29]
Ghost [3, 29] is at distance 3 from Pac-Man and -6 from crossroad [2, 26]
---> before condition: 29, 3
---> verifying if ghost: ghost([16, 10])is in corridor [[6, 29], [7, 29], [8, 29]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [7, 29]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 26], [1, 26], [1, 27], [1, 28], [1, 29], [2, 29], [3, 29], [4, 29], [5, 29], [6, 29]]
subcorridor1 is: [[8, 29]]
path_coords is: [[9, 29], [8, 29], [9, 29], [7, 29], [8, 29], [7, 29]]

###################################################
Pac-Man is in position [7, 29]
Ghost [6, 29] is at crossroad [2, 26] at distance 1 from Pc-Man  at distance -9 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 10
Ghost [2, 20] is at crossroad [8, 29] at distance 16 from Pc-Man at distance 15 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 1
Pac-Man distance to target [9, 29] is: 2
pPac-Man corridor is :corr<[[2, 26], [1, 26], [1, 27], [1, 28], [1, 29], [2, 29], [3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29]]>
crossroad: [8, 29]
ghost at crossroad is: ghost([2, 20])
Ghost [6, 29] is at distance 1 from Pac-Man and -9 from crossroad [2, 26]
Ghost [2, 20] is at distance 16 from Pac-Man and 15 from crossroad [8, 29]
Ghost [17, 10] is at distance 29 from Pac-Man and 28 from crossroad [8, 29]
Ghost [4, 29] is at distance 3 from Pac-Man and -7 from crossroad [2, 26]
---> before condition: 16, 2
---> verifying if ghost: ghost([2, 20])is in corridor [[7, 29], [8, 29]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [8, 29]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[2, 26], [1, 26], [1, 27], [1, 28], [1, 29], [2, 29], [3, 29], [4, 29], [5, 29], [6, 29], [7, 29]]
subcorridor1 is: []
path_coords is: [[9, 29], [8, 29], [9, 29], [8, 29]]

###################################################
Pac-Man is in position [8, 29]
Ghost [7, 29] is at crossroad [2, 26] at distance 1 from Pc-Man  at distance -10 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 11
Ghost [3, 20] is at crossroad [8, 29] at distance 14 from Pc-Man at distance 14 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 0
Pac-Man distance to target [9, 29] is: 1
pPac-Man corridor is :corr<[[2, 26], [1, 26], [1, 27], [1, 28], [1, 29], [2, 29], [3, 29], [4, 29], [5, 29], [6, 29], [7, 29], [8, 29]]>
crossroad: [8, 29]
ghost at crossroad is: ghost([3, 20])
Ghost [7, 29] is at distance 1 from Pac-Man and -10 from crossroad [2, 26]
Ghost [3, 20] is at distance 14 from Pac-Man and 14 from crossroad [8, 29]
Ghost [17, 9] is at distance 29 from Pac-Man and 29 from crossroad [8, 29]
Ghost [5, 29] is at distance 3 from Pac-Man and -8 from crossroad [2, 26]
---> before condition: 14, 1
---> verifying if ghost: ghost([3, 20])is in corridor [[8, 29], [9, 29]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [9, 29]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[8, 29]]
subcorridor1 is: [[10, 29]]
path_coords is: [[10, 29], [9, 29], [10, 29], [9, 29]]

###################################################
Pac-Man is in position [9, 29]
Ghost [8, 29] is at crossroad [8, 29] at distance 1 from Pc-Man  at distance 0 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 1
Ghost [17, 8] is at crossroad [10, 29] at distance 29 from Pc-Man at distance 28 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 1
Pac-Man distance to target [10, 29] is: 1
pPac-Man corridor is :corr<[[8, 29], [9, 29], [10, 29]]>
crossroad: [10, 29]
ghost at crossroad is: ghost([17, 8])
Ghost [8, 29] is at distance 1 from Pac-Man and 0 from crossroad [8, 29]
Ghost [4, 20] is at distance 14 from Pac-Man and 13 from crossroad [8, 29]
Ghost [17, 8] is at distance 29 from Pac-Man and 28 from crossroad [10, 29]
Ghost [6, 29] is at distance 3 from Pac-Man and 2 from crossroad [8, 29]
---> before condition: 29, 1
---> verifying if ghost: ghost([17, 8])is in corridor [[9, 29], [10, 29]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [10, 29]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[8, 29], [9, 29]]
subcorridor1 is: []
path_coords is: [[10, 28], [10, 28], [10, 29], [10, 29]]

###################################################
Pac-Man is in position [10, 29]
Ghost [9, 29] is at crossroad [8, 29] at distance 1 from Pc-Man  at distance -1 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 2
Ghost [17, 7] is at crossroad [10, 29] at distance 29 from Pc-Man at distance 29 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 0
Pac-Man distance to target [10, 28] is: 1
pPac-Man corridor is :corr<[[8, 29], [9, 29], [10, 29]]>
crossroad: [10, 29]
ghost at crossroad is: ghost([17, 7])
Ghost [9, 29] is at distance 1 from Pac-Man and -1 from crossroad [8, 29]
Ghost [4, 21] is at distance 14 from Pac-Man and 12 from crossroad [8, 29]
Ghost [17, 7] is at distance 29 from Pac-Man and 29 from crossroad [10, 29]
Ghost [7, 29] is at distance 3 from Pac-Man and 1 from crossroad [8, 29]
---> before condition: 29, 1
---> verifying if ghost: ghost([17, 7])is in corridor [[10, 28], [10, 29]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [10, 28]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[12, 23], [12, 24], [12, 25], [12, 26], [11, 26], [10, 26], [10, 27]]
subcorridor1 is: [[10, 29]]
path_coords is: [[10, 27], [10, 27], [10, 28], [10, 28]]

###################################################
Pac-Man is in position [10, 28]
Ghost [16, 7] is at crossroad [12, 23] at distance 29 from Pc-Man  at distance 22 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 7
Ghost [10, 29] is at crossroad [10, 29] at distance 1 from Pc-Man at distance 0 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 1
Pac-Man distance to target [10, 27] is: 1
pPac-Man corridor is :corr<[[12, 23], [12, 24], [12, 25], [12, 26], [11, 26], [10, 26], [10, 27], [10, 28], [10, 29]]>
crossroad: [12, 23]
ghost at crossroad is: ghost([16, 7])
Ghost [10, 29] is at distance 1 from Pac-Man and 0 from crossroad [10, 29]
Ghost [4, 22] is at distance 14 from Pac-Man and 13 from crossroad [10, 29]
Ghost [16, 7] is at distance 29 from Pac-Man and 22 from crossroad [12, 23]
Ghost [8, 29] is at distance 3 from Pac-Man and 2 from crossroad [10, 29]
---> before condition: 29, 1
---> verifying if ghost: ghost([16, 7])is in corridor [[10, 27], [10, 28]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [10, 27]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[12, 23], [12, 24], [12, 25], [12, 26], [11, 26], [10, 26]]
subcorridor1 is: [[10, 28], [10, 29]]
path_coords is: [[10, 26], [10, 26], [10, 27], [10, 27]]

###################################################
Pac-Man is in position [10, 27]
Ghost [4, 23] is at crossroad [12, 23] at distance 14 from Pc-Man  at distance 8 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 6
Ghost [10, 28] is at crossroad [10, 29] at distance 1 from Pc-Man at distance -1 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [10, 26] is: 1
pPac-Man corridor is :corr<[[12, 23], [12, 24], [12, 25], [12, 26], [11, 26], [10, 26], [10, 27], [10, 28], [10, 29]]>
crossroad: [12, 23]
ghost at crossroad is: ghost([4, 23])
Ghost [10, 28] is at distance 1 from Pac-Man and -1 from crossroad [10, 29]
Ghost [4, 23] is at distance 14 from Pac-Man and 8 from crossroad [12, 23]
Ghost [16, 6] is at distance 29 from Pac-Man and 23 from crossroad [12, 23]
Ghost [9, 29] is at distance 3 from Pac-Man and 1 from crossroad [10, 29]
---> before condition: 14, 1
---> verifying if ghost: ghost([4, 23])is in corridor [[10, 26], [10, 27]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [10, 26]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[12, 23], [12, 24], [12, 25], [12, 26], [11, 26]]
subcorridor1 is: [[10, 27], [10, 28], [10, 29]]
path_coords is: [[11, 26], [11, 26], [10, 26], [10, 26]]

###################################################
Pac-Man is in position [10, 26]
Ghost [5, 23] is at crossroad [12, 23] at distance 12 from Pc-Man  at distance 7 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 5
Ghost [10, 27] is at crossroad [10, 29] at distance 1 from Pc-Man at distance -2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 3
Pac-Man distance to target [11, 26] is: 1
pPac-Man corridor is :corr<[[12, 23], [12, 24], [12, 25], [12, 26], [11, 26], [10, 26], [10, 27], [10, 28], [10, 29]]>
crossroad: [12, 23]
ghost at crossroad is: ghost([5, 23])
Ghost [10, 27] is at distance 1 from Pac-Man and -2 from crossroad [10, 29]
Ghost [5, 23] is at distance 12 from Pac-Man and 7 from crossroad [12, 23]
Ghost [16, 5] is at distance 29 from Pac-Man and 24 from crossroad [12, 23]
Ghost [10, 29] is at distance 3 from Pac-Man and 0 from crossroad [10, 29]
---> before condition: 12, 1
---> verifying if ghost: ghost([5, 23])is in corridor [[11, 26], [10, 26]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [11, 26]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[12, 23], [12, 24], [12, 25], [12, 26]]
subcorridor1 is: [[10, 26], [10, 27], [10, 28], [10, 29]]
path_coords is: [[12, 26], [12, 26], [11, 26], [11, 26]]

###################################################
Pac-Man is in position [11, 26]
Ghost [6, 23] is at crossroad [12, 23] at distance 10 from Pc-Man  at distance 6 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 4
Ghost [10, 26] is at crossroad [10, 29] at distance 1 from Pc-Man at distance -3 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 4
Pac-Man distance to target [12, 26] is: 1
pPac-Man corridor is :corr<[[12, 23], [12, 24], [12, 25], [12, 26], [11, 26], [10, 26], [10, 27], [10, 28], [10, 29]]>
crossroad: [12, 23]
ghost at crossroad is: ghost([6, 23])
Ghost [10, 26] is at distance 1 from Pac-Man and -3 from crossroad [10, 29]
Ghost [6, 23] is at distance 10 from Pac-Man and 6 from crossroad [12, 23]
Ghost [16, 4] is at distance 27 from Pac-Man and 23 from crossroad [12, 23]
Ghost [10, 28] is at distance 3 from Pac-Man and -1 from crossroad [10, 29]
---> before condition: 10, 1
---> verifying if ghost: ghost([6, 23])is in corridor [[12, 26], [11, 26]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [12, 26]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[12, 23], [12, 24], [12, 25]]
subcorridor1 is: [[11, 26], [10, 26], [10, 27], [10, 28], [10, 29]]
path_coords is: [[12, 25], [12, 25], [12, 26], [12, 26]]

###################################################
Pac-Man is in position [12, 26]
Ghost [7, 23] is at crossroad [12, 23] at distance 8 from Pc-Man  at distance 5 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 3
Ghost [11, 26] is at crossroad [10, 29] at distance 1 from Pc-Man at distance -4 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 5
Pac-Man distance to target [12, 25] is: 1
pPac-Man corridor is :corr<[[12, 23], [12, 24], [12, 25], [12, 26], [11, 26], [10, 26], [10, 27], [10, 28], [10, 29]]>
crossroad: [12, 23]
ghost at crossroad is: ghost([7, 23])
Ghost [11, 26] is at distance 1 from Pac-Man and -4 from crossroad [10, 29]
Ghost [7, 23] is at distance 8 from Pac-Man and 5 from crossroad [12, 23]
Ghost [17, 4] is at distance 27 from Pac-Man and 24 from crossroad [12, 23]
Ghost [10, 27] is at distance 3 from Pac-Man and -2 from crossroad [10, 29]
---> before condition: 8, 1
---> verifying if ghost: ghost([7, 23])is in corridor [[12, 25], [12, 26]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[7, 23], [8, 23]]
GHOST_INFO: pacman path coordinates are: [[12, 25], [12, 25], [12, 26], [12, 26]]
GHOST_INFO: ghost coordinate of interception is: None
valid: ghost nearby cannot intercept
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [12, 25]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[12, 23], [12, 24]]
subcorridor1 is: [[12, 26], [11, 26], [10, 26], [10, 27], [10, 28], [10, 29]]
path_coords is: [[12, 24], [12, 24], [12, 25], [12, 25]]

###################################################
Pac-Man is in position [12, 25]
Ghost [8, 23] is at crossroad [12, 23] at distance 6 from Pc-Man  at distance 4 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 2
Ghost [12, 26] is at crossroad [10, 29] at distance 1 from Pc-Man at distance -5 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 6
Pac-Man distance to target [12, 24] is: 1
pPac-Man corridor is :corr<[[12, 23], [12, 24], [12, 25], [12, 26], [11, 26], [10, 26], [10, 27], [10, 28], [10, 29]]>
crossroad: [12, 23]
ghost at crossroad is: ghost([8, 23])
Ghost [12, 26] is at distance 1 from Pac-Man and -5 from crossroad [10, 29]
Ghost [8, 23] is at distance 6 from Pac-Man and 4 from crossroad [12, 23]
Ghost [17, 3] is at distance 27 from Pac-Man and 25 from crossroad [12, 23]
Ghost [10, 26] is at distance 3 from Pac-Man and -3 from crossroad [10, 29]
---> before condition: 6, 1
---> verifying if ghost: ghost([8, 23])is in corridor [[12, 24], [12, 25]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[8, 23], [9, 23], [10, 23]]
GHOST_INFO: pacman path coordinates are: [[12, 24], [12, 24], [12, 25], [12, 25]]
GHOST_INFO: ghost coordinate of interception is: None
valid: ghost nearby cannot intercept
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [12, 24]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[12, 23]]
subcorridor1 is: [[12, 25], [12, 26], [11, 26], [10, 26], [10, 27], [10, 28], [10, 29]]
path_coords is: [[12, 23], [12, 23], [12, 24], [12, 24]]

###################################################
Pac-Man is in position [12, 24]
Ghost [9, 23] is at crossroad [12, 23] at distance 4 from Pc-Man  at distance 3 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 1
Ghost [12, 25] is at crossroad [10, 29] at distance 1 from Pc-Man at distance -6 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 7
Pac-Man distance to target [12, 23] is: 1
pPac-Man corridor is :corr<[[12, 23], [12, 24], [12, 25], [12, 26], [11, 26], [10, 26], [10, 27], [10, 28], [10, 29]]>
crossroad: [12, 23]
ghost at crossroad is: ghost([9, 23])
Ghost [12, 25] is at distance 1 from Pac-Man and -6 from crossroad [10, 29]
Ghost [9, 23] is at distance 4 from Pac-Man and 3 from crossroad [12, 23]
Ghost [17, 2] is at distance 27 from Pac-Man and 26 from crossroad [12, 23]
Ghost [11, 26] is at distance 3 from Pac-Man and -4 from crossroad [10, 29]
---> before condition: 4, 1
---> verifying if ghost: ghost([9, 23])is in corridor [[12, 23], [12, 24]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[9, 23], [10, 23]]
GHOST_INFO: pacman path coordinates are: [[12, 23], [12, 23], [12, 24], [12, 24]]
GHOST_INFO: ghost coordinate of interception is: None
valid: ghost nearby cannot intercept
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [12, 23]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: []
subcorridor1 is: [[12, 24], [12, 25], [12, 26], [11, 26], [10, 26], [10, 27], [10, 28], [10, 29]]
path_coords is: [[11, 23], [11, 23], [12, 23], [12, 23]]

###################################################
Pac-Man is in position [12, 23]
Ghost [10, 23] is at crossroad [12, 23] at distance 2 from Pc-Man  at distance 2 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 0
Ghost [12, 24] is at crossroad [10, 29] at distance 1 from Pc-Man at distance -7 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 8
Pac-Man distance to target [11, 23] is: 1
pPac-Man corridor is :corr<[[12, 23], [12, 24], [12, 25], [12, 26], [11, 26], [10, 26], [10, 27], [10, 28], [10, 29]]>
crossroad: [12, 23]
ghost at crossroad is: ghost([10, 23])
Ghost [12, 24] is at distance 1 from Pac-Man and -7 from crossroad [10, 29]
Ghost [10, 23] is at distance 2 from Pac-Man and 2 from crossroad [12, 23]
Ghost [17, 1] is at distance 27 from Pac-Man and 27 from crossroad [12, 23]
Ghost [12, 26] is at distance 3 from Pac-Man and -5 from crossroad [10, 29]
---> before condition: 2, 1
invalid: the ghost is just after the target
GOT INTO: MODE.COUNTER
subcorridor0 is: []
subcorridor1 is: [[12, 24], [12, 25], [12, 26], [11, 26], [10, 26], [10, 27], [10, 28], [10, 29]]
path_coords is: [[17, 22], [14, 20], [15, 20], [16, 20], [17, 20], [17, 21], [17, 22], [14, 20], [14, 21], [14, 22], [14, 23], [12, 23], [13, 23], [14, 23], [12, 23]]

###################################################
Pac-Man is in position [12, 23]
Ghost [10, 23] is at crossroad [12, 23] at distance 2 from Pc-Man  at distance 2 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 0
Ghost [12, 24] is at crossroad [10, 29] at distance 1 from Pc-Man at distance -7 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 8
Pac-Man distance to target [17, 22] is: 10
pPac-Man corridor is :corr<[[12, 23], [12, 24], [12, 25], [12, 26], [11, 26], [10, 26], [10, 27], [10, 28], [10, 29]]>
crossroad: [12, 23]
ghost at crossroad is: ghost([10, 23])
Ghost [12, 24] is at distance 1 from Pac-Man and -7 from crossroad [10, 29]
Ghost [10, 23] is at distance 2 from Pac-Man and 2 from crossroad [12, 23]
Ghost [17, 1] is at distance 27 from Pac-Man and 27 from crossroad [12, 23]
Ghost [12, 26] is at distance 3 from Pac-Man and -5 from crossroad [10, 29]
---> before condition: 2, 10
---> verifying if ghost: ghost([10, 23])is in corridor [[12, 23], [13, 23], [14, 23]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[10, 23], [11, 23], [12, 23]]
GHOST_INFO: pacman path coordinates are: [[17, 22], [14, 20], [15, 20], [16, 20], [17, 20], [17, 21], [17, 22], [14, 20], [14, 21], [14, 22], [14, 23], [12, 23], [13, 23], [14, 23], [12, 23]]
GHOST_INFO: ghost coordinate of interception is: [12, 23]
GHOST_INFO: pac dist to intersept: 0 ghost dist to intercept: 2
valid: ghost nearby cannot intercept
MOVE IS REMAING VALID
 ------------ 

COUNTER MODE IS RETURNING NEXT MOVE: [13, 23]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[12, 23]]
subcorridor1 is: [[14, 23]]
path_coords is: [[14, 23], [13, 23], [14, 23], [13, 23]]

###################################################
Pac-Man is in position [13, 23]
Ghost [12, 23] is at crossroad [12, 23] at distance 1 from Pc-Man  at distance 0 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 1
Ghost [16, 1] is at crossroad [14, 23] at distance 27 from Pc-Man at distance 26 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 1
Pac-Man distance to target [14, 23] is: 1
pPac-Man corridor is :corr<[[12, 23], [13, 23], [14, 23]]>
crossroad: [14, 23]
ghost at crossroad is: ghost([16, 1])
Ghost [12, 23] is at distance 1 from Pac-Man and 0 from crossroad [12, 23]
Ghost [11, 23] is at distance 2 from Pac-Man and 1 from crossroad [12, 23]
Ghost [16, 1] is at distance 27 from Pac-Man and 26 from crossroad [14, 23]
Ghost [12, 25] is at distance 3 from Pac-Man and 2 from crossroad [12, 23]
---> before condition: 27, 1
---> verifying if ghost: ghost([16, 1])is in corridor [[13, 23], [14, 23]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [14, 23]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 20], [14, 21], [14, 22]]
subcorridor1 is: []
path_coords is: [[14, 22], [14, 22], [14, 23], [14, 23]]

###################################################
Pac-Man is in position [14, 23]
Ghost [15, 1] is at crossroad [14, 20] at distance 27 from Pc-Man  at distance 24 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 3
Ghost [13, 23] is at crossroad [14, 23] at distance 1 from Pc-Man at distance 1 of crossroad 
with the semaphore SEMAPHORE.YELLOW
Pac-Man distance to this crossroad1 is 0
Pac-Man distance to target [14, 22] is: 1
pPac-Man corridor is :corr<[[14, 20], [14, 21], [14, 22], [14, 23]]>
crossroad: [14, 20]
ghost at crossroad is: ghost([15, 1])
Ghost [13, 23] is at distance 1 from Pac-Man and 1 from crossroad [14, 23]
Ghost [12, 23] is at distance 2 from Pac-Man and 2 from crossroad [14, 23]
Ghost [15, 1] is at distance 27 from Pac-Man and 24 from crossroad [14, 20]
Ghost [12, 24] is at distance 3 from Pac-Man and 3 from crossroad [14, 23]
---> before condition: 27, 1
---> verifying if ghost: ghost([15, 1])is in corridor [[14, 22], [14, 23]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [14, 22]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 20], [14, 21]]
subcorridor1 is: [[14, 23]]
path_coords is: [[14, 21], [14, 21], [14, 22], [14, 22]]

###################################################
Pac-Man is in position [14, 22]
Ghost [14, 1] is at crossroad [14, 20] at distance 27 from Pc-Man  at distance 25 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 2
Ghost [14, 23] is at crossroad [14, 23] at distance 1 from Pc-Man at distance 0 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 1
Pac-Man distance to target [14, 21] is: 1
pPac-Man corridor is :corr<[[14, 20], [14, 21], [14, 22], [14, 23]]>
crossroad: [14, 20]
ghost at crossroad is: ghost([14, 1])
Ghost [14, 23] is at distance 1 from Pac-Man and 0 from crossroad [14, 23]
Ghost [13, 23] is at distance 2 from Pac-Man and 1 from crossroad [14, 23]
Ghost [14, 1] is at distance 27 from Pac-Man and 25 from crossroad [14, 20]
Ghost [12, 23] is at distance 3 from Pac-Man and 2 from crossroad [14, 23]
---> before condition: 27, 1
---> verifying if ghost: ghost([14, 1])is in corridor [[14, 21], [14, 22]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [14, 21]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 20]]
subcorridor1 is: [[14, 22], [14, 23]]
path_coords is: [[15, 20], [14, 20], [15, 20], [14, 20], [14, 21], [14, 21]]

###################################################
Pac-Man is in position [14, 21]
Ghost [13, 1] is at crossroad [14, 20] at distance 27 from Pc-Man  at distance 26 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 1
Ghost [14, 22] is at crossroad [14, 23] at distance 1 from Pc-Man at distance -1 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [15, 20] is: 2
pPac-Man corridor is :corr<[[14, 20], [14, 21], [14, 22], [14, 23]]>
crossroad: [14, 20]
ghost at crossroad is: ghost([13, 1])
Ghost [14, 22] is at distance 1 from Pac-Man and -1 from crossroad [14, 23]
Ghost [14, 23] is at distance 2 from Pac-Man and 0 from crossroad [14, 23]
Ghost [13, 1] is at distance 27 from Pac-Man and 26 from crossroad [14, 20]
Ghost [13, 23] is at distance 3 from Pac-Man and 1 from crossroad [14, 23]
---> before condition: 27, 2
---> verifying if ghost: ghost([13, 1])is in corridor [[14, 20], [14, 21]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [14, 20]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: []
subcorridor1 is: [[14, 21], [14, 22], [14, 23]]
path_coords is: [[15, 20], [14, 20], [15, 20], [14, 20]]

###################################################
Pac-Man is in position [14, 20]
Ghost [12, 1] is at crossroad [14, 20] at distance 25 from Pc-Man  at distance 25 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 0
Ghost [14, 21] is at crossroad [14, 23] at distance 1 from Pc-Man at distance -2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 3
Pac-Man distance to target [15, 20] is: 1
pPac-Man corridor is :corr<[[14, 20], [14, 21], [14, 22], [14, 23]]>
crossroad: [14, 20]
ghost at crossroad is: ghost([12, 1])
Ghost [14, 21] is at distance 1 from Pac-Man and -2 from crossroad [14, 23]
Ghost [14, 22] is at distance 2 from Pac-Man and -1 from crossroad [14, 23]
Ghost [12, 1] is at distance 25 from Pac-Man and 25 from crossroad [14, 20]
Ghost [14, 23] is at distance 3 from Pac-Man and 0 from crossroad [14, 23]
---> before condition: 25, 1
---> verifying if ghost: ghost([12, 1])is in corridor [[14, 20], [15, 20]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [15, 20]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 20]]
subcorridor1 is: [[16, 20], [17, 20], [17, 21], [17, 22], [17, 23], [16, 23], [16, 24], [16, 25], [16, 26]]
path_coords is: [[16, 20], [15, 20], [16, 20], [15, 20]]

###################################################
Pac-Man is in position [15, 20]
Ghost [14, 20] is at crossroad [14, 20] at distance 1 from Pc-Man  at distance 0 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 1

Pac-Man distance to target [16, 20] is: 1
pPac-Man corridor is :corr<[[14, 20], [15, 20], [16, 20], [17, 20], [17, 21], [17, 22], [17, 23], [16, 23], [16, 24], [16, 25], [16, 26]]>
crossroad: [16, 26]
ghost at crossroad is: None
Ghost [14, 20] is at distance 1 from Pac-Man and 0 from crossroad [14, 20]
Ghost [14, 21] is at distance 2 from Pac-Man and 1 from crossroad [14, 20]
Ghost [11, 1] is at distance 25 from Pac-Man and 24 from crossroad [14, 20]
Ghost [14, 22] is at distance 3 from Pac-Man and 2 from crossroad [14, 20]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [16, 20]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 20], [15, 20]]
subcorridor1 is: [[17, 20], [17, 21], [17, 22], [17, 23], [16, 23], [16, 24], [16, 25], [16, 26]]
path_coords is: [[17, 20], [16, 20], [17, 20], [16, 20]]

###################################################
Pac-Man is in position [16, 20]
Ghost [15, 20] is at crossroad [14, 20] at distance 1 from Pc-Man  at distance -1 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 2

Pac-Man distance to target [17, 20] is: 1
pPac-Man corridor is :corr<[[14, 20], [15, 20], [16, 20], [17, 20], [17, 21], [17, 22], [17, 23], [16, 23], [16, 24], [16, 25], [16, 26]]>
crossroad: [16, 26]
ghost at crossroad is: None
Ghost [15, 20] is at distance 1 from Pac-Man and -1 from crossroad [14, 20]
Ghost [14, 20] is at distance 2 from Pac-Man and 0 from crossroad [14, 20]
Ghost [10, 1] is at distance 25 from Pac-Man and 23 from crossroad [14, 20]
Ghost [14, 21] is at distance 3 from Pac-Man and 1 from crossroad [14, 20]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [17, 20]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 20], [15, 20], [16, 20]]
subcorridor1 is: [[17, 21], [17, 22], [17, 23], [16, 23], [16, 24], [16, 25], [16, 26]]
path_coords is: [[17, 21], [17, 20], [17, 21], [17, 20]]

###################################################
Pac-Man is in position [17, 20]
Ghost [16, 20] is at crossroad [14, 20] at distance 1 from Pc-Man  at distance -2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 3

Pac-Man distance to target [17, 21] is: 1
pPac-Man corridor is :corr<[[14, 20], [15, 20], [16, 20], [17, 20], [17, 21], [17, 22], [17, 23], [16, 23], [16, 24], [16, 25], [16, 26]]>
crossroad: [16, 26]
ghost at crossroad is: None
Ghost [16, 20] is at distance 1 from Pac-Man and -2 from crossroad [14, 20]
Ghost [15, 20] is at distance 2 from Pac-Man and -1 from crossroad [14, 20]
Ghost [10, 2] is at distance 25 from Pac-Man and 22 from crossroad [14, 20]
Ghost [14, 20] is at distance 3 from Pac-Man and 0 from crossroad [14, 20]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [17, 21]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 20], [15, 20], [16, 20], [17, 20]]
subcorridor1 is: [[17, 22], [17, 23], [16, 23], [16, 24], [16, 25], [16, 26]]
path_coords is: [[17, 22], [17, 21], [17, 22], [17, 21]]

###################################################
Pac-Man is in position [17, 21]
Ghost [17, 20] is at crossroad [14, 20] at distance 1 from Pc-Man  at distance -3 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 4

Pac-Man distance to target [17, 22] is: 1
pPac-Man corridor is :corr<[[14, 20], [15, 20], [16, 20], [17, 20], [17, 21], [17, 22], [17, 23], [16, 23], [16, 24], [16, 25], [16, 26]]>
crossroad: [16, 26]
ghost at crossroad is: None
Ghost [17, 20] is at distance 1 from Pac-Man and -3 from crossroad [14, 20]
Ghost [16, 20] is at distance 2 from Pac-Man and -2 from crossroad [14, 20]
Ghost [10, 3] is at distance 25 from Pac-Man and 21 from crossroad [14, 20]
Ghost [15, 20] is at distance 3 from Pac-Man and -1 from crossroad [14, 20]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [17, 22]
GOT INTO: MODE.PURSUIT
subcorridor0 is: [[14, 20], [15, 20], [16, 20], [17, 20], [17, 21]]
subcorridor1 is: [[17, 23], [16, 23], [16, 24], [16, 25], [16, 26]]
path_coords is: [[17, 20], [17, 20], [17, 21], [17, 22], [17, 22]]

###################################################
Pac-Man is in position [17, 22]

Pac-Man distance to target [17, 20] is: 2
pPac-Man corridor is :corr<[[14, 20], [15, 20], [16, 20], [17, 20], [17, 21], [17, 22], [17, 23], [16, 23], [16, 24], [16, 25], [16, 26]]>
crossroad: [14, 20]
ghost at crossroad is: None
valid: no ghost
PURSUIT MODE IS RETURNING NEXT MOVE: [17, 21]
GOT INTO: MODE.PURSUIT
subcorridor0 is: [[14, 20], [15, 20], [16, 20], [17, 20]]
subcorridor1 is: [[17, 22], [17, 23], [16, 23], [16, 24], [16, 25], [16, 26]]
path_coords is: [[17, 20], [17, 20], [17, 21], [17, 21]]

###################################################
Pac-Man is in position [17, 21]

Pac-Man distance to target [17, 20] is: 1
pPac-Man corridor is :corr<[[14, 20], [15, 20], [16, 20], [17, 20], [17, 21], [17, 22], [17, 23], [16, 23], [16, 24], [16, 25], [16, 26]]>
crossroad: [14, 20]
ghost at crossroad is: None
valid: no ghost
PURSUIT MODE IS RETURNING NEXT MOVE: [17, 20]
GOT INTO: MODE.PURSUIT
subcorridor0 is: [[14, 20], [15, 20], [16, 20]]
subcorridor1 is: [[17, 21], [17, 22], [17, 23], [16, 23], [16, 24], [16, 25], [16, 26]]
path_coords is: [[16, 20], [16, 20], [17, 20], [17, 20]]

###################################################
Pac-Man is in position [17, 20]

Pac-Man distance to target [16, 20] is: 1
pPac-Man corridor is :corr<[[14, 20], [15, 20], [16, 20], [17, 20], [17, 21], [17, 22], [17, 23], [16, 23], [16, 24], [16, 25], [16, 26]]>
crossroad: [14, 20]
ghost at crossroad is: None
valid: no ghost
PURSUIT MODE IS RETURNING NEXT MOVE: [16, 20]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 20], [15, 20]]
subcorridor1 is: [[17, 20], [17, 21], [17, 22], [17, 23], [16, 23], [16, 24], [16, 25], [16, 26]]
path_coords is: [[17, 23], [16, 20], [17, 20], [17, 21], [17, 22], [17, 23], [16, 20]]

###################################################
Pac-Man is in position [16, 20]

Pac-Man distance to target [17, 23] is: 4
pPac-Man corridor is :corr<[[14, 20], [15, 20], [16, 20], [17, 20], [17, 21], [17, 22], [17, 23], [16, 23], [16, 24], [16, 25], [16, 26]]>
crossroad: [16, 26]
ghost at crossroad is: None
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [17, 20]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 20], [15, 20], [16, 20]]
subcorridor1 is: [[17, 21], [17, 22], [17, 23], [16, 23], [16, 24], [16, 25], [16, 26]]
path_coords is: [[17, 23], [17, 20], [17, 21], [17, 22], [17, 23], [17, 20]]

###################################################
Pac-Man is in position [17, 20]

Pac-Man distance to target [17, 23] is: 3
pPac-Man corridor is :corr<[[14, 20], [15, 20], [16, 20], [17, 20], [17, 21], [17, 22], [17, 23], [16, 23], [16, 24], [16, 25], [16, 26]]>
crossroad: [16, 26]
ghost at crossroad is: None
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [17, 21]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 20], [15, 20], [16, 20], [17, 20]]
subcorridor1 is: [[17, 22], [17, 23], [16, 23], [16, 24], [16, 25], [16, 26]]
path_coords is: [[17, 23], [17, 21], [17, 22], [17, 23], [17, 21]]

###################################################
Pac-Man is in position [17, 21]

Pac-Man distance to target [17, 23] is: 2
pPac-Man corridor is :corr<[[14, 20], [15, 20], [16, 20], [17, 20], [17, 21], [17, 22], [17, 23], [16, 23], [16, 24], [16, 25], [16, 26]]>
crossroad: [16, 26]
ghost at crossroad is: None
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [17, 22]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 20], [15, 20], [16, 20], [17, 20], [17, 21]]
subcorridor1 is: [[17, 23], [16, 23], [16, 24], [16, 25], [16, 26]]
path_coords is: [[17, 23], [17, 22], [17, 23], [17, 22]]

###################################################
Pac-Man is in position [17, 22]

Pac-Man distance to target [17, 23] is: 1
pPac-Man corridor is :corr<[[14, 20], [15, 20], [16, 20], [17, 20], [17, 21], [17, 22], [17, 23], [16, 23], [16, 24], [16, 25], [16, 26]]>
crossroad: [16, 26]
ghost at crossroad is: None
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [17, 23]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 20], [15, 20], [16, 20], [17, 20], [17, 21], [17, 22]]
subcorridor1 is: [[16, 23], [16, 24], [16, 25], [16, 26]]
path_coords is: [[16, 23], [17, 23], [16, 23], [17, 23]]

###################################################
Pac-Man is in position [17, 23]

Pac-Man distance to target [16, 23] is: 1
pPac-Man corridor is :corr<[[14, 20], [15, 20], [16, 20], [17, 20], [17, 21], [17, 22], [17, 23], [16, 23], [16, 24], [16, 25], [16, 26]]>
crossroad: [16, 26]
ghost at crossroad is: None
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [16, 23]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 20], [15, 20], [16, 20], [17, 20], [17, 21], [17, 22], [17, 23]]
subcorridor1 is: [[16, 24], [16, 25], [16, 26]]
path_coords is: [[16, 24], [16, 23], [16, 24], [16, 23]]

###################################################
Pac-Man is in position [16, 23]

Pac-Man distance to target [16, 24] is: 1
pPac-Man corridor is :corr<[[14, 20], [15, 20], [16, 20], [17, 20], [17, 21], [17, 22], [17, 23], [16, 23], [16, 24], [16, 25], [16, 26]]>
crossroad: [16, 26]
ghost at crossroad is: None
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [16, 24]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 20], [15, 20], [16, 20], [17, 20], [17, 21], [17, 22], [17, 23], [16, 23]]
subcorridor1 is: [[16, 25], [16, 26]]
path_coords is: [[16, 25], [16, 24], [16, 25], [16, 24]]

###################################################
Pac-Man is in position [16, 24]
Ghost [6, 15] is at crossroad [14, 20] at distance 21 from Pc-Man  at distance 13 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 8

Pac-Man distance to target [16, 25] is: 1
pPac-Man corridor is :corr<[[14, 20], [15, 20], [16, 20], [17, 20], [17, 21], [17, 22], [17, 23], [16, 23], [16, 24], [16, 25], [16, 26]]>
crossroad: [16, 26]
ghost at crossroad is: None
Ghost [6, 15] is at distance 21 from Pac-Man and 13 from crossroad [14, 20]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [16, 25]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 20], [15, 20], [16, 20], [17, 20], [17, 21], [17, 22], [17, 23], [16, 23], [16, 24]]
subcorridor1 is: [[16, 26]]
path_coords is: [[16, 26], [16, 25], [16, 26], [16, 25]]

###################################################
Pac-Man is in position [16, 25]
Ghost [6, 14] is at crossroad [14, 20] at distance 23 from Pc-Man  at distance 14 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 9

Pac-Man distance to target [16, 26] is: 1
pPac-Man corridor is :corr<[[14, 20], [15, 20], [16, 20], [17, 20], [17, 21], [17, 22], [17, 23], [16, 23], [16, 24], [16, 25], [16, 26]]>
crossroad: [16, 26]
ghost at crossroad is: None
Ghost [6, 14] is at distance 23 from Pac-Man and 14 from crossroad [14, 20]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [16, 26]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[10, 29], [11, 29], [12, 29], [13, 29], [14, 29], [15, 29], [16, 29], [17, 29], [17, 28], [17, 27], [17, 26]]
subcorridor1 is: []
path_coords is: [[15, 26], [15, 26], [16, 26], [16, 26]]

###################################################
Pac-Man is in position [16, 26]
Ghost [6, 13] is at crossroad [16, 26] at distance 23 from Pc-Man at distance 23 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 0
Pac-Man distance to target [15, 26] is: 1
pPac-Man corridor is :corr<[[10, 29], [11, 29], [12, 29], [13, 29], [14, 29], [15, 29], [16, 29], [17, 29], [17, 28], [17, 27], [17, 26], [16, 26]]>
crossroad: [16, 26]
ghost at crossroad is: ghost([6, 13])
Ghost [6, 13] is at distance 23 from Pac-Man and 23 from crossroad [16, 26]
---> before condition: 23, 1
---> verifying if ghost: ghost([6, 13])is in corridor [[15, 26], [16, 26]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [15, 26]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 23], [14, 24], [14, 25], [14, 26]]
subcorridor1 is: [[16, 26]]
path_coords is: [[14, 26], [14, 26], [15, 26], [15, 26]]

###################################################
Pac-Man is in position [15, 26]
Ghost [6, 12] is at crossroad [14, 23] at distance 23 from Pc-Man  at distance 19 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 4

Pac-Man distance to target [14, 26] is: 1
pPac-Man corridor is :corr<[[14, 23], [14, 24], [14, 25], [14, 26], [15, 26], [16, 26]]>
crossroad: [14, 23]
ghost at crossroad is: ghost([6, 12])
Ghost [6, 12] is at distance 23 from Pac-Man and 19 from crossroad [14, 23]
---> before condition: 23, 1
---> verifying if ghost: ghost([6, 12])is in corridor [[14, 26], [15, 26]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [14, 26]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 23], [14, 24], [14, 25]]
subcorridor1 is: [[15, 26], [16, 26]]
path_coords is: [[14, 25], [14, 25], [14, 26], [14, 26]]

###################################################
Pac-Man is in position [14, 26]
Ghost [6, 11] is at crossroad [14, 23] at distance 23 from Pc-Man  at distance 20 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 3

Pac-Man distance to target [14, 25] is: 1
pPac-Man corridor is :corr<[[14, 23], [14, 24], [14, 25], [14, 26], [15, 26], [16, 26]]>
crossroad: [14, 23]
ghost at crossroad is: ghost([6, 11])
Ghost [6, 11] is at distance 23 from Pac-Man and 20 from crossroad [14, 23]
---> before condition: 23, 1
---> verifying if ghost: ghost([6, 11])is in corridor [[14, 25], [14, 26]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [14, 25]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 23], [14, 24]]
subcorridor1 is: [[14, 26], [15, 26], [16, 26]]
path_coords is: [[14, 24], [14, 24], [14, 25], [14, 25]]

###################################################
Pac-Man is in position [14, 25]
Ghost [6, 10] is at crossroad [14, 23] at distance 23 from Pc-Man  at distance 21 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 2

Pac-Man distance to target [14, 24] is: 1
pPac-Man corridor is :corr<[[14, 23], [14, 24], [14, 25], [14, 26], [15, 26], [16, 26]]>
crossroad: [14, 23]
ghost at crossroad is: ghost([6, 10])
Ghost [6, 10] is at distance 23 from Pac-Man and 21 from crossroad [14, 23]
---> before condition: 23, 1
---> verifying if ghost: ghost([6, 10])is in corridor [[14, 24], [14, 25]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [14, 24]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 23]]
subcorridor1 is: [[14, 25], [14, 26], [15, 26], [16, 26]]
path_coords is: [[11, 23], [11, 23], [12, 23], [12, 23], [13, 23], [14, 23], [14, 23], [14, 24], [14, 24]]

###################################################
Pac-Man is in position [14, 24]
Ghost [7, 10] is at crossroad [14, 23] at distance 23 from Pc-Man  at distance 22 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 1

Pac-Man distance to target [11, 23] is: 4
pPac-Man corridor is :corr<[[14, 23], [14, 24], [14, 25], [14, 26], [15, 26], [16, 26]]>
crossroad: [14, 23]
ghost at crossroad is: ghost([7, 10])
Ghost [7, 10] is at distance 23 from Pac-Man and 22 from crossroad [14, 23]
---> before condition: 23, 4
---> verifying if ghost: ghost([7, 10])is in corridor [[14, 23], [14, 24]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [14, 23]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 20], [14, 21], [14, 22]]
subcorridor1 is: []
path_coords is: [[11, 23], [11, 23], [12, 23], [12, 23], [13, 23], [14, 23], [14, 23]]

###################################################
Pac-Man is in position [14, 23]
Ghost [8, 10] is at crossroad [14, 20] at distance 23 from Pc-Man  at distance 20 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 3

Pac-Man distance to target [11, 23] is: 3
pPac-Man corridor is :corr<[[14, 20], [14, 21], [14, 22], [14, 23]]>
crossroad: [14, 23]
ghost at crossroad is: None
Ghost [8, 10] is at distance 23 from Pac-Man and 20 from crossroad [14, 20]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [13, 23]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[12, 23]]
subcorridor1 is: [[14, 23]]
path_coords is: [[11, 23], [11, 23], [12, 23], [12, 23], [13, 23], [13, 23]]

###################################################
Pac-Man is in position [13, 23]
Ghost [6, 15] is at crossroad [12, 23] at distance 15 from Pc-Man  at distance 14 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 1

Pac-Man distance to target [11, 23] is: 2
pPac-Man corridor is :corr<[[12, 23], [13, 23], [14, 23]]>
crossroad: [12, 23]
ghost at crossroad is: ghost([6, 15])
Ghost [6, 15] is at distance 15 from Pac-Man and 14 from crossroad [12, 23]
Ghost [8, 9] is at distance 23 from Pac-Man and 22 from crossroad [12, 23]
---> before condition: 15, 2
---> verifying if ghost: ghost([6, 15])is in corridor [[12, 23], [13, 23]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [12, 23]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: []
subcorridor1 is: [[13, 23], [14, 23]]
path_coords is: [[11, 23], [11, 23], [12, 23], [12, 23]]

###################################################
Pac-Man is in position [12, 23]
Ghost [6, 14] is at crossroad [12, 23] at distance 15 from Pc-Man  at distance 15 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 0

Pac-Man distance to target [11, 23] is: 1
pPac-Man corridor is :corr<[[12, 23], [13, 23], [14, 23]]>
crossroad: [12, 23]
ghost at crossroad is: ghost([6, 14])
Ghost [6, 14] is at distance 15 from Pac-Man and 15 from crossroad [12, 23]
Ghost [8, 8] is at distance 23 from Pac-Man and 23 from crossroad [12, 23]
---> before condition: 15, 1
---> verifying if ghost: ghost([6, 14])is in corridor [[11, 23], [12, 23]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [11, 23]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[10, 23]]
subcorridor1 is: [[12, 23]]
path_coords is: [[17, 26], [17, 26], [16, 26], [14, 23], [14, 24], [14, 25], [14, 26], [15, 26], [16, 26], [12, 23], [13, 23], [14, 23], [11, 23], [12, 23], [11, 23]]

###################################################
Pac-Man is in position [11, 23]
Ghost [6, 15] is at crossroad [10, 23] at distance 13 from Pc-Man  at distance 12 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 1

Pac-Man distance to target [17, 26] is: 9
pPac-Man corridor is :corr<[[10, 23], [11, 23], [12, 23]]>
crossroad: [12, 23]
ghost at crossroad is: None
Ghost [6, 15] is at distance 13 from Pac-Man and 12 from crossroad [10, 23]
Ghost [8, 7] is at distance 23 from Pac-Man and 22 from crossroad [10, 23]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [12, 23]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: []
subcorridor1 is: [[13, 23], [14, 23]]
path_coords is: [[17, 26], [17, 26], [16, 26], [14, 23], [14, 24], [14, 25], [14, 26], [15, 26], [16, 26], [12, 23], [13, 23], [14, 23], [12, 23]]

###################################################
Pac-Man is in position [12, 23]
Ghost [5, 15] is at crossroad [12, 23] at distance 15 from Pc-Man  at distance 15 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 0

Pac-Man distance to target [17, 26] is: 8
pPac-Man corridor is :corr<[[12, 23], [13, 23], [14, 23]]>
crossroad: [14, 23]
ghost at crossroad is: None
Ghost [5, 15] is at distance 15 from Pac-Man and 15 from crossroad [12, 23]
Ghost [9, 7] is at distance 23 from Pac-Man and 23 from crossroad [12, 23]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [13, 23]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[12, 23]]
subcorridor1 is: [[14, 23]]
path_coords is: [[17, 26], [17, 26], [16, 26], [14, 23], [14, 24], [14, 25], [14, 26], [15, 26], [16, 26], [13, 23], [14, 23], [13, 23]]

###################################################
Pac-Man is in position [13, 23]
Ghost [4, 15] is at crossroad [12, 23] at distance 17 from Pc-Man  at distance 16 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 1
Ghost [10, 7] is at crossroad [14, 23] at distance 21 from Pc-Man at distance 20 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 1
Pac-Man distance to target [17, 26] is: 7
pPac-Man corridor is :corr<[[12, 23], [13, 23], [14, 23]]>
crossroad: [14, 23]
ghost at crossroad is: ghost([10, 7])
Ghost [4, 15] is at distance 17 from Pac-Man and 16 from crossroad [12, 23]
Ghost [10, 7] is at distance 21 from Pac-Man and 20 from crossroad [14, 23]
---> before condition: 21, 7
---> verifying if ghost: ghost([10, 7])is in corridor [[13, 23], [14, 23]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [14, 23]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 20], [14, 21], [14, 22]]
subcorridor1 is: []
path_coords is: [[17, 26], [17, 26], [16, 26], [14, 23], [14, 24], [14, 25], [14, 26], [15, 26], [16, 26], [14, 23]]

###################################################
Pac-Man is in position [14, 23]
Ghost [11, 7] is at crossroad [14, 20] at distance 19 from Pc-Man  at distance 16 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 3
Ghost [4, 16] is at crossroad [14, 23] at distance 17 from Pc-Man at distance 17 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 0
Pac-Man distance to target [17, 26] is: 6
pPac-Man corridor is :corr<[[14, 20], [14, 21], [14, 22], [14, 23]]>
crossroad: [14, 23]
ghost at crossroad is: ghost([4, 16])
Ghost [4, 16] is at distance 17 from Pac-Man and 17 from crossroad [14, 23]
Ghost [11, 7] is at distance 19 from Pac-Man and 16 from crossroad [14, 20]
---> before condition: 17, 6
---> verifying if ghost: ghost([4, 16])is in corridor [[14, 23], [14, 24], [14, 25], [14, 26], [15, 26], [16, 26]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [14, 24]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 23]]
subcorridor1 is: [[14, 25], [14, 26], [15, 26], [16, 26]]
path_coords is: [[17, 26], [17, 26], [16, 26], [14, 24], [14, 25], [14, 26], [15, 26], [16, 26], [14, 24]]

###################################################
Pac-Man is in position [14, 24]
Ghost [4, 17] is at crossroad [14, 23] at distance 17 from Pc-Man  at distance 16 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 1

Pac-Man distance to target [17, 26] is: 5
pPac-Man corridor is :corr<[[14, 23], [14, 24], [14, 25], [14, 26], [15, 26], [16, 26]]>
crossroad: [16, 26]
ghost at crossroad is: None
Ghost [4, 17] is at distance 17 from Pac-Man and 16 from crossroad [14, 23]
Ghost [12, 7] is at distance 19 from Pac-Man and 18 from crossroad [14, 23]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [14, 25]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 23], [14, 24]]
subcorridor1 is: [[14, 26], [15, 26], [16, 26]]
path_coords is: [[17, 26], [17, 26], [16, 26], [14, 25], [14, 26], [15, 26], [16, 26], [14, 25]]

###################################################
Pac-Man is in position [14, 25]
Ghost [4, 18] is at crossroad [14, 23] at distance 17 from Pc-Man  at distance 15 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 2

Pac-Man distance to target [17, 26] is: 4
pPac-Man corridor is :corr<[[14, 23], [14, 24], [14, 25], [14, 26], [15, 26], [16, 26]]>
crossroad: [16, 26]
ghost at crossroad is: None
Ghost [4, 18] is at distance 17 from Pac-Man and 15 from crossroad [14, 23]
Ghost [13, 7] is at distance 19 from Pac-Man and 17 from crossroad [14, 23]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [14, 26]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 23], [14, 24], [14, 25]]
subcorridor1 is: [[15, 26], [16, 26]]
path_coords is: [[17, 26], [17, 26], [16, 26], [14, 26], [15, 26], [16, 26], [14, 26]]

###################################################
Pac-Man is in position [14, 26]
Ghost [4, 19] is at crossroad [14, 23] at distance 17 from Pc-Man  at distance 14 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 3

Pac-Man distance to target [17, 26] is: 3
pPac-Man corridor is :corr<[[14, 23], [14, 24], [14, 25], [14, 26], [15, 26], [16, 26]]>
crossroad: [16, 26]
ghost at crossroad is: None
Ghost [4, 19] is at distance 17 from Pac-Man and 14 from crossroad [14, 23]
Ghost [14, 7] is at distance 19 from Pac-Man and 16 from crossroad [14, 23]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [15, 26]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 23], [14, 24], [14, 25], [14, 26]]
subcorridor1 is: [[16, 26]]
path_coords is: [[17, 26], [17, 26], [16, 26], [15, 26], [16, 26], [15, 26]]

###################################################
Pac-Man is in position [15, 26]
Ghost [4, 20] is at crossroad [14, 23] at distance 17 from Pc-Man  at distance 13 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 4

Pac-Man distance to target [17, 26] is: 2
pPac-Man corridor is :corr<[[14, 23], [14, 24], [14, 25], [14, 26], [15, 26], [16, 26]]>
crossroad: [16, 26]
ghost at crossroad is: None
Ghost [4, 20] is at distance 17 from Pac-Man and 13 from crossroad [14, 23]
Ghost [6, 15] is at distance 20 from Pac-Man and 16 from crossroad [14, 23]
Ghost [14, 8] is at distance 19 from Pac-Man and 15 from crossroad [14, 23]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [16, 26]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[10, 29], [11, 29], [12, 29], [13, 29], [14, 29], [15, 29], [16, 29], [17, 29], [17, 28], [17, 27], [17, 26]]
subcorridor1 is: []
path_coords is: [[17, 26], [17, 26], [16, 26], [16, 26]]

###################################################
Pac-Man is in position [16, 26]
Ghost [4, 21] is at crossroad [16, 26] at distance 17 from Pc-Man at distance 17 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 0
Pac-Man distance to target [17, 26] is: 1
pPac-Man corridor is :corr<[[10, 29], [11, 29], [12, 29], [13, 29], [14, 29], [15, 29], [16, 29], [17, 29], [17, 28], [17, 27], [17, 26], [16, 26]]>
crossroad: [10, 29]
ghost at crossroad is: None
Ghost [4, 21] is at distance 17 from Pac-Man and 17 from crossroad [16, 26]
Ghost [6, 14] is at distance 22 from Pac-Man and 22 from crossroad [16, 26]
Ghost [14, 9] is at distance 19 from Pac-Man and 19 from crossroad [16, 26]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [17, 26]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[10, 29], [11, 29], [12, 29], [13, 29], [14, 29], [15, 29], [16, 29], [17, 29], [17, 28], [17, 27]]
subcorridor1 is: [[16, 26]]
path_coords is: [[17, 27], [17, 27], [17, 26], [17, 26]]

###################################################
Pac-Man is in position [17, 26]
Ghost [4, 22] is at crossroad [16, 26] at distance 17 from Pc-Man at distance 16 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 1
Pac-Man distance to target [17, 27] is: 1
pPac-Man corridor is :corr<[[10, 29], [11, 29], [12, 29], [13, 29], [14, 29], [15, 29], [16, 29], [17, 29], [17, 28], [17, 27], [17, 26], [16, 26]]>
crossroad: [10, 29]
ghost at crossroad is: None
Ghost [4, 22] is at distance 17 from Pac-Man and 16 from crossroad [16, 26]
Ghost [6, 15] is at distance 22 from Pac-Man and 21 from crossroad [16, 26]
Ghost [14, 10] is at distance 19 from Pac-Man and 18 from crossroad [16, 26]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [17, 27]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[10, 29], [11, 29], [12, 29], [13, 29], [14, 29], [15, 29], [16, 29], [17, 29], [17, 28]]
subcorridor1 is: [[17, 26], [16, 26]]
path_coords is: [[17, 28], [17, 28], [17, 27], [17, 27]]

###################################################
Pac-Man is in position [17, 27]
Ghost [4, 23] is at crossroad [16, 26] at distance 17 from Pc-Man at distance 15 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [17, 28] is: 1
pPac-Man corridor is :corr<[[10, 29], [11, 29], [12, 29], [13, 29], [14, 29], [15, 29], [16, 29], [17, 29], [17, 28], [17, 27], [17, 26], [16, 26]]>
crossroad: [10, 29]
ghost at crossroad is: None
Ghost [4, 23] is at distance 17 from Pac-Man and 15 from crossroad [16, 26]
Ghost [14, 10] is at distance 20 from Pac-Man and 18 from crossroad [16, 26]
Ghost [13, 10] is at distance 21 from Pac-Man and 19 from crossroad [16, 26]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [17, 28]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[10, 29], [11, 29], [12, 29], [13, 29], [14, 29], [15, 29], [16, 29], [17, 29]]
subcorridor1 is: [[17, 27], [17, 26], [16, 26]]
path_coords is: [[17, 29], [17, 29], [17, 28], [17, 28]]

###################################################
Pac-Man is in position [17, 28]
Ghost [4, 24] is at crossroad [16, 26] at distance 19 from Pc-Man at distance 16 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 3
Pac-Man distance to target [17, 29] is: 1
pPac-Man corridor is :corr<[[10, 29], [11, 29], [12, 29], [13, 29], [14, 29], [15, 29], [16, 29], [17, 29], [17, 28], [17, 27], [17, 26], [16, 26]]>
crossroad: [10, 29]
ghost at crossroad is: None
Ghost [4, 24] is at distance 19 from Pac-Man and 16 from crossroad [16, 26]
Ghost [6, 15] is at distance 24 from Pac-Man and 21 from crossroad [16, 26]
Ghost [14, 9] is at distance 22 from Pac-Man and 19 from crossroad [16, 26]
Ghost [12, 10] is at distance 23 from Pac-Man and 20 from crossroad [16, 26]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [17, 29]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[10, 29], [11, 29], [12, 29], [13, 29], [14, 29], [15, 29], [16, 29]]
subcorridor1 is: [[17, 28], [17, 27], [17, 26], [16, 26]]
path_coords is: [[16, 29], [16, 29], [17, 29], [17, 29]]

###################################################
Pac-Man is in position [17, 29]
Ghost [4, 25] is at crossroad [16, 26] at distance 21 from Pc-Man at distance 17 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 4
Pac-Man distance to target [16, 29] is: 1
pPac-Man corridor is :corr<[[10, 29], [11, 29], [12, 29], [13, 29], [14, 29], [15, 29], [16, 29], [17, 29], [17, 28], [17, 27], [17, 26], [16, 26]]>
crossroad: [10, 29]
ghost at crossroad is: None
Ghost [4, 25] is at distance 21 from Pac-Man and 17 from crossroad [16, 26]
Ghost [6, 16] is at distance 24 from Pac-Man and 20 from crossroad [16, 26]
Ghost [14, 8] is at distance 24 from Pac-Man and 20 from crossroad [16, 26]
Ghost [11, 10] is at distance 25 from Pac-Man and 21 from crossroad [16, 26]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [16, 29]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[10, 29], [11, 29], [12, 29], [13, 29], [14, 29], [15, 29]]
subcorridor1 is: [[17, 29], [17, 28], [17, 27], [17, 26], [16, 26]]
path_coords is: [[15, 29], [15, 29], [16, 29], [16, 29]]

###################################################
Pac-Man is in position [16, 29]
Ghost [4, 26] is at crossroad [10, 29] at distance 21 from Pc-Man  at distance 15 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 6
Ghost [6, 17] is at crossroad [16, 26] at distance 24 from Pc-Man at distance 19 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 5
Pac-Man distance to target [15, 29] is: 1
pPac-Man corridor is :corr<[[10, 29], [11, 29], [12, 29], [13, 29], [14, 29], [15, 29], [16, 29], [17, 29], [17, 28], [17, 27], [17, 26], [16, 26]]>
crossroad: [10, 29]
ghost at crossroad is: ghost([4, 26])
Ghost [4, 26] is at distance 21 from Pac-Man and 15 from crossroad [10, 29]
Ghost [6, 17] is at distance 24 from Pac-Man and 19 from crossroad [16, 26]
Ghost [14, 7] is at distance 26 from Pac-Man and 21 from crossroad [16, 26]
Ghost [10, 10] is at distance 27 from Pac-Man and 22 from crossroad [16, 26]
---> before condition: 21, 1
---> verifying if ghost: ghost([4, 26])is in corridor [[15, 29], [16, 29]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [15, 29]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[10, 29], [11, 29], [12, 29], [13, 29], [14, 29]]
subcorridor1 is: [[16, 29], [17, 29], [17, 28], [17, 27], [17, 26], [16, 26]]
path_coords is: [[14, 29], [14, 29], [15, 29], [15, 29]]

###################################################
Pac-Man is in position [15, 29]
Ghost [3, 26] is at crossroad [10, 29] at distance 19 from Pc-Man  at distance 14 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 5
Ghost [6, 16] is at crossroad [16, 26] at distance 26 from Pc-Man at distance 20 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 6
Pac-Man distance to target [14, 29] is: 1
pPac-Man corridor is :corr<[[10, 29], [11, 29], [12, 29], [13, 29], [14, 29], [15, 29], [16, 29], [17, 29], [17, 28], [17, 27], [17, 26], [16, 26]]>
crossroad: [10, 29]
ghost at crossroad is: ghost([3, 26])
Ghost [3, 26] is at distance 19 from Pac-Man and 14 from crossroad [10, 29]
Ghost [6, 16] is at distance 26 from Pac-Man and 20 from crossroad [16, 26]
Ghost [13, 7] is at distance 28 from Pac-Man and 22 from crossroad [16, 26]
Ghost [10, 9] is at distance 29 from Pac-Man and 23 from crossroad [16, 26]
---> before condition: 19, 1
---> verifying if ghost: ghost([3, 26])is in corridor [[14, 29], [15, 29]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [14, 29]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[10, 29], [11, 29], [12, 29], [13, 29]]
subcorridor1 is: [[15, 29], [16, 29], [17, 29], [17, 28], [17, 27], [17, 26], [16, 26]]
path_coords is: [[13, 29], [13, 29], [14, 29], [14, 29]]

###################################################
Pac-Man is in position [14, 29]
Ghost [2, 26] is at crossroad [10, 29] at distance 17 from Pc-Man  at distance 13 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 4
Ghost [12, 7] is at crossroad [16, 26] at distance 30 from Pc-Man at distance 23 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 7
Pac-Man distance to target [13, 29] is: 1
pPac-Man corridor is :corr<[[10, 29], [11, 29], [12, 29], [13, 29], [14, 29], [15, 29], [16, 29], [17, 29], [17, 28], [17, 27], [17, 26], [16, 26]]>
crossroad: [10, 29]
ghost at crossroad is: ghost([2, 26])
Ghost [2, 26] is at distance 17 from Pac-Man and 13 from crossroad [10, 29]
Ghost [6, 17] is at distance 24 from Pac-Man and 20 from crossroad [10, 29]
Ghost [12, 7] is at distance 30 from Pac-Man and 23 from crossroad [16, 26]
Ghost [10, 8] is at distance 31 from Pac-Man and 24 from crossroad [16, 26]
---> before condition: 17, 1
---> verifying if ghost: ghost([2, 26])is in corridor [[13, 29], [14, 29]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [13, 29]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[10, 29], [11, 29], [12, 29]]
subcorridor1 is: [[14, 29], [15, 29], [16, 29], [17, 29], [17, 28], [17, 27], [17, 26], [16, 26]]
path_coords is: [[12, 29], [12, 29], [13, 29], [13, 29]]

###################################################
Pac-Man is in position [13, 29]
Ghost [1, 26] is at crossroad [10, 29] at distance 15 from Pc-Man  at distance 12 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 3
Ghost [11, 7] is at crossroad [16, 26] at distance 32 from Pc-Man at distance 24 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 8
Pac-Man distance to target [12, 29] is: 1
pPac-Man corridor is :corr<[[10, 29], [11, 29], [12, 29], [13, 29], [14, 29], [15, 29], [16, 29], [17, 29], [17, 28], [17, 27], [17, 26], [16, 26]]>
crossroad: [10, 29]
ghost at crossroad is: ghost([1, 26])
Ghost [1, 26] is at distance 15 from Pac-Man and 12 from crossroad [10, 29]
Ghost [6, 18] is at distance 22 from Pac-Man and 19 from crossroad [10, 29]
Ghost [11, 7] is at distance 32 from Pac-Man and 24 from crossroad [16, 26]
Ghost [10, 7] is at distance 33 from Pac-Man and 25 from crossroad [16, 26]
---> before condition: 15, 1
---> verifying if ghost: ghost([1, 26])is in corridor [[12, 29], [13, 29]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [12, 29]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[10, 29], [11, 29]]
subcorridor1 is: [[13, 29], [14, 29], [15, 29], [16, 29], [17, 29], [17, 28], [17, 27], [17, 26], [16, 26]]
path_coords is: [[11, 29], [11, 29], [12, 29], [12, 29]]

###################################################
Pac-Man is in position [12, 29]
Ghost [1, 27] is at crossroad [10, 29] at distance 13 from Pc-Man  at distance 11 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 2

Pac-Man distance to target [11, 29] is: 1
pPac-Man corridor is :corr<[[10, 29], [11, 29], [12, 29], [13, 29], [14, 29], [15, 29], [16, 29], [17, 29], [17, 28], [17, 27], [17, 26], [16, 26]]>
crossroad: [10, 29]
ghost at crossroad is: ghost([1, 27])
Ghost [1, 27] is at distance 13 from Pac-Man and 11 from crossroad [10, 29]
Ghost [7, 18] is at distance 22 from Pac-Man and 20 from crossroad [10, 29]
Ghost [10, 7] is at distance 32 from Pac-Man and 30 from crossroad [10, 29]
Ghost [9, 7] is at distance 33 from Pac-Man and 31 from crossroad [10, 29]
---> before condition: 13, 1
---> verifying if ghost: ghost([1, 27])is in corridor [[11, 29], [12, 29]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [11, 29]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[10, 29]]
subcorridor1 is: [[12, 29], [13, 29], [14, 29], [15, 29], [16, 29], [17, 29], [17, 28], [17, 27], [17, 26], [16, 26]]
path_coords is: [[14, 9], [14, 9], [14, 10], [14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20], [14, 20], [14, 21], [14, 22], [14, 23], [12, 23], [13, 23], [14, 23], [12, 23], [12, 24], [12, 25], [12, 26], [11, 26], [10, 26], [10, 27], [10, 28], [10, 29], [10, 29], [11, 29], [11, 29]]

###################################################
Pac-Man is in position [11, 29]
Ghost [1, 28] is at crossroad [10, 29] at distance 11 from Pc-Man  at distance 10 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 1

Pac-Man distance to target [14, 9] is: 25
pPac-Man corridor is :corr<[[10, 29], [11, 29], [12, 29], [13, 29], [14, 29], [15, 29], [16, 29], [17, 29], [17, 28], [17, 27], [17, 26], [16, 26]]>
crossroad: [10, 29]
ghost at crossroad is: ghost([1, 28])
Ghost [1, 28] is at distance 11 from Pac-Man and 10 from crossroad [10, 29]
Ghost [6, 18] is at distance 20 from Pac-Man and 19 from crossroad [10, 29]
Ghost [9, 7] is at distance 32 from Pac-Man and 31 from crossroad [10, 29]
Ghost [8, 7] is at distance 33 from Pac-Man and 32 from crossroad [10, 29]
---> before condition: 11, 25
---> verifying if ghost: ghost([1, 28])is in corridor [[10, 29], [11, 29]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [10, 29]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[8, 29], [9, 29]]
subcorridor1 is: []
path_coords is: [[14, 9], [14, 9], [14, 10], [14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20], [14, 20], [14, 21], [14, 22], [14, 23], [12, 23], [13, 23], [14, 23], [12, 23], [12, 24], [12, 25], [12, 26], [11, 26], [10, 26], [10, 27], [10, 28], [10, 29], [10, 29]]

###################################################
Pac-Man is in position [10, 29]
Ghost [1, 29] is at crossroad [8, 29] at distance 9 from Pc-Man  at distance 7 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 2
Ghost [6, 19] is at crossroad [10, 29] at distance 18 from Pc-Man at distance 18 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 0
Pac-Man distance to target [14, 9] is: 24
pPac-Man corridor is :corr<[[8, 29], [9, 29], [10, 29]]>
crossroad: [10, 29]
ghost at crossroad is: ghost([6, 19])
Ghost [1, 29] is at distance 9 from Pac-Man and 7 from crossroad [8, 29]
Ghost [6, 19] is at distance 18 from Pac-Man and 18 from crossroad [10, 29]
Ghost [8, 7] is at distance 32 from Pac-Man and 30 from crossroad [8, 29]
Ghost [8, 8] is at distance 31 from Pac-Man and 31 from crossroad [10, 29]
---> before condition: 18, 24
---> verifying if ghost: ghost([6, 19])is in corridor [[12, 23], [12, 24], [12, 25], [12, 26], [11, 26], [10, 26], [10, 27], [10, 28], [10, 29]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [10, 28]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[12, 23], [12, 24], [12, 25], [12, 26], [11, 26], [10, 26], [10, 27]]
subcorridor1 is: [[10, 29]]
path_coords is: [[14, 9], [14, 9], [14, 10], [14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20], [14, 20], [14, 21], [14, 22], [14, 23], [12, 23], [13, 23], [14, 23], [12, 23], [12, 24], [12, 25], [12, 26], [11, 26], [10, 26], [10, 27], [10, 28], [10, 28]]

###################################################
Pac-Man is in position [10, 28]
Ghost [6, 20] is at crossroad [12, 23] at distance 16 from Pc-Man  at distance 9 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 7
Ghost [2, 29] is at crossroad [10, 29] at distance 9 from Pc-Man at distance 8 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 1
Pac-Man distance to target [14, 9] is: 23
pPac-Man corridor is :corr<[[12, 23], [12, 24], [12, 25], [12, 26], [11, 26], [10, 26], [10, 27], [10, 28], [10, 29]]>
crossroad: [12, 23]
ghost at crossroad is: ghost([6, 20])
Ghost [2, 29] is at distance 9 from Pac-Man and 8 from crossroad [10, 29]
Ghost [6, 20] is at distance 16 from Pac-Man and 9 from crossroad [12, 23]
Ghost [8, 8] is at distance 30 from Pac-Man and 23 from crossroad [12, 23]
Ghost [8, 9] is at distance 29 from Pac-Man and 22 from crossroad [12, 23]
---> before condition: 16, 23
---> verifying if ghost: ghost([6, 20])is in corridor [[12, 23], [12, 24], [12, 25], [12, 26], [11, 26], [10, 26], [10, 27], [10, 28]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [10, 27]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[12, 23], [12, 24], [12, 25], [12, 26], [11, 26], [10, 26]]
subcorridor1 is: [[10, 28], [10, 29]]
path_coords is: [[14, 9], [14, 9], [14, 10], [14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20], [14, 20], [14, 21], [14, 22], [14, 23], [12, 23], [13, 23], [14, 23], [12, 23], [12, 24], [12, 25], [12, 26], [11, 26], [10, 26], [10, 27], [10, 27]]

###################################################
Pac-Man is in position [10, 27]
Ghost [7, 20] is at crossroad [12, 23] at distance 14 from Pc-Man  at distance 8 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 6
Ghost [3, 29] is at crossroad [10, 29] at distance 9 from Pc-Man at distance 7 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [14, 9] is: 22
pPac-Man corridor is :corr<[[12, 23], [12, 24], [12, 25], [12, 26], [11, 26], [10, 26], [10, 27], [10, 28], [10, 29]]>
crossroad: [12, 23]
ghost at crossroad is: ghost([7, 20])
Ghost [3, 29] is at distance 9 from Pac-Man and 7 from crossroad [10, 29]
Ghost [7, 20] is at distance 14 from Pac-Man and 8 from crossroad [12, 23]
Ghost [8, 9] is at distance 28 from Pac-Man and 22 from crossroad [12, 23]
Ghost [8, 10] is at distance 27 from Pac-Man and 21 from crossroad [12, 23]
---> before condition: 14, 22
---> verifying if ghost: ghost([7, 20])is in corridor [[12, 23], [12, 24], [12, 25], [12, 26], [11, 26], [10, 26], [10, 27]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [10, 26]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[12, 23], [12, 24], [12, 25], [12, 26], [11, 26]]
subcorridor1 is: [[10, 27], [10, 28], [10, 29]]
path_coords is: [[14, 9], [14, 9], [14, 10], [14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20], [14, 20], [14, 21], [14, 22], [14, 23], [12, 23], [13, 23], [14, 23], [12, 23], [12, 24], [12, 25], [12, 26], [11, 26], [10, 26], [10, 26]]

###################################################
Pac-Man is in position [10, 26]
Ghost [6, 20] is at crossroad [12, 23] at distance 14 from Pc-Man  at distance 9 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 5
Ghost [4, 29] is at crossroad [10, 29] at distance 9 from Pc-Man at distance 6 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 3
Pac-Man distance to target [14, 9] is: 21
pPac-Man corridor is :corr<[[12, 23], [12, 24], [12, 25], [12, 26], [11, 26], [10, 26], [10, 27], [10, 28], [10, 29]]>
crossroad: [12, 23]
ghost at crossroad is: ghost([6, 20])
Ghost [4, 29] is at distance 9 from Pac-Man and 6 from crossroad [10, 29]
Ghost [6, 20] is at distance 14 from Pac-Man and 9 from crossroad [12, 23]
Ghost [8, 10] is at distance 26 from Pac-Man and 21 from crossroad [12, 23]
Ghost [7, 10] is at distance 25 from Pac-Man and 20 from crossroad [12, 23]
---> before condition: 14, 21
---> verifying if ghost: ghost([6, 20])is in corridor [[12, 23], [12, 24], [12, 25], [12, 26], [11, 26], [10, 26]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [11, 26]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[12, 23], [12, 24], [12, 25], [12, 26]]
subcorridor1 is: [[10, 26], [10, 27], [10, 28], [10, 29]]
path_coords is: [[14, 9], [14, 9], [14, 10], [14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20], [14, 20], [14, 21], [14, 22], [14, 23], [12, 23], [13, 23], [14, 23], [12, 23], [12, 24], [12, 25], [12, 26], [11, 26], [11, 26]]

###################################################
Pac-Man is in position [11, 26]
Ghost [5, 20] is at crossroad [12, 23] at distance 14 from Pc-Man  at distance 10 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 4
Ghost [5, 29] is at crossroad [10, 29] at distance 9 from Pc-Man at distance 5 of crossroad 
with the semaphore SEMAPHORE.YELLOW
Pac-Man distance to this crossroad1 is 4
Pac-Man distance to target [14, 9] is: 20
pPac-Man corridor is :corr<[[12, 23], [12, 24], [12, 25], [12, 26], [11, 26], [10, 26], [10, 27], [10, 28], [10, 29]]>
crossroad: [12, 23]
ghost at crossroad is: ghost([5, 20])
Ghost [5, 29] is at distance 9 from Pac-Man and 5 from crossroad [10, 29]
Ghost [5, 20] is at distance 14 from Pac-Man and 10 from crossroad [12, 23]
Ghost [7, 10] is at distance 24 from Pac-Man and 20 from crossroad [12, 23]
Ghost [6, 10] is at distance 23 from Pac-Man and 19 from crossroad [12, 23]
---> before condition: 14, 20
---> verifying if ghost: ghost([5, 20])is in corridor [[12, 23], [12, 24], [12, 25], [12, 26], [11, 26]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [12, 26]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[12, 23], [12, 24], [12, 25]]
subcorridor1 is: [[11, 26], [10, 26], [10, 27], [10, 28], [10, 29]]
path_coords is: [[14, 9], [14, 9], [14, 10], [14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20], [14, 20], [14, 21], [14, 22], [14, 23], [12, 23], [13, 23], [14, 23], [12, 23], [12, 24], [12, 25], [12, 26], [12, 26]]

###################################################
Pac-Man is in position [12, 26]
Ghost [4, 20] is at crossroad [12, 23] at distance 14 from Pc-Man  at distance 11 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 3
Ghost [6, 29] is at crossroad [10, 29] at distance 9 from Pc-Man at distance 4 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 5
Pac-Man distance to target [14, 9] is: 19
pPac-Man corridor is :corr<[[12, 23], [12, 24], [12, 25], [12, 26], [11, 26], [10, 26], [10, 27], [10, 28], [10, 29]]>
crossroad: [12, 23]
ghost at crossroad is: ghost([4, 20])
Ghost [6, 29] is at distance 9 from Pac-Man and 4 from crossroad [10, 29]
Ghost [4, 20] is at distance 14 from Pac-Man and 11 from crossroad [12, 23]
Ghost [6, 10] is at distance 22 from Pac-Man and 19 from crossroad [12, 23]
Ghost [6, 11] is at distance 21 from Pac-Man and 18 from crossroad [12, 23]
---> before condition: 14, 19
---> verifying if ghost: ghost([4, 20])is in corridor [[12, 23], [12, 24], [12, 25], [12, 26]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [12, 25]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[12, 23], [12, 24]]
subcorridor1 is: [[12, 26], [11, 26], [10, 26], [10, 27], [10, 28], [10, 29]]
path_coords is: [[14, 9], [14, 9], [14, 10], [14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20], [14, 20], [14, 21], [14, 22], [14, 23], [12, 23], [13, 23], [14, 23], [12, 23], [12, 24], [12, 25], [12, 25]]

###################################################
Pac-Man is in position [12, 25]
Ghost [4, 21] is at crossroad [12, 23] at distance 12 from Pc-Man  at distance 10 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 2
Ghost [7, 29] is at crossroad [10, 29] at distance 9 from Pc-Man at distance 3 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 6
Pac-Man distance to target [14, 9] is: 18
pPac-Man corridor is :corr<[[12, 23], [12, 24], [12, 25], [12, 26], [11, 26], [10, 26], [10, 27], [10, 28], [10, 29]]>
crossroad: [12, 23]
ghost at crossroad is: ghost([4, 21])
Ghost [7, 29] is at distance 9 from Pac-Man and 3 from crossroad [10, 29]
Ghost [4, 21] is at distance 12 from Pac-Man and 10 from crossroad [12, 23]
Ghost [6, 11] is at distance 20 from Pac-Man and 18 from crossroad [12, 23]
Ghost [6, 12] is at distance 19 from Pac-Man and 17 from crossroad [12, 23]
---> before condition: 12, 18
---> verifying if ghost: ghost([4, 21])is in corridor [[12, 23], [12, 24], [12, 25]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [12, 24]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[12, 23]]
subcorridor1 is: [[12, 25], [12, 26], [11, 26], [10, 26], [10, 27], [10, 28], [10, 29]]
path_coords is: [[14, 9], [14, 9], [14, 10], [14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20], [14, 20], [14, 21], [14, 22], [14, 23], [12, 23], [13, 23], [14, 23], [12, 23], [12, 24], [12, 24]]

###################################################
Pac-Man is in position [12, 24]
Ghost [4, 22] is at crossroad [12, 23] at distance 10 from Pc-Man  at distance 9 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 1
Ghost [8, 29] is at crossroad [10, 29] at distance 9 from Pc-Man at distance 2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad1 is 7
Pac-Man distance to target [14, 9] is: 17
pPac-Man corridor is :corr<[[12, 23], [12, 24], [12, 25], [12, 26], [11, 26], [10, 26], [10, 27], [10, 28], [10, 29]]>
crossroad: [12, 23]
ghost at crossroad is: ghost([4, 22])
Ghost [8, 29] is at distance 9 from Pac-Man and 2 from crossroad [10, 29]
Ghost [4, 22] is at distance 10 from Pac-Man and 9 from crossroad [12, 23]
Ghost [6, 12] is at distance 18 from Pac-Man and 17 from crossroad [12, 23]
Ghost [7, 12] is at distance 19 from Pac-Man and 18 from crossroad [12, 23]
---> before condition: 10, 17
---> verifying if ghost: ghost([4, 22])is in corridor [[12, 23], [12, 24]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [12, 23]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: []
subcorridor1 is: [[13, 23], [14, 23]]
path_coords is: [[14, 9], [14, 9], [14, 10], [14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20], [14, 20], [14, 21], [14, 22], [14, 23], [12, 23], [13, 23], [14, 23], [12, 23]]

###################################################
Pac-Man is in position [12, 23]
Ghost [4, 23] is at crossroad [12, 23] at distance 8 from Pc-Man  at distance 8 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 0

Pac-Man distance to target [14, 9] is: 16
pPac-Man corridor is :corr<[[12, 23], [13, 23], [14, 23]]>
crossroad: [14, 23]
ghost at crossroad is: None
Ghost [9, 29] is at distance 9 from Pac-Man and 9 from crossroad [12, 23]
Ghost [4, 23] is at distance 8 from Pac-Man and 8 from crossroad [12, 23]
Ghost [6, 13] is at distance 16 from Pac-Man and 16 from crossroad [12, 23]
Ghost [8, 12] is at distance 19 from Pac-Man and 19 from crossroad [12, 23]
valid: no ghost
EATING MODE IS RETURNING NEXT MOVE: [13, 23]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[12, 23]]
subcorridor1 is: [[14, 23]]
path_coords is: [[14, 9], [14, 9], [14, 10], [14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20], [14, 20], [14, 21], [14, 22], [14, 23], [13, 23], [14, 23], [13, 23]]

###################################################
Pac-Man is in position [13, 23]
Ghost [5, 23] is at crossroad [12, 23] at distance 8 from Pc-Man  at distance 7 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 1
Ghost [9, 12] is at crossroad [14, 23] at distance 17 from Pc-Man at distance 16 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 1
Pac-Man distance to target [14, 9] is: 15
pPac-Man corridor is :corr<[[12, 23], [13, 23], [14, 23]]>
crossroad: [14, 23]
ghost at crossroad is: ghost([9, 12])
Ghost [10, 29] is at distance 9 from Pac-Man and 8 from crossroad [12, 23]
Ghost [5, 23] is at distance 8 from Pac-Man and 7 from crossroad [12, 23]
Ghost [6, 14] is at distance 16 from Pac-Man and 15 from crossroad [12, 23]
Ghost [9, 12] is at distance 17 from Pac-Man and 16 from crossroad [14, 23]
---> before condition: 17, 15
---> verifying if ghost: ghost([9, 12])is in corridor [[13, 23], [14, 23]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [14, 23]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 20], [14, 21], [14, 22]]
subcorridor1 is: []
path_coords is: [[14, 9], [14, 9], [14, 10], [14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20], [14, 20], [14, 21], [14, 22], [14, 23], [14, 23]]

###################################################
Pac-Man is in position [14, 23]
Ghost [10, 12] is at crossroad [14, 20] at distance 15 from Pc-Man  at distance 12 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 3
Ghost [6, 23] is at crossroad [14, 23] at distance 8 from Pc-Man at distance 8 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 0
Pac-Man distance to target [14, 9] is: 14
pPac-Man corridor is :corr<[[14, 20], [14, 21], [14, 22], [14, 23]]>
crossroad: [14, 20]
ghost at crossroad is: ghost([10, 12])
Ghost [11, 29] is at distance 11 from Pac-Man and 11 from crossroad [14, 23]
Ghost [6, 23] is at distance 8 from Pac-Man and 8 from crossroad [14, 23]
Ghost [6, 15] is at distance 16 from Pac-Man and 13 from crossroad [14, 20]
Ghost [10, 12] is at distance 15 from Pac-Man and 12 from crossroad [14, 20]
---> before condition: 15, 14
---> verifying if ghost: ghost([10, 12])is in corridor [[14, 20], [14, 21], [14, 22], [14, 23]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [14, 22]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 20], [14, 21]]
subcorridor1 is: [[14, 23]]
path_coords is: [[14, 9], [14, 9], [14, 10], [14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20], [14, 20], [14, 21], [14, 22], [14, 22]]

###################################################
Pac-Man is in position [14, 22]
Ghost [11, 12] is at crossroad [14, 20] at distance 13 from Pc-Man  at distance 11 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 2
Ghost [7, 23] is at crossroad [14, 23] at distance 8 from Pc-Man at distance 7 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 1
Pac-Man distance to target [14, 9] is: 13
pPac-Man corridor is :corr<[[14, 20], [14, 21], [14, 22], [14, 23]]>
crossroad: [14, 20]
ghost at crossroad is: ghost([11, 12])
Ghost [12, 29] is at distance 13 from Pac-Man and 12 from crossroad [14, 23]
Ghost [7, 23] is at distance 8 from Pac-Man and 7 from crossroad [14, 23]
Ghost [5, 15] is at distance 16 from Pac-Man and 14 from crossroad [14, 20]
Ghost [11, 12] is at distance 13 from Pac-Man and 11 from crossroad [14, 20]
---> before condition: 13, 13
---> verifying if ghost: ghost([11, 12])is in corridor [[14, 20], [14, 21], [14, 22]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [14, 21]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 20]]
subcorridor1 is: [[14, 22], [14, 23]]
path_coords is: [[14, 9], [14, 9], [14, 10], [14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20], [14, 20], [14, 21], [14, 21]]

###################################################
Pac-Man is in position [14, 21]
Ghost [12, 12] is at crossroad [14, 20] at distance 11 from Pc-Man  at distance 10 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad0 is 1
Ghost [8, 23] is at crossroad [14, 23] at distance 8 from Pc-Man at distance 6 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [14, 9] is: 12
pPac-Man corridor is :corr<[[14, 20], [14, 21], [14, 22], [14, 23]]>
crossroad: [14, 20]
ghost at crossroad is: ghost([12, 12])
Ghost [13, 29] is at distance 15 from Pac-Man and 13 from crossroad [14, 23]
Ghost [8, 23] is at distance 8 from Pac-Man and 6 from crossroad [14, 23]
Ghost [4, 15] is at distance 15 from Pac-Man and 14 from crossroad [14, 20]
Ghost [12, 12] is at distance 11 from Pac-Man and 10 from crossroad [14, 20]
---> before condition: 11, 12
---> verifying if ghost: ghost([12, 12])is in corridor [[14, 20], [14, 21]]
---> verify if there is a trap
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [14, 20]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[12, 20], [13, 20]]
subcorridor1 is: []
path_coords is: [[14, 9], [14, 9], [14, 10], [14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20], [14, 20]]

###################################################
Pac-Man is in position [14, 20]
Ghost [9, 23] is at crossroad [14, 20] at distance 8 from Pc-Man at distance 8 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 0
Pac-Man distance to target [14, 9] is: 11
pPac-Man corridor is :corr<[[12, 20], [13, 20], [14, 20]]>
crossroad: [14, 20]
ghost at crossroad is: ghost([9, 23])
Ghost [14, 29] is at distance 15 from Pac-Man and 15 from crossroad [14, 20]
Ghost [9, 23] is at distance 8 from Pac-Man and 8 from crossroad [14, 20]
Ghost [3, 15] is at distance 13 from Pac-Man and 13 from crossroad [14, 20]
Ghost [12, 13] is at distance 9 from Pac-Man and 9 from crossroad [14, 20]
---> before condition: 8, 11
---> verifying if ghost: ghost([9, 23])is in corridor [[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[9, 23], [10, 23]]
GHOST_INFO: pacman path coordinates are: [[14, 9], [14, 9], [14, 10], [14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20], [14, 20]]
GHOST_INFO: ghost coordinate of interception is: None
valid: ghost nearby cannot intercept
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [14, 19]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 15], [14, 16], [14, 17], [14, 18]]
subcorridor1 is: [[14, 20]]
path_coords is: [[14, 9], [14, 9], [14, 10], [14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 19]]

###################################################
Pac-Man is in position [14, 19]
Ghost [12, 14] is at crossroad [14, 15] at distance 7 from Pc-Man  at distance 3 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 4
Ghost [10, 23] is at crossroad [14, 20] at distance 8 from Pc-Man at distance 7 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 1
Pac-Man distance to target [14, 9] is: 10
pPac-Man corridor is :corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>
crossroad: [14, 15]
ghost at crossroad is: ghost([12, 14])
Ghost [15, 29] is at distance 15 from Pac-Man and 14 from crossroad [14, 20]
Ghost [10, 23] is at distance 8 from Pac-Man and 7 from crossroad [14, 20]
Ghost [2, 15] is at distance 11 from Pac-Man and 7 from crossroad [14, 15]
Ghost [12, 14] is at distance 7 from Pac-Man and 3 from crossroad [14, 15]
---> before condition: 7, 10
---> verifying if ghost: ghost([12, 14])is in corridor [[14, 15], [14, 16], [14, 17], [14, 18], [14, 19]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[12, 14], [12, 15]]
GHOST_INFO: pacman path coordinates are: [[14, 9], [14, 9], [14, 10], [14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 19]]
GHOST_INFO: ghost coordinate of interception is: None
valid: ghost nearby cannot intercept
MOVE IS REMAING VALID
 ------------ 

EATING MODE IS RETURNING NEXT MOVE: [14, 18]
GOT INTO: MODE.PURSUIT
GOT INTO: MODE.EATING
subcorridor0 is: [[14, 15], [14, 16], [14, 17]]
subcorridor1 is: [[14, 19], [14, 20]]
path_coords is: [[14, 9], [14, 9], [14, 10], [14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 18]]

###################################################
Pac-Man is in position [14, 18]
Ghost [12, 15] is at crossroad [14, 15] at distance 5 from Pc-Man  at distance 2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 3
Ghost [11, 23] is at crossroad [14, 20] at distance 8 from Pc-Man at distance 6 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [14, 9] is: 9
pPac-Man corridor is :corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>
crossroad: [14, 15]
ghost at crossroad is: ghost([12, 15])
Ghost [16, 29] is at distance 15 from Pac-Man and 13 from crossroad [14, 20]
Ghost [11, 23] is at distance 8 from Pac-Man and 6 from crossroad [14, 20]
Ghost [1, 15] is at distance 9 from Pac-Man and 6 from crossroad [14, 15]
Ghost [12, 15] is at distance 5 from Pac-Man and 2 from crossroad [14, 15]
---> before condition: 5, 9
---> verifying if ghost: ghost([12, 15])is in corridor [[14, 15], [14, 16], [14, 17], [14, 18]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[12, 15], [13, 15], [14, 15]]
GHOST_INFO: pacman path coordinates are: [[14, 9], [14, 9], [14, 10], [14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 18]]
GHOST_INFO: ghost coordinate of interception is: [14, 15]
GHOST_INFO: pac dist to intersept: 3 ghost dist to intercept: 2
invalid: pacman will be intercepted
GOT INTO: MODE.COUNTER
subcorridor0 is: [[14, 15], [14, 16], [14, 17]]
subcorridor1 is: [[14, 19], [14, 20]]
path_coords is: [[16, 6], [16, 6], [16, 7], [17, 7], [17, 8], [17, 9], [17, 10], [16, 10], [15, 10], [14, 10], [14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 18]]

###################################################
Pac-Man is in position [14, 18]
Ghost [12, 15] is at crossroad [14, 15] at distance 5 from Pc-Man  at distance 2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 3
Ghost [11, 23] is at crossroad [14, 20] at distance 8 from Pc-Man at distance 6 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [16, 6] is: 16
pPac-Man corridor is :corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>
crossroad: [14, 15]
ghost at crossroad is: ghost([12, 15])
Ghost [16, 29] is at distance 15 from Pac-Man and 13 from crossroad [14, 20]
Ghost [11, 23] is at distance 8 from Pac-Man and 6 from crossroad [14, 20]
Ghost [1, 15] is at distance 9 from Pac-Man and 6 from crossroad [14, 15]
Ghost [12, 15] is at distance 5 from Pac-Man and 2 from crossroad [14, 15]
---> before condition: 5, 16
---> verifying if ghost: ghost([12, 15])is in corridor [[14, 15], [14, 16], [14, 17], [14, 18]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[12, 15], [13, 15], [14, 15]]
GHOST_INFO: pacman path coordinates are: [[16, 6], [16, 6], [16, 7], [17, 7], [17, 8], [17, 9], [17, 10], [16, 10], [15, 10], [14, 10], [14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 18]]
GHOST_INFO: ghost coordinate of interception is: [14, 15]
GHOST_INFO: pac dist to intersept: 3 ghost dist to intercept: 2
invalid: pacman will be intercepted
GOT INTO: MODE.FLIGHT
ANALYST: best_moves is: 
-> move: [16, 6] at cost 16
-> move: [14, 9] at cost 9
-> move: [15, 10] at cost 9
-> move: [10, 8] at cost 14
-> move: [6, 10] at cost 16
-> move: [5, 10] at cost 17
-> move: [4, 9] at cost 18
-> move: [2, 5] at cost 26
Flight targets: [[16, 6], [14, 9], [15, 10], [10, 8], [6, 10], [5, 10], [4, 9], [2, 5]]
in flight mode, analysing move: [14, 9]
subcorridor0 is: [[14, 15], [14, 16], [14, 17]]
subcorridor1 is: [[14, 19], [14, 20]]
path_coords is: [[14, 9], [14, 7], [14, 8], [14, 9], [12, 7], [13, 7], [14, 7], [10, 7], [11, 7], [12, 7], [10, 7], [10, 8], [10, 9], [10, 10], [11, 10], [12, 10], [12, 10], [13, 10], [14, 10], [14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 18]]

###################################################
Pac-Man is in position [14, 18]
Ghost [12, 15] is at crossroad [14, 15] at distance 5 from Pc-Man  at distance 2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 3
Ghost [11, 23] is at crossroad [14, 20] at distance 8 from Pc-Man at distance 6 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [14, 9] is: 21
pPac-Man corridor is :corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>
crossroad: [14, 15]
ghost at crossroad is: ghost([12, 15])
Ghost [16, 29] is at distance 15 from Pac-Man and 13 from crossroad [14, 20]
Ghost [11, 23] is at distance 8 from Pac-Man and 6 from crossroad [14, 20]
Ghost [1, 15] is at distance 9 from Pac-Man and 6 from crossroad [14, 15]
Ghost [12, 15] is at distance 5 from Pac-Man and 2 from crossroad [14, 15]
---> before condition: 5, 21
---> verifying if ghost: ghost([12, 15])is in corridor [[14, 15], [14, 16], [14, 17], [14, 18]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[12, 15], [13, 15], [14, 15]]
GHOST_INFO: pacman path coordinates are: [[14, 9], [14, 7], [14, 8], [14, 9], [12, 7], [13, 7], [14, 7], [10, 7], [11, 7], [12, 7], [10, 7], [10, 8], [10, 9], [10, 10], [11, 10], [12, 10], [12, 10], [13, 10], [14, 10], [14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 18]]
GHOST_INFO: ghost coordinate of interception is: [14, 15]
GHOST_INFO: pac dist to intersept: 3 ghost dist to intercept: 2
invalid: pacman will be intercepted
in flight mode, analysing move: [14, 9]
subcorridor0 is: [[14, 15], [14, 16], [14, 17]]
subcorridor1 is: [[14, 19], [14, 20]]
path_coords is: [[14, 9], [14, 7], [14, 8], [14, 9], [12, 7], [13, 7], [14, 7], [10, 7], [11, 7], [12, 7], [10, 7], [10, 8], [10, 9], [10, 10], [11, 10], [12, 10], [12, 10], [12, 11], [12, 12], [12, 12], [12, 13], [12, 14], [12, 15], [12, 15], [13, 15], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 18]]

###################################################
Pac-Man is in position [14, 18]
Ghost [12, 15] is at crossroad [14, 15] at distance 5 from Pc-Man  at distance 2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 3
Ghost [11, 23] is at crossroad [14, 20] at distance 8 from Pc-Man at distance 6 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [14, 9] is: 21
pPac-Man corridor is :corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>
crossroad: [14, 15]
ghost at crossroad is: ghost([12, 15])
Ghost [16, 29] is at distance 15 from Pac-Man and 13 from crossroad [14, 20]
Ghost [11, 23] is at distance 8 from Pac-Man and 6 from crossroad [14, 20]
Ghost [1, 15] is at distance 9 from Pac-Man and 6 from crossroad [14, 15]
Ghost [12, 15] is at distance 5 from Pac-Man and 2 from crossroad [14, 15]
---> before condition: 5, 21
---> verifying if ghost: ghost([12, 15])is in corridor [[14, 15], [14, 16], [14, 17], [14, 18]]
---> verify if there is a trap
invalid: ghost pursuing from behind and trap ahead
in flight mode, analysing move: [14, 9]
subcorridor0 is: [[14, 15], [14, 16], [14, 17]]
subcorridor1 is: [[14, 19], [14, 20]]
path_coords is: [[14, 9], [14, 7], [14, 8], [14, 9], [12, 7], [13, 7], [14, 7], [10, 7], [11, 7], [12, 7], [10, 7], [10, 8], [10, 9], [10, 10], [11, 10], [12, 10], [12, 10], [12, 11], [12, 12], [12, 10], [13, 10], [14, 10], [14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 18]]

###################################################
Pac-Man is in position [14, 18]
Ghost [12, 15] is at crossroad [14, 15] at distance 5 from Pc-Man  at distance 2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 3
Ghost [11, 23] is at crossroad [14, 20] at distance 8 from Pc-Man at distance 6 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [14, 9] is: 23
pPac-Man corridor is :corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>
crossroad: [14, 15]
ghost at crossroad is: ghost([12, 15])
Ghost [16, 29] is at distance 15 from Pac-Man and 13 from crossroad [14, 20]
Ghost [11, 23] is at distance 8 from Pac-Man and 6 from crossroad [14, 20]
Ghost [1, 15] is at distance 9 from Pac-Man and 6 from crossroad [14, 15]
Ghost [12, 15] is at distance 5 from Pac-Man and 2 from crossroad [14, 15]
---> before condition: 5, 23
---> verifying if ghost: ghost([12, 15])is in corridor [[14, 15], [14, 16], [14, 17], [14, 18]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[12, 15], [13, 15], [14, 15]]
GHOST_INFO: pacman path coordinates are: [[14, 9], [14, 7], [14, 8], [14, 9], [12, 7], [13, 7], [14, 7], [10, 7], [11, 7], [12, 7], [10, 7], [10, 8], [10, 9], [10, 10], [11, 10], [12, 10], [12, 10], [12, 11], [12, 12], [12, 10], [13, 10], [14, 10], [14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 18]]
GHOST_INFO: ghost coordinate of interception is: [14, 15]
GHOST_INFO: pac dist to intersept: 3 ghost dist to intercept: 2
invalid: pacman will be intercepted
in flight mode, analysing move: [15, 10]
subcorridor0 is: [[14, 15], [14, 16], [14, 17]]
subcorridor1 is: [[14, 19], [14, 20]]
path_coords is: [[15, 10], [16, 4], [16, 5], [16, 6], [16, 7], [17, 7], [17, 8], [17, 9], [17, 10], [16, 10], [15, 10], [14, 7], [14, 6], [14, 5], [14, 4], [15, 4], [16, 4], [14, 7], [14, 8], [14, 9], [14, 10], [14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 18]]

###################################################
Pac-Man is in position [14, 18]
Ghost [12, 15] is at crossroad [14, 15] at distance 5 from Pc-Man  at distance 2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 3
Ghost [11, 23] is at crossroad [14, 20] at distance 8 from Pc-Man at distance 6 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [15, 10] is: 25
pPac-Man corridor is :corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>
crossroad: [14, 15]
ghost at crossroad is: ghost([12, 15])
Ghost [16, 29] is at distance 15 from Pac-Man and 13 from crossroad [14, 20]
Ghost [11, 23] is at distance 8 from Pac-Man and 6 from crossroad [14, 20]
Ghost [1, 15] is at distance 9 from Pac-Man and 6 from crossroad [14, 15]
Ghost [12, 15] is at distance 5 from Pac-Man and 2 from crossroad [14, 15]
---> before condition: 5, 25
---> verifying if ghost: ghost([12, 15])is in corridor [[14, 15], [14, 16], [14, 17], [14, 18]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[12, 15], [13, 15], [14, 15]]
GHOST_INFO: pacman path coordinates are: [[15, 10], [16, 4], [16, 5], [16, 6], [16, 7], [17, 7], [17, 8], [17, 9], [17, 10], [16, 10], [15, 10], [14, 7], [14, 6], [14, 5], [14, 4], [15, 4], [16, 4], [14, 7], [14, 8], [14, 9], [14, 10], [14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 18]]
GHOST_INFO: ghost coordinate of interception is: [14, 15]
GHOST_INFO: pac dist to intersept: 3 ghost dist to intercept: 2
invalid: pacman will be intercepted
in flight mode, analysing move: [15, 10]
subcorridor0 is: [[14, 15], [14, 16], [14, 17]]
subcorridor1 is: [[14, 19], [14, 20]]
path_coords is: [[15, 10], [16, 4], [16, 5], [16, 6], [16, 7], [17, 7], [17, 8], [17, 9], [17, 10], [16, 10], [15, 10], [14, 7], [14, 6], [14, 5], [14, 4], [15, 4], [16, 4], [14, 7], [14, 8], [14, 9], [14, 10], [14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 18], [14, 18], [14, 19], [14, 20], [14, 18]]

###################################################
Pac-Man is in position [14, 18]
Ghost [12, 15] is at crossroad [14, 15] at distance 5 from Pc-Man  at distance 2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 3
Ghost [11, 23] is at crossroad [14, 20] at distance 8 from Pc-Man at distance 6 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [15, 10] is: 27
pPac-Man corridor is :corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>
crossroad: [14, 15]
ghost at crossroad is: ghost([12, 15])
Ghost [16, 29] is at distance 15 from Pac-Man and 13 from crossroad [14, 20]
Ghost [11, 23] is at distance 8 from Pac-Man and 6 from crossroad [14, 20]
Ghost [1, 15] is at distance 9 from Pac-Man and 6 from crossroad [14, 15]
Ghost [12, 15] is at distance 5 from Pac-Man and 2 from crossroad [14, 15]
---> before condition: 5, 27
---> verifying if ghost: ghost([12, 15])is in corridor [[14, 18], [14, 19], [14, 20]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[12, 15], [13, 15], [14, 15]]
GHOST_INFO: pacman path coordinates are: [[15, 10], [16, 4], [16, 5], [16, 6], [16, 7], [17, 7], [17, 8], [17, 9], [17, 10], [16, 10], [15, 10], [14, 7], [14, 6], [14, 5], [14, 4], [15, 4], [16, 4], [14, 7], [14, 8], [14, 9], [14, 10], [14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 18], [14, 18], [14, 19], [14, 20], [14, 18]]
GHOST_INFO: ghost coordinate of interception is: [14, 15]
GHOST_INFO: pac dist to intersept: 5 ghost dist to intercept: 2
invalid: pacman will be intercepted
in flight mode, analysing move: [15, 10]
subcorridor0 is: [[14, 15], [14, 16], [14, 17]]
subcorridor1 is: [[14, 19], [14, 20]]
path_coords is: [[15, 10], [16, 4], [16, 5], [16, 6], [16, 7], [17, 7], [17, 8], [17, 9], [17, 10], [16, 10], [15, 10], [14, 7], [14, 6], [14, 5], [14, 4], [15, 4], [16, 4], [14, 7], [14, 8], [14, 9], [14, 10], [14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [12, 15], [13, 15], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 18]]

###################################################
Pac-Man is in position [14, 18]
Ghost [12, 15] is at crossroad [14, 15] at distance 5 from Pc-Man  at distance 2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 3
Ghost [11, 23] is at crossroad [14, 20] at distance 8 from Pc-Man at distance 6 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [15, 10] is: 27
pPac-Man corridor is :corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>
crossroad: [14, 15]
ghost at crossroad is: ghost([12, 15])
Ghost [16, 29] is at distance 15 from Pac-Man and 13 from crossroad [14, 20]
Ghost [11, 23] is at distance 8 from Pac-Man and 6 from crossroad [14, 20]
Ghost [1, 15] is at distance 9 from Pac-Man and 6 from crossroad [14, 15]
Ghost [12, 15] is at distance 5 from Pac-Man and 2 from crossroad [14, 15]
---> before condition: 5, 27
---> verifying if ghost: ghost([12, 15])is in corridor [[14, 15], [14, 16], [14, 17], [14, 18]]
---> verify if there is a trap
invalid: ghost pursuing from behind and trap ahead
in flight mode, analysing move: [10, 8]
subcorridor0 is: [[14, 15], [14, 16], [14, 17]]
subcorridor1 is: [[14, 19], [14, 20]]
path_coords is: [[10, 8], [10, 7], [10, 8], [10, 7], [11, 7], [12, 7], [12, 7], [13, 7], [14, 7], [14, 7], [14, 8], [14, 9], [14, 10], [14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 18]]

###################################################
Pac-Man is in position [14, 18]
Ghost [12, 15] is at crossroad [14, 15] at distance 5 from Pc-Man  at distance 2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 3
Ghost [11, 23] is at crossroad [14, 20] at distance 8 from Pc-Man at distance 6 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [10, 8] is: 16
pPac-Man corridor is :corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>
crossroad: [14, 15]
ghost at crossroad is: ghost([12, 15])
Ghost [16, 29] is at distance 15 from Pac-Man and 13 from crossroad [14, 20]
Ghost [11, 23] is at distance 8 from Pac-Man and 6 from crossroad [14, 20]
Ghost [1, 15] is at distance 9 from Pac-Man and 6 from crossroad [14, 15]
Ghost [12, 15] is at distance 5 from Pac-Man and 2 from crossroad [14, 15]
---> before condition: 5, 16
---> verifying if ghost: ghost([12, 15])is in corridor [[14, 15], [14, 16], [14, 17], [14, 18]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[12, 15], [13, 15], [14, 15]]
GHOST_INFO: pacman path coordinates are: [[10, 8], [10, 7], [10, 8], [10, 7], [11, 7], [12, 7], [12, 7], [13, 7], [14, 7], [14, 7], [14, 8], [14, 9], [14, 10], [14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 18]]
GHOST_INFO: ghost coordinate of interception is: [14, 15]
GHOST_INFO: pac dist to intersept: 3 ghost dist to intercept: 2
invalid: pacman will be intercepted
in flight mode, analysing move: [10, 8]
subcorridor0 is: [[14, 15], [14, 16], [14, 17]]
subcorridor1 is: [[14, 19], [14, 20]]
path_coords is: [[10, 8], [10, 7], [10, 8], [10, 7], [11, 7], [12, 7], [12, 7], [13, 7], [14, 7], [14, 7], [14, 8], [14, 9], [14, 10], [14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 18], [14, 18], [14, 19], [14, 20], [14, 18]]

###################################################
Pac-Man is in position [14, 18]
Ghost [12, 15] is at crossroad [14, 15] at distance 5 from Pc-Man  at distance 2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 3
Ghost [11, 23] is at crossroad [14, 20] at distance 8 from Pc-Man at distance 6 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [10, 8] is: 18
pPac-Man corridor is :corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>
crossroad: [14, 15]
ghost at crossroad is: ghost([12, 15])
Ghost [16, 29] is at distance 15 from Pac-Man and 13 from crossroad [14, 20]
Ghost [11, 23] is at distance 8 from Pac-Man and 6 from crossroad [14, 20]
Ghost [1, 15] is at distance 9 from Pac-Man and 6 from crossroad [14, 15]
Ghost [12, 15] is at distance 5 from Pac-Man and 2 from crossroad [14, 15]
---> before condition: 5, 18
---> verifying if ghost: ghost([12, 15])is in corridor [[14, 18], [14, 19], [14, 20]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[12, 15], [13, 15], [14, 15]]
GHOST_INFO: pacman path coordinates are: [[10, 8], [10, 7], [10, 8], [10, 7], [11, 7], [12, 7], [12, 7], [13, 7], [14, 7], [14, 7], [14, 8], [14, 9], [14, 10], [14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 18], [14, 18], [14, 19], [14, 20], [14, 18]]
GHOST_INFO: ghost coordinate of interception is: [14, 15]
GHOST_INFO: pac dist to intersept: 5 ghost dist to intercept: 2
invalid: pacman will be intercepted
in flight mode, analysing move: [10, 8]
subcorridor0 is: [[14, 15], [14, 16], [14, 17]]
subcorridor1 is: [[14, 19], [14, 20]]
path_coords is: [[10, 8], [10, 7], [10, 8], [10, 7], [11, 7], [12, 7], [10, 7], [10, 8], [10, 7], [11, 7], [12, 7], [12, 7], [13, 7], [14, 7], [14, 7], [14, 8], [14, 9], [14, 10], [14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 18]]

###################################################
Pac-Man is in position [14, 18]
Ghost [12, 15] is at crossroad [14, 15] at distance 5 from Pc-Man  at distance 2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 3
Ghost [11, 23] is at crossroad [14, 20] at distance 8 from Pc-Man at distance 6 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [10, 8] is: 19
pPac-Man corridor is :corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>
crossroad: [14, 15]
ghost at crossroad is: ghost([12, 15])
Ghost [16, 29] is at distance 15 from Pac-Man and 13 from crossroad [14, 20]
Ghost [11, 23] is at distance 8 from Pac-Man and 6 from crossroad [14, 20]
Ghost [1, 15] is at distance 9 from Pac-Man and 6 from crossroad [14, 15]
Ghost [12, 15] is at distance 5 from Pac-Man and 2 from crossroad [14, 15]
---> before condition: 5, 19
---> verifying if ghost: ghost([12, 15])is in corridor [[14, 15], [14, 16], [14, 17], [14, 18]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[12, 15], [13, 15], [14, 15]]
GHOST_INFO: pacman path coordinates are: [[10, 8], [10, 7], [10, 8], [10, 7], [11, 7], [12, 7], [10, 7], [10, 8], [10, 7], [11, 7], [12, 7], [12, 7], [13, 7], [14, 7], [14, 7], [14, 8], [14, 9], [14, 10], [14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 18]]
GHOST_INFO: ghost coordinate of interception is: [14, 15]
GHOST_INFO: pac dist to intersept: 3 ghost dist to intercept: 2
invalid: pacman will be intercepted
in flight mode, analysing move: [6, 10]
subcorridor0 is: [[14, 15], [14, 16], [14, 17]]
subcorridor1 is: [[14, 19], [14, 20]]
path_coords is: [[6, 10], [4, 10], [5, 10], [6, 10], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 18]]

###################################################
Pac-Man is in position [14, 18]
Ghost [12, 15] is at crossroad [14, 15] at distance 5 from Pc-Man  at distance 2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 3
Ghost [11, 23] is at crossroad [14, 20] at distance 8 from Pc-Man at distance 6 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [6, 10] is: 19
pPac-Man corridor is :corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>
crossroad: [14, 15]
ghost at crossroad is: ghost([12, 15])
Ghost [16, 29] is at distance 15 from Pac-Man and 13 from crossroad [14, 20]
Ghost [11, 23] is at distance 8 from Pac-Man and 6 from crossroad [14, 20]
Ghost [1, 15] is at distance 9 from Pac-Man and 6 from crossroad [14, 15]
Ghost [12, 15] is at distance 5 from Pac-Man and 2 from crossroad [14, 15]
---> before condition: 5, 19
---> verifying if ghost: ghost([12, 15])is in corridor [[14, 15], [14, 16], [14, 17], [14, 18]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[12, 15], [13, 15], [14, 15]]
GHOST_INFO: pacman path coordinates are: [[6, 10], [4, 10], [5, 10], [6, 10], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 18]]
GHOST_INFO: ghost coordinate of interception is: [14, 15]
GHOST_INFO: pac dist to intersept: 3 ghost dist to intercept: 2
invalid: pacman will be intercepted
in flight mode, analysing move: [6, 10]
subcorridor0 is: [[14, 15], [14, 16], [14, 17]]
subcorridor1 is: [[14, 19], [14, 20]]
path_coords is: [[6, 10], [4, 10], [5, 10], [6, 10], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [4, 15], [5, 15], [6, 15], [14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 18]]

###################################################
Pac-Man is in position [14, 18]
Ghost [12, 15] is at crossroad [14, 15] at distance 5 from Pc-Man  at distance 2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 3
Ghost [11, 23] is at crossroad [14, 20] at distance 8 from Pc-Man at distance 6 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [6, 10] is: 21
pPac-Man corridor is :corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>
crossroad: [14, 15]
ghost at crossroad is: ghost([12, 15])
Ghost [16, 29] is at distance 15 from Pac-Man and 13 from crossroad [14, 20]
Ghost [11, 23] is at distance 8 from Pac-Man and 6 from crossroad [14, 20]
Ghost [1, 15] is at distance 9 from Pac-Man and 6 from crossroad [14, 15]
Ghost [12, 15] is at distance 5 from Pac-Man and 2 from crossroad [14, 15]
---> before condition: 5, 21
---> verifying if ghost: ghost([12, 15])is in corridor [[14, 15], [14, 16], [14, 17], [14, 18]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[12, 15], [13, 15], [14, 15]]
GHOST_INFO: pacman path coordinates are: [[6, 10], [4, 10], [5, 10], [6, 10], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [4, 15], [5, 15], [6, 15], [14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 18]]
GHOST_INFO: ghost coordinate of interception is: [14, 15]
GHOST_INFO: pac dist to intersept: 3 ghost dist to intercept: 2
invalid: pacman will be intercepted
in flight mode, analysing move: [6, 10]
subcorridor0 is: [[14, 15], [14, 16], [14, 17]]
subcorridor1 is: [[14, 19], [14, 20]]
path_coords is: [[6, 10], [4, 10], [5, 10], [6, 10], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 18], [14, 18], [14, 19], [14, 20], [14, 18]]

###################################################
Pac-Man is in position [14, 18]
Ghost [12, 15] is at crossroad [14, 15] at distance 5 from Pc-Man  at distance 2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 3
Ghost [11, 23] is at crossroad [14, 20] at distance 8 from Pc-Man at distance 6 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [6, 10] is: 21
pPac-Man corridor is :corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>
crossroad: [14, 15]
ghost at crossroad is: ghost([12, 15])
Ghost [16, 29] is at distance 15 from Pac-Man and 13 from crossroad [14, 20]
Ghost [11, 23] is at distance 8 from Pac-Man and 6 from crossroad [14, 20]
Ghost [1, 15] is at distance 9 from Pac-Man and 6 from crossroad [14, 15]
Ghost [12, 15] is at distance 5 from Pac-Man and 2 from crossroad [14, 15]
---> before condition: 5, 21
---> verifying if ghost: ghost([12, 15])is in corridor [[14, 18], [14, 19], [14, 20]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[12, 15], [13, 15], [14, 15]]
GHOST_INFO: pacman path coordinates are: [[6, 10], [4, 10], [5, 10], [6, 10], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 18], [14, 18], [14, 19], [14, 20], [14, 18]]
GHOST_INFO: ghost coordinate of interception is: [14, 15]
GHOST_INFO: pac dist to intersept: 5 ghost dist to intercept: 2
invalid: pacman will be intercepted
in flight mode, analysing move: [5, 10]
subcorridor0 is: [[14, 15], [14, 16], [14, 17]]
subcorridor1 is: [[14, 19], [14, 20]]
path_coords is: [[5, 10], [4, 10], [5, 10], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 18]]

###################################################
Pac-Man is in position [14, 18]
Ghost [12, 15] is at crossroad [14, 15] at distance 5 from Pc-Man  at distance 2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 3
Ghost [11, 23] is at crossroad [14, 20] at distance 8 from Pc-Man at distance 6 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [5, 10] is: 18
pPac-Man corridor is :corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>
crossroad: [14, 15]
ghost at crossroad is: ghost([12, 15])
Ghost [16, 29] is at distance 15 from Pac-Man and 13 from crossroad [14, 20]
Ghost [11, 23] is at distance 8 from Pac-Man and 6 from crossroad [14, 20]
Ghost [1, 15] is at distance 9 from Pac-Man and 6 from crossroad [14, 15]
Ghost [12, 15] is at distance 5 from Pac-Man and 2 from crossroad [14, 15]
---> before condition: 5, 18
---> verifying if ghost: ghost([12, 15])is in corridor [[14, 15], [14, 16], [14, 17], [14, 18]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[12, 15], [13, 15], [14, 15]]
GHOST_INFO: pacman path coordinates are: [[5, 10], [4, 10], [5, 10], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 18]]
GHOST_INFO: ghost coordinate of interception is: [14, 15]
GHOST_INFO: pac dist to intersept: 3 ghost dist to intercept: 2
invalid: pacman will be intercepted
in flight mode, analysing move: [5, 10]
subcorridor0 is: [[14, 15], [14, 16], [14, 17]]
subcorridor1 is: [[14, 19], [14, 20]]
path_coords is: [[5, 10], [4, 10], [5, 10], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [4, 15], [5, 15], [6, 15], [14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 18]]

###################################################
Pac-Man is in position [14, 18]
Ghost [12, 15] is at crossroad [14, 15] at distance 5 from Pc-Man  at distance 2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 3
Ghost [11, 23] is at crossroad [14, 20] at distance 8 from Pc-Man at distance 6 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [5, 10] is: 20
pPac-Man corridor is :corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>
crossroad: [14, 15]
ghost at crossroad is: ghost([12, 15])
Ghost [16, 29] is at distance 15 from Pac-Man and 13 from crossroad [14, 20]
Ghost [11, 23] is at distance 8 from Pac-Man and 6 from crossroad [14, 20]
Ghost [1, 15] is at distance 9 from Pac-Man and 6 from crossroad [14, 15]
Ghost [12, 15] is at distance 5 from Pac-Man and 2 from crossroad [14, 15]
---> before condition: 5, 20
---> verifying if ghost: ghost([12, 15])is in corridor [[14, 15], [14, 16], [14, 17], [14, 18]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[12, 15], [13, 15], [14, 15]]
GHOST_INFO: pacman path coordinates are: [[5, 10], [4, 10], [5, 10], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [4, 15], [5, 15], [6, 15], [14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 18]]
GHOST_INFO: ghost coordinate of interception is: [14, 15]
GHOST_INFO: pac dist to intersept: 3 ghost dist to intercept: 2
invalid: pacman will be intercepted
in flight mode, analysing move: [5, 10]
subcorridor0 is: [[14, 15], [14, 16], [14, 17]]
subcorridor1 is: [[14, 19], [14, 20]]
path_coords is: [[5, 10], [4, 10], [5, 10], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 18], [14, 18], [14, 19], [14, 20], [14, 18]]

###################################################
Pac-Man is in position [14, 18]
Ghost [12, 15] is at crossroad [14, 15] at distance 5 from Pc-Man  at distance 2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 3
Ghost [11, 23] is at crossroad [14, 20] at distance 8 from Pc-Man at distance 6 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [5, 10] is: 20
pPac-Man corridor is :corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>
crossroad: [14, 15]
ghost at crossroad is: ghost([12, 15])
Ghost [16, 29] is at distance 15 from Pac-Man and 13 from crossroad [14, 20]
Ghost [11, 23] is at distance 8 from Pac-Man and 6 from crossroad [14, 20]
Ghost [1, 15] is at distance 9 from Pac-Man and 6 from crossroad [14, 15]
Ghost [12, 15] is at distance 5 from Pac-Man and 2 from crossroad [14, 15]
---> before condition: 5, 20
---> verifying if ghost: ghost([12, 15])is in corridor [[14, 18], [14, 19], [14, 20]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[12, 15], [13, 15], [14, 15]]
GHOST_INFO: pacman path coordinates are: [[5, 10], [4, 10], [5, 10], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 18], [14, 18], [14, 19], [14, 20], [14, 18]]
GHOST_INFO: ghost coordinate of interception is: [14, 15]
GHOST_INFO: pac dist to intersept: 5 ghost dist to intercept: 2
invalid: pacman will be intercepted
in flight mode, analysing move: [4, 9]
subcorridor0 is: [[14, 15], [14, 16], [14, 17]]
subcorridor1 is: [[14, 19], [14, 20]]
path_coords is: [[4, 9], [4, 7], [4, 8], [4, 9], [4, 7], [5, 7], [6, 7], [6, 7], [7, 7], [8, 7], [8, 7], [9, 7], [10, 7], [10, 7], [11, 7], [12, 7], [12, 7], [13, 7], [14, 7], [14, 7], [14, 8], [14, 9], [14, 10], [14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 18]]

###################################################
Pac-Man is in position [14, 18]
Ghost [12, 15] is at crossroad [14, 15] at distance 5 from Pc-Man  at distance 2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 3
Ghost [11, 23] is at crossroad [14, 20] at distance 8 from Pc-Man at distance 6 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [4, 9] is: 23
pPac-Man corridor is :corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>
crossroad: [14, 15]
ghost at crossroad is: ghost([12, 15])
Ghost [16, 29] is at distance 15 from Pac-Man and 13 from crossroad [14, 20]
Ghost [11, 23] is at distance 8 from Pac-Man and 6 from crossroad [14, 20]
Ghost [1, 15] is at distance 9 from Pac-Man and 6 from crossroad [14, 15]
Ghost [12, 15] is at distance 5 from Pac-Man and 2 from crossroad [14, 15]
---> before condition: 5, 23
---> verifying if ghost: ghost([12, 15])is in corridor [[14, 15], [14, 16], [14, 17], [14, 18]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[12, 15], [13, 15], [14, 15]]
GHOST_INFO: pacman path coordinates are: [[4, 9], [4, 7], [4, 8], [4, 9], [4, 7], [5, 7], [6, 7], [6, 7], [7, 7], [8, 7], [8, 7], [9, 7], [10, 7], [10, 7], [11, 7], [12, 7], [12, 7], [13, 7], [14, 7], [14, 7], [14, 8], [14, 9], [14, 10], [14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 18]]
GHOST_INFO: ghost coordinate of interception is: [14, 15]
GHOST_INFO: pac dist to intersept: 3 ghost dist to intercept: 2
invalid: pacman will be intercepted
in flight mode, analysing move: [4, 9]
subcorridor0 is: [[14, 15], [14, 16], [14, 17]]
subcorridor1 is: [[14, 19], [14, 20]]
path_coords is: [[4, 9], [4, 7], [4, 8], [4, 9], [4, 7], [5, 7], [6, 7], [6, 7], [7, 7], [8, 7], [8, 7], [9, 7], [10, 7], [10, 7], [10, 8], [10, 9], [10, 10], [11, 10], [12, 10], [12, 10], [13, 10], [14, 10], [14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 18]]

###################################################
Pac-Man is in position [14, 18]
Ghost [12, 15] is at crossroad [14, 15] at distance 5 from Pc-Man  at distance 2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 3
Ghost [11, 23] is at crossroad [14, 20] at distance 8 from Pc-Man at distance 6 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [4, 9] is: 23
pPac-Man corridor is :corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>
crossroad: [14, 15]
ghost at crossroad is: ghost([12, 15])
Ghost [16, 29] is at distance 15 from Pac-Man and 13 from crossroad [14, 20]
Ghost [11, 23] is at distance 8 from Pac-Man and 6 from crossroad [14, 20]
Ghost [1, 15] is at distance 9 from Pac-Man and 6 from crossroad [14, 15]
Ghost [12, 15] is at distance 5 from Pac-Man and 2 from crossroad [14, 15]
---> before condition: 5, 23
---> verifying if ghost: ghost([12, 15])is in corridor [[14, 15], [14, 16], [14, 17], [14, 18]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[12, 15], [13, 15], [14, 15]]
GHOST_INFO: pacman path coordinates are: [[4, 9], [4, 7], [4, 8], [4, 9], [4, 7], [5, 7], [6, 7], [6, 7], [7, 7], [8, 7], [8, 7], [9, 7], [10, 7], [10, 7], [10, 8], [10, 9], [10, 10], [11, 10], [12, 10], [12, 10], [13, 10], [14, 10], [14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 18]]
GHOST_INFO: ghost coordinate of interception is: [14, 15]
GHOST_INFO: pac dist to intersept: 3 ghost dist to intercept: 2
invalid: pacman will be intercepted
in flight mode, analysing move: [4, 9]
subcorridor0 is: [[14, 15], [14, 16], [14, 17]]
subcorridor1 is: [[14, 19], [14, 20]]
path_coords is: [[4, 9], [4, 7], [4, 8], [4, 9], [4, 7], [5, 7], [6, 7], [6, 7], [7, 7], [8, 7], [8, 7], [9, 7], [10, 7], [10, 7], [10, 8], [10, 9], [10, 10], [11, 10], [12, 10], [12, 10], [12, 11], [12, 12], [12, 12], [12, 13], [12, 14], [12, 15], [12, 15], [13, 15], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 18]]

###################################################
Pac-Man is in position [14, 18]
Ghost [12, 15] is at crossroad [14, 15] at distance 5 from Pc-Man  at distance 2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 3
Ghost [11, 23] is at crossroad [14, 20] at distance 8 from Pc-Man at distance 6 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [4, 9] is: 23
pPac-Man corridor is :corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>
crossroad: [14, 15]
ghost at crossroad is: ghost([12, 15])
Ghost [16, 29] is at distance 15 from Pac-Man and 13 from crossroad [14, 20]
Ghost [11, 23] is at distance 8 from Pac-Man and 6 from crossroad [14, 20]
Ghost [1, 15] is at distance 9 from Pac-Man and 6 from crossroad [14, 15]
Ghost [12, 15] is at distance 5 from Pac-Man and 2 from crossroad [14, 15]
---> before condition: 5, 23
---> verifying if ghost: ghost([12, 15])is in corridor [[14, 15], [14, 16], [14, 17], [14, 18]]
---> verify if there is a trap
invalid: ghost pursuing from behind and trap ahead
in flight mode, analysing move: [2, 5]
subcorridor0 is: [[14, 15], [14, 16], [14, 17]]
subcorridor1 is: [[14, 19], [14, 20]]
path_coords is: [[2, 5], [2, 4], [2, 5], [2, 4], [3, 4], [4, 4], [4, 5], [4, 6], [4, 7], [4, 7], [4, 8], [4, 9], [4, 10], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 18]]

###################################################
Pac-Man is in position [14, 18]
Ghost [12, 15] is at crossroad [14, 15] at distance 5 from Pc-Man  at distance 2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 3
Ghost [11, 23] is at crossroad [14, 20] at distance 8 from Pc-Man at distance 6 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [2, 5] is: 26
pPac-Man corridor is :corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>
crossroad: [14, 15]
ghost at crossroad is: ghost([12, 15])
Ghost [16, 29] is at distance 15 from Pac-Man and 13 from crossroad [14, 20]
Ghost [11, 23] is at distance 8 from Pac-Man and 6 from crossroad [14, 20]
Ghost [1, 15] is at distance 9 from Pac-Man and 6 from crossroad [14, 15]
Ghost [12, 15] is at distance 5 from Pac-Man and 2 from crossroad [14, 15]
---> before condition: 5, 26
---> verifying if ghost: ghost([12, 15])is in corridor [[14, 15], [14, 16], [14, 17], [14, 18]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[12, 15], [13, 15], [14, 15]]
GHOST_INFO: pacman path coordinates are: [[2, 5], [2, 4], [2, 5], [2, 4], [3, 4], [4, 4], [4, 5], [4, 6], [4, 7], [4, 7], [4, 8], [4, 9], [4, 10], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 18]]
GHOST_INFO: ghost coordinate of interception is: [14, 15]
GHOST_INFO: pac dist to intersept: 3 ghost dist to intercept: 2
invalid: pacman will be intercepted
in flight mode, analysing move: [2, 5]
subcorridor0 is: [[14, 15], [14, 16], [14, 17]]
subcorridor1 is: [[14, 19], [14, 20]]
path_coords is: [[2, 5], [2, 4], [2, 5], [2, 4], [3, 4], [4, 4], [4, 5], [4, 6], [4, 7], [4, 7], [4, 8], [4, 9], [4, 10], [4, 10], [5, 10], [6, 10], [6, 10], [6, 11], [6, 12], [6, 12], [7, 12], [8, 12], [9, 12], [10, 12], [11, 12], [12, 12], [12, 12], [12, 13], [12, 14], [12, 15], [12, 15], [13, 15], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 18]]

###################################################
Pac-Man is in position [14, 18]
Ghost [12, 15] is at crossroad [14, 15] at distance 5 from Pc-Man  at distance 2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 3
Ghost [11, 23] is at crossroad [14, 20] at distance 8 from Pc-Man at distance 6 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [2, 5] is: 27
pPac-Man corridor is :corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>
crossroad: [14, 15]
ghost at crossroad is: ghost([12, 15])
Ghost [16, 29] is at distance 15 from Pac-Man and 13 from crossroad [14, 20]
Ghost [11, 23] is at distance 8 from Pac-Man and 6 from crossroad [14, 20]
Ghost [1, 15] is at distance 9 from Pac-Man and 6 from crossroad [14, 15]
Ghost [12, 15] is at distance 5 from Pac-Man and 2 from crossroad [14, 15]
---> before condition: 5, 27
---> verifying if ghost: ghost([12, 15])is in corridor [[14, 15], [14, 16], [14, 17], [14, 18]]
---> verify if there is a trap
invalid: ghost pursuing from behind and trap ahead
in flight mode, analysing move: [2, 5]
subcorridor0 is: [[14, 15], [14, 16], [14, 17]]
subcorridor1 is: [[14, 19], [14, 20]]
path_coords is: [[2, 5], [2, 4], [2, 5], [2, 4], [3, 4], [4, 4], [4, 5], [4, 6], [4, 7], [4, 7], [5, 7], [6, 7], [6, 7], [7, 7], [8, 7], [8, 7], [9, 7], [10, 7], [10, 7], [11, 7], [12, 7], [12, 7], [13, 7], [14, 7], [14, 7], [14, 8], [14, 9], [14, 10], [14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 18]]

###################################################
Pac-Man is in position [14, 18]
Ghost [12, 15] is at crossroad [14, 15] at distance 5 from Pc-Man  at distance 2 of crossroad 
with the semaphore SEMAPHORE.RED
Pac-Man distance to this crossroad0 is 3
Ghost [11, 23] is at crossroad [14, 20] at distance 8 from Pc-Man at distance 6 of crossroad 
with the semaphore SEMAPHORE.GREEN
Pac-Man distance to this crossroad1 is 2
Pac-Man distance to target [2, 5] is: 27
pPac-Man corridor is :corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>
crossroad: [14, 15]
ghost at crossroad is: ghost([12, 15])
Ghost [16, 29] is at distance 15 from Pac-Man and 13 from crossroad [14, 20]
Ghost [11, 23] is at distance 8 from Pac-Man and 6 from crossroad [14, 20]
Ghost [1, 15] is at distance 9 from Pac-Man and 6 from crossroad [14, 15]
Ghost [12, 15] is at distance 5 from Pac-Man and 2 from crossroad [14, 15]
---> before condition: 5, 27
---> verifying if ghost: ghost([12, 15])is in corridor [[14, 15], [14, 16], [14, 17], [14, 18]]
---> verify if there is a trap
GHOST_INFO: ghost path of interception is: [[12, 15], [13, 15], [14, 15]]
GHOST_INFO: pacman path coordinates are: [[2, 5], [2, 4], [2, 5], [2, 4], [3, 4], [4, 4], [4, 5], [4, 6], [4, 7], [4, 7], [5, 7], [6, 7], [6, 7], [7, 7], [8, 7], [8, 7], [9, 7], [10, 7], [10, 7], [11, 7], [12, 7], [12, 7], [13, 7], [14, 7], [14, 7], [14, 8], [14, 9], [14, 10], [14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [14, 15], [14, 16], [14, 17], [14, 18], [14, 18]]
GHOST_INFO: ghost coordinate of interception is: [14, 15]
GHOST_INFO: pac dist to intersept: 3 ghost dist to intercept: 2
invalid: pacman will be intercepted
GOT INTO: MODE.PANIC
PANICKING INIT:
---> pac_adj0: [corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>, corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>, corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>, corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>, corr<[[14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15]]>, corr<[[14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15]]>, corr<[[14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15]]>, corr<[[14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15]]>, corr<[[12, 15], [13, 15], [14, 15]]>, corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>, corr<[[14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15]]>, corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>, corr<[[14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15]]>, corr<[[12, 15], [13, 15], [14, 15]]>, corr<[[14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15]]>, corr<[[12, 15], [13, 15], [14, 15]]>, corr<[[14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15]]>, corr<[[12, 15], [13, 15], [14, 15]]>, corr<[[12, 15], [13, 15], [14, 15]]>, corr<[[14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15]]>, corr<[[14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15]]>, corr<[[14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15]]>, corr<[[14, 15], [15, 15], [16, 15], [17, 15], [18, 15], [0, 15], [1, 15], [2, 15], [3, 15], [4, 15]]>]
---> pac_safe_corr0: [corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>, corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>, corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>, corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>, corr<[[14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15]]>, corr<[[14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15]]>, corr<[[14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15]]>, corr<[[14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15]]>, corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>, corr<[[14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15]]>, corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>, corr<[[14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15]]>]
---> escape_corridors0: [corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>, corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>, corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>, corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>, corr<[[14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15]]>, corr<[[14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15]]>, corr<[[14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15]]>, corr<[[14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15]]>, corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>, corr<[[14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15]]>, corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>, corr<[[14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15]]>]
---> pac_adj1: [corr<[[14, 20], [15, 20], [16, 20], [17, 20], [17, 21], [17, 22], [17, 23], [16, 23], [16, 24], [16, 25], [16, 26]]>, corr<[[14, 20], [15, 20], [16, 20], [17, 20], [17, 21], [17, 22], [17, 23], [16, 23], [16, 24], [16, 25], [16, 26]]>, corr<[[14, 20], [15, 20], [16, 20], [17, 20], [17, 21], [17, 22], [17, 23], [16, 23], [16, 24], [16, 25], [16, 26]]>, corr<[[14, 20], [15, 20], [16, 20], [17, 20], [17, 21], [17, 22], [17, 23], [16, 23], [16, 24], [16, 25], [16, 26]]>, corr<[[14, 20], [14, 21], [14, 22], [14, 23]]>, corr<[[14, 20], [14, 21], [14, 22], [14, 23]]>, corr<[[14, 20], [14, 21], [14, 22], [14, 23]]>, corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>, corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>, corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>, corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>, corr<[[14, 20], [15, 20], [16, 20], [17, 20], [17, 21], [17, 22], [17, 23], [16, 23], [16, 24], [16, 25], [16, 26]]>, corr<[[14, 20], [14, 21], [14, 22], [14, 23]]>, corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>, corr<[[12, 20], [13, 20], [14, 20]]>, corr<[[14, 20], [14, 21], [14, 22], [14, 23]]>, corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>, corr<[[12, 20], [13, 20], [14, 20]]>, corr<[[12, 20], [13, 20], [14, 20]]>, corr<[[12, 20], [13, 20], [14, 20]]>, corr<[[12, 20], [13, 20], [14, 20]]>]
---> pac_safe_corr1: [corr<[[14, 20], [15, 20], [16, 20], [17, 20], [17, 21], [17, 22], [17, 23], [16, 23], [16, 24], [16, 25], [16, 26]]>, corr<[[14, 20], [15, 20], [16, 20], [17, 20], [17, 21], [17, 22], [17, 23], [16, 23], [16, 24], [16, 25], [16, 26]]>, corr<[[14, 20], [15, 20], [16, 20], [17, 20], [17, 21], [17, 22], [17, 23], [16, 23], [16, 24], [16, 25], [16, 26]]>, corr<[[14, 20], [15, 20], [16, 20], [17, 20], [17, 21], [17, 22], [17, 23], [16, 23], [16, 24], [16, 25], [16, 26]]>, corr<[[14, 20], [14, 21], [14, 22], [14, 23]]>, corr<[[14, 20], [14, 21], [14, 22], [14, 23]]>, corr<[[14, 20], [14, 21], [14, 22], [14, 23]]>, corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>, corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>, corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>, corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>, corr<[[14, 20], [15, 20], [16, 20], [17, 20], [17, 21], [17, 22], [17, 23], [16, 23], [16, 24], [16, 25], [16, 26]]>, corr<[[14, 20], [14, 21], [14, 22], [14, 23]]>, corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>, corr<[[14, 20], [14, 21], [14, 22], [14, 23]]>, corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>]
---> escape_corridors1: [corr<[[14, 20], [15, 20], [16, 20], [17, 20], [17, 21], [17, 22], [17, 23], [16, 23], [16, 24], [16, 25], [16, 26]]>, corr<[[14, 20], [15, 20], [16, 20], [17, 20], [17, 21], [17, 22], [17, 23], [16, 23], [16, 24], [16, 25], [16, 26]]>, corr<[[14, 20], [15, 20], [16, 20], [17, 20], [17, 21], [17, 22], [17, 23], [16, 23], [16, 24], [16, 25], [16, 26]]>, corr<[[14, 20], [15, 20], [16, 20], [17, 20], [17, 21], [17, 22], [17, 23], [16, 23], [16, 24], [16, 25], [16, 26]]>, corr<[[14, 20], [14, 21], [14, 22], [14, 23]]>, corr<[[14, 20], [14, 21], [14, 22], [14, 23]]>, corr<[[14, 20], [14, 21], [14, 22], [14, 23]]>, corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>, corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>, corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>, corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>, corr<[[14, 20], [15, 20], [16, 20], [17, 20], [17, 21], [17, 22], [17, 23], [16, 23], [16, 24], [16, 25], [16, 26]]>, corr<[[14, 20], [14, 21], [14, 22], [14, 23]]>, corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>, corr<[[14, 20], [14, 21], [14, 22], [14, 23]]>, corr<[[14, 15], [14, 16], [14, 17], [14, 18], [14, 19], [14, 20]]>]
5 - not blocked. crossroad [14, 15] is red, goes for the other
PANIC MODE IS RETURNING NEXT MOVE: None
